(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    660549,      12786]
NotebookOptionsPosition[    650766,      12628]
NotebookOutlinePosition[    651160,      12644]
CellTagsIndexPosition[    651117,      12641]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"confirmed", " ", "=", " ", "\n", "  ", 
   RowBox[{
   "Import", "[", 
    "\"\<https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/\
csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_\
global.csv\>\"", "\n", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"confirmed", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"-", "1"}], "]"}], "]"}]}], "Input",
 CellLabel->
  "In[113]:=",ExpressionUUID->"255cf41d-e677-4f67-b14d-45f5e98b2c1f"],

Cell[BoxData["\<\"4/9/20\"\>"], "Output",
 CellChangeTimes->{3.7951977102128983`*^9, 3.795454759737315*^9, 
  3.7954549476759663`*^9, 3.79545681912005*^9, 3.795535224613372*^9, 
  3.795536139362574*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"0b5d8f3e-5ce7-4852-832f-49f3f6ba73c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"deaths", " ", "=", " ", 
   RowBox[{
   "Import", "[", "\n", "   ", 
    "\"\<https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/\
csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_\
global.csv\>\"", "\n", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"deaths", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"-", "1"}], "]"}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{3.795197721507924*^9},
 CellLabel->
  "In[115]:=",ExpressionUUID->"c1be3434-a930-40d2-9d7e-2a13779cf06f"],

Cell[BoxData["\<\"4/9/20\"\>"], "Output",
 CellChangeTimes->{3.795197723357127*^9, 3.7954547624909573`*^9, 
  3.795454949290338*^9, 3.7954568197685947`*^9, 3.795535227781147*^9, 
  3.795536142270019*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"404221ad-53dc-4f00-bb63-f163763af1d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"confirmedData", " ", "=", " ", "\n", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"AssociationThread", "[", 
      RowBox[{
       RowBox[{"First", "@", "confirmed"}], ",", " ", "#"}], "]"}], " ", 
     "&"}], " ", "/@", " ", 
    RowBox[{"Rest", "[", "confirmed", "]"}]}], " ", "//", " ", 
   "Dataset"}]}]], "Input",
 CellLabel->
  "In[117]:=",ExpressionUUID->"8963f6a8-ce8f-4e99-97b3-6d36257e73cc"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
       Association[
        "InitialData" -> 
         TypeSystem`CacheKey[
          5691811759257979486377459716505744914115271146635056269704], 
         "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
           
           Association[{All, "Province/State"} -> 1, {All, "Country/Region"} -> 
            1, {All, "Lat"} -> 1, {All, "Long"} -> 1, {All, "1/22/20"} -> 
            1, {All, "1/23/20"} -> 1, {All, "1/24/20"} -> 1, {All, "1/25/20"} -> 
            1, {All, "1/26/20"} -> 1, {All, "1/27/20"} -> 1, {All, "1/28/20"} -> 
            1, {All, "1/29/20"} -> 1, {All, "1/30/20"} -> 1, {All, "1/31/20"} -> 
            1, {All, "2/1/20"} -> 1, {All, "2/2/20"} -> 1, {All, "2/3/20"} -> 
            1, {All, "2/4/20"} -> 1, {All, "2/5/20"} -> 1, {All, "2/6/20"} -> 
            1, {All, "2/7/20"} -> 1, {All, "2/8/20"} -> 1, {All, "2/9/20"} -> 
            1, {All, "2/10/20"} -> 1, {All, "2/11/20"} -> 1, {All, "2/12/20"} -> 
            1, {All, "2/13/20"} -> 1, {All, "2/14/20"} -> 1, {All, "2/15/20"} -> 
            1, {All, "2/16/20"} -> 1, {All, "2/17/20"} -> 1, {All, "2/18/20"} -> 
            1, {All, "2/19/20"} -> 1, {All, "2/20/20"} -> 1, {All, "2/21/20"} -> 
            1, {All, "2/22/20"} -> 1, {All, "2/23/20"} -> 1, {All, "2/24/20"} -> 
            1, {All, "2/25/20"} -> 1, {All, "2/26/20"} -> 1, {All, "2/27/20"} -> 
            1, {All, "2/28/20"} -> 1, {All, "2/29/20"} -> 1, {All, "3/1/20"} -> 
            1, {All, "3/2/20"} -> 1, {All, "3/3/20"} -> 1, {All, "3/4/20"} -> 
            1, {All, "3/5/20"} -> 1, {All, "3/6/20"} -> 1, {All, "3/7/20"} -> 
            1, {All, "3/8/20"} -> 1, {All, "3/9/20"} -> 1, {All, "3/10/20"} -> 
            1, {All, "3/11/20"} -> 1, {All, "3/12/20"} -> 1, {All, "3/13/20"} -> 
            1, {All, "3/14/20"} -> 1, {All, "3/15/20"} -> 1, {All, "3/16/20"} -> 
            1, {All, "3/17/20"} -> 1, {All, "3/18/20"} -> 1, {All, "3/19/20"} -> 
            1, {All, "3/20/20"} -> 1, {All, "3/21/20"} -> 1, {All, "3/22/20"} -> 
            1, {All, "3/23/20"} -> 1, {All, "3/24/20"} -> 1, {All, "3/25/20"} -> 
            1, {All, "3/26/20"} -> 1, {All, "3/27/20"} -> 1, {All, "3/28/20"} -> 
            1, {All, "3/29/20"} -> 1, {All, "3/30/20"} -> 1, {All, "3/31/20"} -> 
            1, {All, "4/1/20"} -> 1, {All, "4/2/20"} -> 1, {All, "4/3/20"} -> 
            1, {All, "4/4/20"} -> 1, {All, "4/5/20"} -> 1, {All, "4/6/20"} -> 
            1, {All, "4/7/20"} -> 1, {All, "4/8/20"} -> 1, {All, "4/9/20"} -> 
            1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "Province/State" -> 
                TypeSystem`PackageScope`AtomShape[144.00000000000003`], 
                "Country/Region" -> 
                TypeSystem`PackageScope`AtomShape[144.00000000000003`], "Lat" -> 
                TypeSystem`PackageScope`AtomShape[60], "Long" -> 
                TypeSystem`PackageScope`AtomShape[60], "1/22/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/23/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/24/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/25/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/26/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/27/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/28/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/29/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/30/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/31/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/1/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/2/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/3/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/4/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/5/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/6/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/7/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/8/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/9/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/10/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/11/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/12/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/13/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/14/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/15/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/16/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/17/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/18/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/19/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/20/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/21/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/22/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/23/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/24/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/25/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/26/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/27/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/28/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/29/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/1/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/2/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/3/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/4/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/5/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/6/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/7/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/8/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/9/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/10/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/11/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/12/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/13/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/14/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/15/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/16/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/17/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/18/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/19/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/20/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/21/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/22/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/23/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/24/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/25/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/26/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/27/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/28/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/29/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/30/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/31/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/1/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/2/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/3/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/4/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/5/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/6/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/7/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/8/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/9/20" -> 
                TypeSystem`PackageScope`AtomShape[34]]], 
              DirectedInfinity[1], 10, {All}]], 20, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Province/State", "Country/Region", "Lat", "Long", "1/22/20", 
             "1/23/20", "1/24/20", "1/25/20", "1/26/20", "1/27/20", "1/28/20",
              "1/29/20", "1/30/20", "1/31/20", "2/1/20", "2/2/20", "2/3/20", 
             "2/4/20", "2/5/20", "2/6/20", "2/7/20", "2/8/20", "2/9/20", 
             "2/10/20", "2/11/20", "2/12/20", "2/13/20", "2/14/20", "2/15/20",
              "2/16/20", "2/17/20", "2/18/20", "2/19/20", "2/20/20", 
             "2/21/20", "2/22/20", "2/23/20", "2/24/20", "2/25/20", "2/26/20",
              "2/27/20", "2/28/20", "2/29/20", "3/1/20", "3/2/20", "3/3/20", 
             "3/4/20", "3/5/20", "3/6/20", "3/7/20", "3/8/20", "3/9/20", 
             "3/10/20", "3/11/20", "3/12/20", "3/13/20", "3/14/20", "3/15/20",
              "3/16/20", "3/17/20", "3/18/20", "3/19/20", "3/20/20", 
             "3/21/20", "3/22/20", "3/23/20", "3/24/20", "3/25/20", "3/26/20",
              "3/27/20", "3/28/20", "3/29/20", "3/30/20", "3/31/20", "4/1/20",
              "4/2/20", "4/3/20", "4/4/20", "4/5/20", "4/6/20", "4/7/20", 
             "4/8/20", "4/9/20"}, {
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer]}], 263], "Meta" -> 
         Association["ID" -> 260580158835760], "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[
           Association[{All, "Province/State"} -> 1, {All, "Country/Region"} -> 
            1, {All, "Lat"} -> 1, {All, "Long"} -> 1, {All, "1/22/20"} -> 
            1, {All, "1/23/20"} -> 1, {All, "1/24/20"} -> 1, {All, "1/25/20"} -> 
            1, {All, "1/26/20"} -> 1, {All, "1/27/20"} -> 1, {All, "1/28/20"} -> 
            1, {All, "1/29/20"} -> 1, {All, "1/30/20"} -> 1, {All, "1/31/20"} -> 
            1, {All, "2/1/20"} -> 1, {All, "2/2/20"} -> 1, {All, "2/3/20"} -> 
            1, {All, "2/4/20"} -> 1, {All, "2/5/20"} -> 1, {All, "2/6/20"} -> 
            1, {All, "2/7/20"} -> 1, {All, "2/8/20"} -> 1, {All, "2/9/20"} -> 
            1, {All, "2/10/20"} -> 1, {All, "2/11/20"} -> 1, {All, "2/12/20"} -> 
            1, {All, "2/13/20"} -> 1, {All, "2/14/20"} -> 1, {All, "2/15/20"} -> 
            1, {All, "2/16/20"} -> 1, {All, "2/17/20"} -> 1, {All, "2/18/20"} -> 
            1, {All, "2/19/20"} -> 1, {All, "2/20/20"} -> 1, {All, "2/21/20"} -> 
            1, {All, "2/22/20"} -> 1, {All, "2/23/20"} -> 1, {All, "2/24/20"} -> 
            1, {All, "2/25/20"} -> 1, {All, "2/26/20"} -> 1, {All, "2/27/20"} -> 
            1, {All, "2/28/20"} -> 1, {All, "2/29/20"} -> 1, {All, "3/1/20"} -> 
            1, {All, "3/2/20"} -> 1, {All, "3/3/20"} -> 1, {All, "3/4/20"} -> 
            1, {All, "3/5/20"} -> 1, {All, "3/6/20"} -> 1, {All, "3/7/20"} -> 
            1, {All, "3/8/20"} -> 1, {All, "3/9/20"} -> 1, {All, "3/10/20"} -> 
            1, {All, "3/11/20"} -> 1, {All, "3/12/20"} -> 1, {All, "3/13/20"} -> 
            1, {All, "3/14/20"} -> 1, {All, "3/15/20"} -> 1, {All, "3/16/20"} -> 
            1, {All, "3/17/20"} -> 1, {All, "3/18/20"} -> 1, {All, "3/19/20"} -> 
            1, {All, "3/20/20"} -> 1, {All, "3/21/20"} -> 1, {All, "3/22/20"} -> 
            1, {All, "3/23/20"} -> 1, {All, "3/24/20"} -> 1, {All, "3/25/20"} -> 
            1, {All, "3/26/20"} -> 1, {All, "3/27/20"} -> 1, {All, "3/28/20"} -> 
            1, {All, "3/29/20"} -> 1, {All, "3/30/20"} -> 1, {All, "3/31/20"} -> 
            1, {All, "4/1/20"} -> 1, {All, "4/2/20"} -> 1, {All, "4/3/20"} -> 
            1, {All, "4/4/20"} -> 1, {All, "4/5/20"} -> 1, {All, "4/6/20"} -> 
            1, {All, "4/7/20"} -> 1, {All, "4/8/20"} -> 1, {All, "4/9/20"} -> 
            1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "Province/State" -> 
                TypeSystem`PackageScope`AtomShape[144.00000000000003`], 
                "Country/Region" -> 
                TypeSystem`PackageScope`AtomShape[144.00000000000003`], "Lat" -> 
                TypeSystem`PackageScope`AtomShape[60], "Long" -> 
                TypeSystem`PackageScope`AtomShape[60], "1/22/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/23/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/24/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/25/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/26/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/27/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/28/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/29/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/30/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/31/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/1/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/2/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/3/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/4/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/5/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/6/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/7/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/8/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/9/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/10/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/11/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/12/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/13/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/14/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/15/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/16/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/17/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/18/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/19/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/20/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/21/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/22/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/23/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/24/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/25/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/26/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/27/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/28/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/29/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/1/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/2/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/3/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/4/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/5/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/6/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/7/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/8/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/9/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/10/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/11/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/12/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/13/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/14/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/15/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/16/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/17/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/18/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/19/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/20/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/21/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/22/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/23/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/24/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/25/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/26/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/27/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/28/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/29/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/30/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/31/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/1/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/2/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/3/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/4/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/5/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/6/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/7/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/8/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/9/20" -> 
                TypeSystem`PackageScope`AtomShape[34]]], 
              DirectedInfinity[1], 10, {All}]], 20, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Province/State", "Country/Region", "Lat", "Long", "1/22/20", 
             "1/23/20", "1/24/20", "1/25/20", "1/26/20", "1/27/20", "1/28/20",
              "1/29/20", "1/30/20", "1/31/20", "2/1/20", "2/2/20", "2/3/20", 
             "2/4/20", "2/5/20", "2/6/20", "2/7/20", "2/8/20", "2/9/20", 
             "2/10/20", "2/11/20", "2/12/20", "2/13/20", "2/14/20", "2/15/20",
              "2/16/20", "2/17/20", "2/18/20", "2/19/20", "2/20/20", 
             "2/21/20", "2/22/20", "2/23/20", "2/24/20", "2/25/20", "2/26/20",
              "2/27/20", "2/28/20", "2/29/20", "3/1/20", "3/2/20", "3/3/20", 
             "3/4/20", "3/5/20", "3/6/20", "3/7/20", "3/8/20", "3/9/20", 
             "3/10/20", "3/11/20", "3/12/20", "3/13/20", "3/14/20", "3/15/20",
              "3/16/20", "3/17/20", "3/18/20", "3/19/20", "3/20/20", 
             "3/21/20", "3/22/20", "3/23/20", "3/24/20", "3/25/20", "3/26/20",
              "3/27/20", "3/28/20", "3/29/20", "3/30/20", "3/31/20", "4/1/20",
              "4/2/20", "4/3/20", "4/4/20", "4/5/20", "4/6/20", "4/7/20", 
             "4/8/20", "4/9/20"}, {
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer]}], 263], "Path" -> {}, 
         "BaseIndices" -> {}, "DisplayedRowCount" -> 20, 
         "DisplayedColumnCount" -> 10, "DataRowCount" -> 263, 
         "DataColumnCount" -> 83, "SortPaths" -> {}, "SortDirections" -> {}, 
         "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Province/State", 
                    Style[
                    "Province/State", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Province/State"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Province/State"}, "ColumnHeader", True], "Mouse"], 
                    " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Country/Region", 
                    Style[
                    "Country/Region", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Country/Region"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Country/Region"}, "ColumnHeader", True], "Mouse"], 
                    " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Lat", 
                    Style[
                    "Lat", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Lat"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Lat"}, "ColumnHeader", True], "Mouse"], " ", ""}], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Long", 
                    Style[
                    "Long", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Long"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Long"}, "ColumnHeader", True], "Mouse"], " ", ""}], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["1/22/20", 
                    Style[
                    "1/22/20", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "1/22/20"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "1/22/20"}, "ColumnHeader", True], "Mouse"], " ", 
                    ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["1/23/20", 
                    Style[
                    "1/23/20", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "1/23/20"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "1/23/20"}, "ColumnHeader", True], "Mouse"], " ", 
                    ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["1/24/20", 
                    Style[
                    "1/24/20", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "1/24/20"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "1/24/20"}, "ColumnHeader", True], "Mouse"], " ", 
                    ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["1/25/20", 
                    Style[
                    "1/25/20", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "1/25/20"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "1/25/20"}, "ColumnHeader", True], "Mouse"], " ", 
                    ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["1/26/20", 
                    Style[
                    "1/26/20", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "1/26/20"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "1/26/20"}, "ColumnHeader", True], "Mouse"], " ", 
                    ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["1/27/20", 
                    Style[
                    "1/27/20", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "1/27/20"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "1/27/20"}, "ColumnHeader", True], "Mouse"], " ", 
                    ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Afghanistan", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["33.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["65.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Albania", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["41.1533"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["20.1683"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Algeria", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["28.0339"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.6596"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Andorra", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["42.5063"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.5218"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Angola", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-11.2027"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["17.8739"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Antigua and Barbuda", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["17.0608"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-61.7964"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Argentina", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-38.4161"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-63.6167"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Armenia", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["40.0691"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["45.0382"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Australian Capital Territory", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Australia", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-35.4735"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["149.012"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["New South Wales", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Australia", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-33.8688"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["151.209"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Northern Territory", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Australia", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-12.4634"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["130.846"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Queensland", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Australia", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-28.0167"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["153.4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["South Australia", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Australia", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-34.9285"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["138.601"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Tasmania", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Australia", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-41.4545"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["145.971"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Victoria", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Australia", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-37.8136"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["144.963"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Western Australia", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Australia", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-31.9505"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["115.86"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Austria", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["47.5162"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["14.5501"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Azerbaijan", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["40.1431"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["47.5769"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Bahamas", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25.0343"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-77.3963"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Bahrain", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["26.0275"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["50.55"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 263, 1], {1, 263 - -20 + 1}], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 263, 1], {1, 263 - -20 + 1}], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    263, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    263, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 263, 1], {1, 263 - 20 + 1}], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 263, 1], {1, 263 - 20 + 1}], Appearance -> 
                    None]}], ContextMenu -> {}], 
                    Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ - 10 
                    If[True, 83, 1], {1, 83 - -10 + 1}], Appearance -> None], 
                    
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ - 10 
                    If[False, 83, 1], {1, 83 - -10 + 1}], Appearance -> None],
                     " ", 
                    Style[
                    Mouseover[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    83, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    83, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 83, 1], {1, 83 - 10 + 1}], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 83, 1], {1, 83 - 10 + 1}], Appearance -> 
                    None]}], ContextMenu -> {}], 
                    Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
                 Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], 
                    Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], 
                    Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
                "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
              Left, Dividers -> All, FrameStyle -> 
              GrayLevel[0.7490196078431373], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
          TypeSystem`NestedGrid`PackagePrivate`releaseLocalHold[
           TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
          TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
          TypeSystem`NestedGrid`PackagePrivate`releaseLocalHold[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]], StandardForm],
         ImageSizeCache -> {832., {300.134033203125, 305.865966796875}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {832., {300.134033203125, 305.865966796875}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> 
      Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
        Needs["Dataset`"]; 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]], 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 5691811759257979486377459716505744914115271146635056269704,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.795197734402111*^9, 3.795454768419404*^9, 
  3.795454952330908*^9, 3.795456821295623*^9, 3.7955352346256237`*^9, 
  3.7955361442875023`*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"5b4b1896-59b5-4560-8c10-ff34a08e927c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"deathData", " ", "=", " ", "\n", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"AssociationThread", "[", 
      RowBox[{
       RowBox[{"First", "@", "deaths"}], ",", " ", "#"}], "]"}], " ", "&"}], 
    " ", "/@", " ", 
    RowBox[{"Rest", "[", "deaths", "]"}]}], " ", "//", " ", 
   "Dataset"}]}]], "Input",
 CellLabel->
  "In[118]:=",ExpressionUUID->"5d06a840-136d-4b62-bd15-c9242e45b9f1"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
       Association[
        "InitialData" -> 
         TypeSystem`CacheKey[
          5691811759257979486377459716505744914133717890708765827848], 
         "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
           
           Association[{All, "Province/State"} -> 1, {All, "Country/Region"} -> 
            1, {All, "Lat"} -> 1, {All, "Long"} -> 1, {All, "1/22/20"} -> 
            1, {All, "1/23/20"} -> 1, {All, "1/24/20"} -> 1, {All, "1/25/20"} -> 
            1, {All, "1/26/20"} -> 1, {All, "1/27/20"} -> 1, {All, "1/28/20"} -> 
            1, {All, "1/29/20"} -> 1, {All, "1/30/20"} -> 1, {All, "1/31/20"} -> 
            1, {All, "2/1/20"} -> 1, {All, "2/2/20"} -> 1, {All, "2/3/20"} -> 
            1, {All, "2/4/20"} -> 1, {All, "2/5/20"} -> 1, {All, "2/6/20"} -> 
            1, {All, "2/7/20"} -> 1, {All, "2/8/20"} -> 1, {All, "2/9/20"} -> 
            1, {All, "2/10/20"} -> 1, {All, "2/11/20"} -> 1, {All, "2/12/20"} -> 
            1, {All, "2/13/20"} -> 1, {All, "2/14/20"} -> 1, {All, "2/15/20"} -> 
            1, {All, "2/16/20"} -> 1, {All, "2/17/20"} -> 1, {All, "2/18/20"} -> 
            1, {All, "2/19/20"} -> 1, {All, "2/20/20"} -> 1, {All, "2/21/20"} -> 
            1, {All, "2/22/20"} -> 1, {All, "2/23/20"} -> 1, {All, "2/24/20"} -> 
            1, {All, "2/25/20"} -> 1, {All, "2/26/20"} -> 1, {All, "2/27/20"} -> 
            1, {All, "2/28/20"} -> 1, {All, "2/29/20"} -> 1, {All, "3/1/20"} -> 
            1, {All, "3/2/20"} -> 1, {All, "3/3/20"} -> 1, {All, "3/4/20"} -> 
            1, {All, "3/5/20"} -> 1, {All, "3/6/20"} -> 1, {All, "3/7/20"} -> 
            1, {All, "3/8/20"} -> 1, {All, "3/9/20"} -> 1, {All, "3/10/20"} -> 
            1, {All, "3/11/20"} -> 1, {All, "3/12/20"} -> 1, {All, "3/13/20"} -> 
            1, {All, "3/14/20"} -> 1, {All, "3/15/20"} -> 1, {All, "3/16/20"} -> 
            1, {All, "3/17/20"} -> 1, {All, "3/18/20"} -> 1, {All, "3/19/20"} -> 
            1, {All, "3/20/20"} -> 1, {All, "3/21/20"} -> 1, {All, "3/22/20"} -> 
            1, {All, "3/23/20"} -> 1, {All, "3/24/20"} -> 1, {All, "3/25/20"} -> 
            1, {All, "3/26/20"} -> 1, {All, "3/27/20"} -> 1, {All, "3/28/20"} -> 
            1, {All, "3/29/20"} -> 1, {All, "3/30/20"} -> 1, {All, "3/31/20"} -> 
            1, {All, "4/1/20"} -> 1, {All, "4/2/20"} -> 1, {All, "4/3/20"} -> 
            1, {All, "4/4/20"} -> 1, {All, "4/5/20"} -> 1, {All, "4/6/20"} -> 
            1, {All, "4/7/20"} -> 1, {All, "4/8/20"} -> 1, {All, "4/9/20"} -> 
            1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "Province/State" -> 
                TypeSystem`PackageScope`AtomShape[144.00000000000003`], 
                "Country/Region" -> 
                TypeSystem`PackageScope`AtomShape[144.00000000000003`], "Lat" -> 
                TypeSystem`PackageScope`AtomShape[60], "Long" -> 
                TypeSystem`PackageScope`AtomShape[60], "1/22/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/23/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/24/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/25/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/26/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/27/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/28/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/29/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/30/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/31/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/1/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/2/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/3/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/4/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/5/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/6/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/7/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/8/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/9/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/10/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/11/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/12/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/13/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/14/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/15/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/16/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/17/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/18/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/19/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/20/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/21/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/22/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/23/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/24/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/25/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/26/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/27/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/28/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/29/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/1/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/2/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/3/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/4/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/5/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/6/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/7/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/8/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/9/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/10/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/11/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/12/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/13/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/14/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/15/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/16/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/17/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/18/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/19/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/20/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/21/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/22/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/23/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/24/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/25/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/26/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/27/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/28/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/29/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/30/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/31/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/1/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/2/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/3/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/4/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/5/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/6/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/7/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/8/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/9/20" -> 
                TypeSystem`PackageScope`AtomShape[34]]], 
              DirectedInfinity[1], 10, {All}]], 20, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Province/State", "Country/Region", "Lat", "Long", "1/22/20", 
             "1/23/20", "1/24/20", "1/25/20", "1/26/20", "1/27/20", "1/28/20",
              "1/29/20", "1/30/20", "1/31/20", "2/1/20", "2/2/20", "2/3/20", 
             "2/4/20", "2/5/20", "2/6/20", "2/7/20", "2/8/20", "2/9/20", 
             "2/10/20", "2/11/20", "2/12/20", "2/13/20", "2/14/20", "2/15/20",
              "2/16/20", "2/17/20", "2/18/20", "2/19/20", "2/20/20", 
             "2/21/20", "2/22/20", "2/23/20", "2/24/20", "2/25/20", "2/26/20",
              "2/27/20", "2/28/20", "2/29/20", "3/1/20", "3/2/20", "3/3/20", 
             "3/4/20", "3/5/20", "3/6/20", "3/7/20", "3/8/20", "3/9/20", 
             "3/10/20", "3/11/20", "3/12/20", "3/13/20", "3/14/20", "3/15/20",
              "3/16/20", "3/17/20", "3/18/20", "3/19/20", "3/20/20", 
             "3/21/20", "3/22/20", "3/23/20", "3/24/20", "3/25/20", "3/26/20",
              "3/27/20", "3/28/20", "3/29/20", "3/30/20", "3/31/20", "4/1/20",
              "4/2/20", "4/3/20", "4/4/20", "4/5/20", "4/6/20", "4/7/20", 
             "4/8/20", "4/9/20"}, {
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer]}], 263], "Meta" -> 
         Association["ID" -> 260584453803060], "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[
           Association[{All, "Province/State"} -> 1, {All, "Country/Region"} -> 
            1, {All, "Lat"} -> 1, {All, "Long"} -> 1, {All, "1/22/20"} -> 
            1, {All, "1/23/20"} -> 1, {All, "1/24/20"} -> 1, {All, "1/25/20"} -> 
            1, {All, "1/26/20"} -> 1, {All, "1/27/20"} -> 1, {All, "1/28/20"} -> 
            1, {All, "1/29/20"} -> 1, {All, "1/30/20"} -> 1, {All, "1/31/20"} -> 
            1, {All, "2/1/20"} -> 1, {All, "2/2/20"} -> 1, {All, "2/3/20"} -> 
            1, {All, "2/4/20"} -> 1, {All, "2/5/20"} -> 1, {All, "2/6/20"} -> 
            1, {All, "2/7/20"} -> 1, {All, "2/8/20"} -> 1, {All, "2/9/20"} -> 
            1, {All, "2/10/20"} -> 1, {All, "2/11/20"} -> 1, {All, "2/12/20"} -> 
            1, {All, "2/13/20"} -> 1, {All, "2/14/20"} -> 1, {All, "2/15/20"} -> 
            1, {All, "2/16/20"} -> 1, {All, "2/17/20"} -> 1, {All, "2/18/20"} -> 
            1, {All, "2/19/20"} -> 1, {All, "2/20/20"} -> 1, {All, "2/21/20"} -> 
            1, {All, "2/22/20"} -> 1, {All, "2/23/20"} -> 1, {All, "2/24/20"} -> 
            1, {All, "2/25/20"} -> 1, {All, "2/26/20"} -> 1, {All, "2/27/20"} -> 
            1, {All, "2/28/20"} -> 1, {All, "2/29/20"} -> 1, {All, "3/1/20"} -> 
            1, {All, "3/2/20"} -> 1, {All, "3/3/20"} -> 1, {All, "3/4/20"} -> 
            1, {All, "3/5/20"} -> 1, {All, "3/6/20"} -> 1, {All, "3/7/20"} -> 
            1, {All, "3/8/20"} -> 1, {All, "3/9/20"} -> 1, {All, "3/10/20"} -> 
            1, {All, "3/11/20"} -> 1, {All, "3/12/20"} -> 1, {All, "3/13/20"} -> 
            1, {All, "3/14/20"} -> 1, {All, "3/15/20"} -> 1, {All, "3/16/20"} -> 
            1, {All, "3/17/20"} -> 1, {All, "3/18/20"} -> 1, {All, "3/19/20"} -> 
            1, {All, "3/20/20"} -> 1, {All, "3/21/20"} -> 1, {All, "3/22/20"} -> 
            1, {All, "3/23/20"} -> 1, {All, "3/24/20"} -> 1, {All, "3/25/20"} -> 
            1, {All, "3/26/20"} -> 1, {All, "3/27/20"} -> 1, {All, "3/28/20"} -> 
            1, {All, "3/29/20"} -> 1, {All, "3/30/20"} -> 1, {All, "3/31/20"} -> 
            1, {All, "4/1/20"} -> 1, {All, "4/2/20"} -> 1, {All, "4/3/20"} -> 
            1, {All, "4/4/20"} -> 1, {All, "4/5/20"} -> 1, {All, "4/6/20"} -> 
            1, {All, "4/7/20"} -> 1, {All, "4/8/20"} -> 1, {All, "4/9/20"} -> 
            1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "Province/State" -> 
                TypeSystem`PackageScope`AtomShape[144.00000000000003`], 
                "Country/Region" -> 
                TypeSystem`PackageScope`AtomShape[144.00000000000003`], "Lat" -> 
                TypeSystem`PackageScope`AtomShape[60], "Long" -> 
                TypeSystem`PackageScope`AtomShape[60], "1/22/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/23/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/24/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/25/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/26/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/27/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/28/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/29/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/30/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "1/31/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/1/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/2/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/3/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/4/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/5/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/6/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/7/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/8/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/9/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/10/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/11/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/12/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/13/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/14/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/15/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/16/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/17/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/18/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/19/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/20/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/21/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/22/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/23/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/24/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/25/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/26/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/27/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/28/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "2/29/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/1/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/2/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/3/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/4/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/5/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/6/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/7/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/8/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/9/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/10/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/11/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/12/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/13/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/14/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/15/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/16/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/17/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/18/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/19/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/20/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/21/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/22/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/23/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/24/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/25/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/26/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/27/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/28/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/29/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/30/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "3/31/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/1/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/2/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/3/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/4/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/5/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/6/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/7/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/8/20" -> 
                TypeSystem`PackageScope`AtomShape[34], "4/9/20" -> 
                TypeSystem`PackageScope`AtomShape[34]]], 
              DirectedInfinity[1], 10, {All}]], 20, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "Province/State", "Country/Region", "Lat", "Long", "1/22/20", 
             "1/23/20", "1/24/20", "1/25/20", "1/26/20", "1/27/20", "1/28/20",
              "1/29/20", "1/30/20", "1/31/20", "2/1/20", "2/2/20", "2/3/20", 
             "2/4/20", "2/5/20", "2/6/20", "2/7/20", "2/8/20", "2/9/20", 
             "2/10/20", "2/11/20", "2/12/20", "2/13/20", "2/14/20", "2/15/20",
              "2/16/20", "2/17/20", "2/18/20", "2/19/20", "2/20/20", 
             "2/21/20", "2/22/20", "2/23/20", "2/24/20", "2/25/20", "2/26/20",
              "2/27/20", "2/28/20", "2/29/20", "3/1/20", "3/2/20", "3/3/20", 
             "3/4/20", "3/5/20", "3/6/20", "3/7/20", "3/8/20", "3/9/20", 
             "3/10/20", "3/11/20", "3/12/20", "3/13/20", "3/14/20", "3/15/20",
              "3/16/20", "3/17/20", "3/18/20", "3/19/20", "3/20/20", 
             "3/21/20", "3/22/20", "3/23/20", "3/24/20", "3/25/20", "3/26/20",
              "3/27/20", "3/28/20", "3/29/20", "3/30/20", "3/31/20", "4/1/20",
              "4/2/20", "4/3/20", "4/4/20", "4/5/20", "4/6/20", "4/7/20", 
             "4/8/20", "4/9/20"}, {
             TypeSystem`Atom[String], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer]}], 263], "Path" -> {}, 
         "BaseIndices" -> {}, "DisplayedRowCount" -> 20, 
         "DisplayedColumnCount" -> 10, "DataRowCount" -> 263, 
         "DataColumnCount" -> 83, "SortPaths" -> {}, "SortDirections" -> {}, 
         "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Province/State", 
                    Style[
                    "Province/State", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Province/State"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Province/State"}, "ColumnHeader", True], "Mouse"], 
                    " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Country/Region", 
                    Style[
                    "Country/Region", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Country/Region"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Country/Region"}, "ColumnHeader", True], "Mouse"], 
                    " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Lat", 
                    Style[
                    "Lat", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Lat"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Lat"}, "ColumnHeader", True], "Mouse"], " ", ""}], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Long", 
                    Style[
                    "Long", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Long"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Long"}, "ColumnHeader", True], "Mouse"], " ", ""}], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["1/22/20", 
                    Style[
                    "1/22/20", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "1/22/20"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "1/22/20"}, "ColumnHeader", True], "Mouse"], " ", 
                    ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["1/23/20", 
                    Style[
                    "1/23/20", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "1/23/20"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "1/23/20"}, "ColumnHeader", True], "Mouse"], " ", 
                    ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["1/24/20", 
                    Style[
                    "1/24/20", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "1/24/20"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "1/24/20"}, "ColumnHeader", True], "Mouse"], " ", 
                    ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["1/25/20", 
                    Style[
                    "1/25/20", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "1/25/20"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "1/25/20"}, "ColumnHeader", True], "Mouse"], " ", 
                    ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["1/26/20", 
                    Style[
                    "1/26/20", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "1/26/20"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "1/26/20"}, "ColumnHeader", True], "Mouse"], " ", 
                    ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["1/27/20", 
                    Style[
                    "1/27/20", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "1/27/20"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "1/27/20"}, "ColumnHeader", True], "Mouse"], " ", 
                    ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Afghanistan", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["33.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["65.0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Albania", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["41.1533"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["20.1683"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Algeria", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["28.0339"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.6596"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Andorra", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["42.5063"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1.5218"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Angola", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-11.2027"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["17.8739"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Antigua and Barbuda", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["17.0608"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-61.7964"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Argentina", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-38.4161"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-63.6167"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Armenia", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["40.0691"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["45.0382"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Australian Capital Territory", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Australia", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-35.4735"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["149.012"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["New South Wales", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Australia", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-33.8688"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["151.209"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Northern Territory", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Australia", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-12.4634"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["130.846"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Queensland", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Australia", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-28.0167"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["153.4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["South Australia", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Australia", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-34.9285"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["138.601"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Tasmania", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Australia", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-41.4545"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["145.971"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Victoria", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Australia", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-37.8136"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["144.963"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["Western Australia", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Australia", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-31.9505"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["115.86"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Austria", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["47.5162"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["14.5501"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Azerbaijan", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["40.1431"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["47.5769"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Bahamas", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["25.0343"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-77.3963"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Province/State"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["Bahrain", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Country/Region"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["26.0275"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Lat"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["50.55"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Long"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["1/22/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["1/23/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["1/24/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["1/25/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["1/26/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["1/27/20"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 263, 1], {1, 263 - -20 + 1}], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 263, 1], {1, 263 - -20 + 1}], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    263, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    263, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 263, 1], {1, 263 - 20 + 1}], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 263, 1], {1, 263 - 20 + 1}], Appearance -> 
                    None]}], ContextMenu -> {}], 
                    Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ - 10 
                    If[True, 83, 1], {1, 83 - -10 + 1}], Appearance -> None], 
                    
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ - 10 
                    If[False, 83, 1], {1, 83 - -10 + 1}], Appearance -> None],
                     " ", 
                    Style[
                    Mouseover[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    83, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    83, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 83, 1], {1, 83 - 10 + 1}], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 83, 1], {1, 83 - 10 + 1}], Appearance -> 
                    None]}], ContextMenu -> {}], 
                    Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
                 Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], 
                    Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], 
                    Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
                "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
              Left, Dividers -> All, FrameStyle -> 
              GrayLevel[0.7490196078431373], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
          TypeSystem`NestedGrid`PackagePrivate`releaseLocalHold[
           TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
          TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
          TypeSystem`NestedGrid`PackagePrivate`releaseLocalHold[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]], StandardForm],
         ImageSizeCache -> {832., {300.134033203125, 305.865966796875}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {832., {300.134033203125, 305.865966796875}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> 
      Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
        Needs["Dataset`"]; 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]], 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 5691811759257979486377459716505744914133717890708765827848,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7951977531154633`*^9, 3.795454786998816*^9, 
  3.795454956354195*^9, 3.795456828566444*^9, 3.795535242212063*^9, 
  3.795536148102076*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"ab08f123-d3a1-41d9-ac1a-e7c93052752a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"keys", " ", "=", " ", 
   RowBox[{"Keys", "[", 
    RowBox[{"First", "@", 
     RowBox[{"Normal", "@", "confirmedData"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Keys", "[", 
   RowBox[{"First", "@", 
    RowBox[{"Normal", "@", "deathData"}]}], "]"}], ";"}], "\n", 
 RowBox[{"%", " ", "==", " ", "keys"}]}], "Input",
 CellLabel->
  "In[119]:=",ExpressionUUID->"c756a31a-e638-476f-8a82-eb5db928da77"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.79519776669178*^9, 3.7954549604252167`*^9, 
  3.795456843831152*^9, 3.7955352503523407`*^9, 3.795536151874525*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"78bb8f3a-fc81-4de4-acaa-796e3475013f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"logistic", " ", "=", " ", 
  RowBox[{"L", "/", 
   RowBox[{"(", 
    RowBox[{"1", " ", "+", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "k"}], " ", 
       RowBox[{"(", 
        RowBox[{"t", " ", "-", " ", "t0"}], ")"}]}], "]"}]}], ")"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"for", " ", "NonlinearModelFit"}], "*)"}]}]}]], "Input",
 CellLabel->
  "In[122]:=",ExpressionUUID->"fbff30f4-0f87-4ccd-b55e-5d0228481f47"],

Cell[BoxData[
 FractionBox["L", 
  RowBox[{"1", "+", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "k"}], " ", 
     RowBox[{"(", 
      RowBox[{"t", "-", "t0"}], ")"}]}]]}]]], "Output",
 CellChangeTimes->{3.7955352736479607`*^9, 3.795536153009557*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"9ab0308e-5048-45e8-b46d-f40caca675eb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Germany", " ", "/", " ", "Deutschland"}], "*)"}]], "Input",
 CellChangeTimes->{{3.79545480218406*^9, 3.795454816886035*^9}, {
  3.795456854617578*^9, 
  3.7954568593203983`*^9}},ExpressionUUID->"52f238f9-dbf6-45a1-a27b-\
78b1424d1483"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DECaseData", " ", "=", " ", "\n", 
   RowBox[{"confirmedData", "@", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"#\"Country/Region\"", " ", "==", " ", "\"\<Germany\>\""}], " ",
       "&"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"DEDeathData", " ", "=", " ", "\n", " ", 
   RowBox[{"deathData", "@", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"#\"Country/Region\"", " ", "==", " ", "\"\<Germany\>\""}], " ",
       "&"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.79519885248565*^9, 3.7951988620331993`*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"cd0f066f-2759-44fe-9f14-e58b92708d11"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7955352796095343`*^9, 
  3.795535290498536*^9}},ExpressionUUID->"14bd0ad2-3f51-4e1f-90ed-\
f02c85f8ecbf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"deathCases", " ", "=", " ", "\n", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"Length", "@", "keys"}], " ", "-", " ", "4"}], "]"}], ",", 
      " ", "\n", 
      RowBox[{"Values", "@", 
       RowBox[{"Normal", "[", 
        RowBox[{"DEDeathData", "[", 
         RowBox[{"Total", ",", " ", 
          RowBox[{"Drop", "[", 
           RowBox[{"keys", ",", " ", "4"}], "]"}]}], "]"}], "]"}]}]}], "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.795198887952023*^9, 3.7951988914849997`*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"ec43c796-01d9-4e8b-a2f6-f50d497bb09f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"confirmedCases", " ", "=", " ", "\n", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"Length", "@", "keys"}], " ", "-", " ", "4"}], "]"}], ",", 
       " ", "\n", 
       RowBox[{"Values", "@", 
        RowBox[{"Normal", "[", 
         RowBox[{"DECaseData", "[", 
          RowBox[{"Total", ",", " ", 
           RowBox[{"Drop", "[", 
            RowBox[{"keys", ",", " ", "4"}], "]"}]}], "]"}], "]"}]}]}], "}"}],
      "]"}]}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{3.795197806647119*^9, 3.795198903330714*^9},
 CellLabel->
  "In[126]:=",ExpressionUUID->"1f7bbbc6-358b-4462-97ca-ace0539cf230"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Rest", "[", 
       RowBox[{"deathCases", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], "]"}], ",", " ", "\n", 
      " ", 
      RowBox[{"Differences", "[", 
       RowBox[{"deathCases", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}]}], "}"}], "]"}], 
   ",", " ", 
   RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}], ",", " ", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Daily Death Cases- Germany\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.795535318187887*^9, 3.795535319620878*^9}, {
  3.795536177815281*^9, 3.795536178538094*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"e6ca94b2-fa2c-44fe-b046-e8014f78734f"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxd00tKA1EQRuHCkUMHDhw4aEVERMT3W9O+Ex9RIwiCgygEEQQduIC7tCzB
pbgElZwa5DQ0xdf/rUs3fWvq5aPTG4mI9t/9X7nqGLpG5TF5XJ6QJ+VKnpZn
5Fl5Tp6XF+RFeUlellfkVXlNXpc35E15S96Wd+RdeU/elw/khlwPu8hxqFyO
I+VyHCuX40S5HKfK5ThTLse5cjma6UEtTeUt/NMY5C3lF5g5KOmcm0vtn865
uKIyFyWdc3VN5ZyWdJ6jNpVzW9I5NzdUzkVJ53+85TnfXafZp+B+h5p+oP+O
+kh/+ol+XHfpw9UL69i3+8o6HD36cdUbfo/yzLp7+t6puP/GOvz9xXNcfda/
MfhMYQ==
      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.3958333333333333, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Daily Death Cases- Germany\"", TraditionalForm],
  PlotRange->{{0.3958333333333333, 79.}, {0, 333.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.795197824473031*^9, 3.7951989284421263`*^9, 3.795454975380682*^9, 
   3.795456873533057*^9, {3.795535311127598*^9, 3.795535320735429*^9}, {
   3.79553616492836*^9, 3.795536179299015*^9}},
 CellLabel->
  "Out[128]=",ExpressionUUID->"8dea785f-9be5-49e0-8b54-05e819e0b9d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"deathCasesNLM", " ", "=", " ", "\n", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"deathCases", ",", " ", "\n", "logistic", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"k", ",", " ", "0.3"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"L", ",", " ", "3000"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"t0", ",", " ", "17"}], "}"}]}], "}"}], ",", " ", "t"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"deathCasesNLM", "@", "\"\<BestFitParameters\>\""}]}], "Input",
 CellLabel->
  "In[129]:=",ExpressionUUID->"b58f81a4-1441-49a3-82f8-82232589211f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"k", "\[Rule]", "0.21767128293986723`"}], ",", 
   RowBox[{"L", "\[Rule]", "4220.394433020435`"}], ",", 
   RowBox[{"t0", "\[Rule]", "77.06363349084529`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.79519783566599*^9, 3.795198931847632*^9, {3.7954549795108957`*^9, 
   3.795454986568056*^9}, 3.795456877531526*^9, 3.79553533775659*^9, 
   3.795535459171323*^9, 3.795536304961184*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"2952d492-e634-4775-a15e-7d15fbea3ec0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"deathBands", "[", "t_", "]"}], " ", "=", " ", "\n", "  ", 
   RowBox[{"deathCasesNLM", "[", 
    RowBox[{"\"\<SinglePredictionBands\>\"", ",", " ", 
     RowBox[{"ConfidenceLevel", " ", "\[Rule]", " ", "0.95"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"dth0", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"deathCasesNLM", "[", "t", "]"}], ",", " ", 
       RowBox[{"deathBands", "[", "t", "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "1", ",", " ", "\n", "    ", 
       RowBox[{
        RowBox[{
         RowBox[{"deathCases", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", "5"}]}], "}"}], ",", 
     " ", 
     RowBox[{"Filling", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"2", " ", "\[Rule]", " ", 
        RowBox[{"{", "1", "}"}]}], "}"}]}], ",", " ", "\n", "   ", 
     RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "@", "Red"}], ",", " ", 
        RowBox[{"Darker", "@", "Orange"}], ",", " ", 
        RowBox[{"Darker", "@", "Orange"}]}], "}"}]}], ",", " ", "\n", "   ", 
     RowBox[{"GridLines", " ", "\[Rule]", " ", "Automatic"}], ",", " ", 
     RowBox[{
     "PlotLabel", " ", "\[Rule]", " ", "\"\<Death Cases- Germany\>\""}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dth1", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"deathCases", ",", " ", 
     RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"dth0", ",", " ", "dth1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.795535463374086*^9, 3.795535464807846*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"47fdb9e3-6d56-4681-8902-2ec6fff52544"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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
/YTcowxb1JfY23NIe+EI1JfY2ydMJ/KXy9JJ7O2z4iPFLhvoJPZ2t9++Zwzm
aCT29pebIg2dHtJI7O0SDQV7mnJpJPb2w+/m2FTUaCT29onDHLPmzXok9nYb
yYP36//okpS337FxuDQFJPb2vgi9ovUndUjs7X6vTkuukNMgsbe/l2QR1m5V
JLG3f8jOMsr/KEZibx96QJD32xgpb2dhYFSde6NEebtJ7E+29l5DytujvUXG
A5PsKG+vnzrL5VroQXm7Z9sYY36jP+XtxIsHx5pHQilv7xERyVxzKZbydsY7
x3IX+xJ7e+ObHzcW+xJ7++2Dk62LfYm9faoy78xiX2JvX/29z2ixL7G36zbY
HVrsS+ztQ2FDqYt9ib09pMP8yWJfYm8/Ni9b3YEy9va1IjanD6KMvb3tItfO
lShjby/MNX8YjO4Pe7s9x9v0YtSX2NtdStuvGaB7xN4+tkGpKA71JfZ24/1s
qxpRX2Jvb7kYcOo/1JfY219xHiaNUF9ib9/r4as0iPoSe7uFqVqrL+pL7O1P
5RsjI1BfYm933UO/UI36Ent7/lp3n+eoL7G3B7XVuu1uoJHY2x+2aRe1+dJI
7O0DwiqHmxlpJPb25veWy5/v0iOxt19+YhBz/5Auib39Zp2ZYKcikNjb+0+W
0IeKtUjs7Qyph658ilElsbcnfVq+1pdVlsTe7rxsLC9UnYfE3q7nZXgnV0KM
8vY5/doKwWygvP3rCQu/hNeWlLcfamTJWN/mTHn7lnvzzzRqfShv57PLk3wp
GEx5+zLH2194v0VS3n5Lp6d91ZsEytulIl9siRg5RHl7t2po5GuN/3l7RK/2
o8W+xN7+8j3TikUfwt6+SaeNc9GHsLd/++ActdiX2NufxrZqL/oQ9vYn/FMl
i32JvT1htWUs9+Lz6ZK3u47k6U+i+8Pe3u8h7H8WZezt03xbXhqjjL1dZX7w
yx10n9jbLfcuM+FEGXt7+n+xkQvoPrG3t+6r2h6J+hJ7u+7J92yaqC+xt5ef
4RSfQH2Jvd2Wu/OLOupL7O27hkTo4agvsbfvCO08W4n6Ens7x/IWCTPUl9jb
Rf1PnG1HfYm9XU1LidaP+hJ7e8jX4iuKfTQSe3sbuWLH0zwaib3dcW98SZ86
jcTefqrjvnrfVT0Se/v5tzePrPmnS2Jv57vO0jT/CUjs7W9eBLKY1eqQ2NvL
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
vd2vj23tFMrY2xU533umo3vE3v6d278yAN0j9nYv4aGuLnSP2Nt3t9GszqG+
xN7uN5EueAQ9r2JvF24dmmtGz6vY229KDsx7o/ca7O1nri8IbjqAPt+St7O9
XH1JMpUO2Nun3+4iRo/RAXv7mqL1gkcb0PfHkreX9c6XaA/RAXv7FpYs+jUu
fcDenmai9Hqfiz5gb7/AGTtFv6dP7dt7na79OxpsQO3bfaTcV2Sj51bs7Vz1
HoeeXDei9u13XmiXqbeYUPt2Bd8KdrsQc2rffj13TDWyz4rat8uXMDOXVtpS
+3b5M88jtU7upLy9/lS/3+RFV8rbP/Q7GuZOe1Lerth/wnBUwI/y9j+tHuL+
FcGUt3dU7vmbvT2C8vabXSHr2bTjKG/f/FnzX7B2CuXtI4o5eyI9sihvL54+
fO8uTz7l7bfFks8tPo9ib/9qcac+CWXs7See/XydgTL29qZYgeGCxefVJW8P
qfh97zTK2NsPsofyX0UZe/tgsnjbEMrY2yXHAx+yoPvD3p4b33TDEGXs7ZJD
0ZPVKGNvv/71mYk8uk/s7ct+j3ZMo4y9fdcnbmIluk/s7Z9NS0vLUV9ibweV
8de/0fMo9nYuQYYPEagvsbc/O2f2WB/1Jfb2lLGnYl5h6Pt5ydvHxVs3ZcXR
AXv7B4dfq05n0wF7e07mf0Nrz9ABe/ukqce9de3o72/J23mYbC3YvtABe7s7
P/sUqaAP2NsHOHPDI7L1qX374JWMvTfRcyn29ne3NwHPsAG1b59Y8/JR9C9D
at9+KHn3o8kzxtS+fSzG8LvBrCm1bxd3vSnf52xJ7dsben3nZPltqH27XufG
rpR9dpS396itz1zwdqK8Xfj9vlHhS7sob487yblCtMOH8vZ5ztXXN4/tpby9
+1Rh4ZOtoZS3K7OFTZ+fPkB5+29l3/Ce6ETK2+20tM4u9iX29pe204cX+xJ7
ez3rqvLF93vs7SdOWTxffL/H3n74u1fEcZSxt8vplUVdRBl7exTL1L92lLG3
u+q8tHuPMvZ2/q8ThqLo3rC3W2QVvQhAGXt7doZT3wuUsbevXb/xQSy6P+zt
9/nCbzqivsTePvZebc8ldI/Y28ONDBKTUF9ibx/ee7zYCfUl9vYKu/LZvagv
sbdXfR8M+Ire77G3d3X+vJ4ahe55yduTwhaGlVPQr7fk7cOTeUFxRahPl7w9
yNrr1pVLdMDebsPGN+A4gJ4/l7xdT9bEuWOlPmBvj7P7VTlprw/Y26/97djQ
gHoTe3vGi6ma194G1L4962Vmvz/dkNq3z554UFNbYUTt25kvV5U0HzWh9u2b
nY0jgjXNqX37WrFiK96LVtS+XUxdefTgPltq3/4mgfO8scVOyts3qzlxmIMr
5e3X/369l1bqSXn7cVmdjqD/fClvr1in+khlZzDl7VUao0L/yHDK21O8r1Xu
rT9IebuRlAyn3NNkytshPCDB+VUm5e0brAXnQnr+t29f3rfKf7EvsbfXr02y
XOxL7O3n/DQ9FvsSe3tuSo7QYl9ib29Jq6mqQBl7ex23XEEzytjbTeK1HZ6g
jL2dXabCfhm6P+zt6aq1PDSUsbeLP+M/Uo4y9vaakgRfCXSf2NtLl/n9HkcZ
e3uuk0bxd3Sv2Ns3pZQeTEZ9ib298WksVy/qS+ztvK1Fq5RRX1Le7tiR8gm9
V2Nv51M7EzSM3t+xt/u3HpbrQ+/v2NuHaeJeMYfR77fk7VI/I8/uPU0H7O0N
DOxjz0j0/r/k7eVCe/vSP6E//5K391y8u5Vluz5gb5dyZLF+mqZP7dt/i33e
6brSgNq3c2ekCgt0G1D79hejxx4dfGlI7dtrJS7NmaYaU/t2h6hW/pkuU2rf
rtvrsjlggyW1b8+VLZU8Om1N7ds7vk69KJW3o7zdPmW538PlTpS372NZftA5
eBfl7ZaO8dueevlQ3n6e+dceVde9lLeHhv3HpvI4hPJ2lX3V0duCDlDertM1
rHVeKpHy9paVyVmLfYm9HbSFfBb7Env7Qnyy32JfYm8/L9+Ru9iX2NuFamUZ
FvsSe/tsiPLQ4s9DsbcHd91ZvtiX2NufQsPHKZSxt18m9VyE0b1hb1+XbPrW
F2Xs7aXbRMlnKGNvv6H8lj8S3R/29tnmlbNW6P6wt19RYPQ/g/oSe3vyWMjn
fagvsbd7/RnqI1BfYm+/IcaUZYT6Enu7iJuM5DXUl9jbv8pHDKmhvsTersJ5
pvRWMh2wt2c4BQk/Oor6dsnbD36t+tf7H+rHJW/Xei97ePoRHbC335XsGx5A
7+HY2weeNpRL7dAH7O0vL3Bvi72hT+3bL8sFmm5xN6D27e6sMjuSNQ2pffut
JFr5QKERtW93COUsJFJMqH0788TKk9Ei5tS+PX7r7MWmYitq377af/f4iJ0t
tW8vbNZ5wSCxk/L2ae/NZi4rXSlvV5HdoagU5kl5e4XaGYHcA76Ut0dZXj5b
rRBMefvlaKFnbFnhlLff0WMJzNh7kPL2XQOhxkrnkylvN0jxTPx7JpPydt+D
k5wF1Ucob7+yeqfpYl9ib//Rpyu82JfY2wW+/xJe7Evs7U5xZu2LP+/E3q77
tWT9Yl9ibz/72eLR4s87sbf/yXoiOYAy9nbJ+NWnGdH9YW9/IvOnC1DG3j56
TOxXKcrY27kIn8Ob0H1ib68zSJd9ijL29pmqie/v0b1ib0+8cn1bOOpL7O1C
qW7Zl1FfYm8/u3dT41rUl9jb+57N87ahvsTePnjXwbIQ9SX2dkWG7/Qw1JfY
29M3GjS9z6ID9vYwjWLTUvSejb3dg9G9pL0V/fdL3p6p9Leg7wPq2yVvP/Cz
/HXDNn3A3p7mdX79iWR9at/+tlJmlM5iQO3bnbcFSuq0G1D79t65d231Q4bU
vl3m0qbKjnBjat9u2LL6JT96z8Hevl9DZPjBLwtq366evyXj7LA1tW/v/ttf
LsFjR3m7FIRlZT5xpLw9Re4U4x+rXZS38+denUtX9KG8naHBVuO64F7K23uf
9BxOORdCefvKMc6259sPUN7eojsTsGFZIuXtgVduxy32Jfb2bdNe1ot9ib1d
lThgsdiXlLfHPvJb7Evs7Ym7Su8u+hH2duNAmUOLfYm9vav1cfqiH2Fvb/Rp
VF/sS+ztFm3RvkLo3rC3n1yXHbQHZeztC36uN0ZQxt6ebdNpFIbuD3v7t9Ch
Y2bo/rC3C1aIRJ1EfYm93Tx9983dqC+xt9/drJ6lgPoSe3u4EM9BFdSX2NuP
GFUZnER9ib1dYJfelTWoL7G37ysxTU9GfYm9nZcl9Hos6kvs7X4rQ485oL7E
3n4x0DFDA/Ul9vZrEzwyY6z6gL1do/x9bJ+NPmBv52A9y7D7mj61bxdP571q
5mJA7dtXvbwytEHVkNq32zf+dzIix4jat+e5rwgpijGh9u1GV7w9hHjMqX37
SH6C+bFcK2rf/iq+zXaTsS21b08Dcc50np2Ut4/sP8K48YsL5e3BFXp3VXZ5
Ut5ew95UNODmS3m7+O7D9kkiwZS3wyCfKD04nPJ2/QDbTTYmBylvlxn6vfNF
XjLl7TcSAwL/pGZS3v5NWTT78tEjlLdrEAJai32JvX1MwHHFYl9ibz/YWraw
6EPY299Fryxa7Evs7d3PmvsWfQh7+6GOiyGLfYm9/VJZfP7jxefTJW+vqWu+
x4DuD3v7O5KjikAZe7uVWJdsCcrY27srMjeLoPvE3s432Nw/iDL2du7LDy69
RveKvf2eHsOaINSX2Nv3GqjsvoD6Env7APo/ZznqS+ztzBfHsmtQX2Jvrz6f
kx2Ceg17+9hvot4A9SX29m1D65dXor7E3r6vaOtKZdSX2Ntnmz+cVkN9ib39
kYbevh/v0f0veXtP2KvbWVL6gL39wrK3Pn8T9al9u7ziUNCtZQbUvl31XXv0
YKsBtW/33KQo5fDIkNq3v5BJPrguyJjat3us5JXqOm9K7du/3dp36+yUBbVv
lxS1G79z35rat29K/2zKsdyO2rdHd4tpCtxypLz9jrsAt5/uLsrb0d+TVSG/
D+XtURt2/db4F0B5+8nb8Qy2BSGUt3/YvuxvMNcByts3P2wv3z+TAL7Zy18q
P7ShvJKnhyc64Pn/8jtasQZT2//y/wHWeEpK
     "], {{{}, {}, {}, {}, {}, {}, 
       {RGBColor[
         NCache[
          Rational[2, 3], 0.6666666666666666], 0.33333333333333337`, 0], 
        Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl12OQpMkagNHusW3btm3btm3btrkc27Zt21zM7O7M7txTc3+cqO95OyM6
IiuiMr/kLbrW6BIiKCgomA8hg4L+8rDIZ3k++cNKqpGa42a9SM45PZC/rV+s
K/BZ/0B10nDCrDcpOK8H8Y/1S3TFwP/SP1KDtJw060NKLujBfLF+qa7E3/on
apKOU2Z9ScVFPYSv1i/TlflH/0wt0nParB+puaSH8q/1y3UVvuhfqE0Gzpj1
Jw2X9TD+s36FrspX/St1yMhZswGk5YoezjfrV+pq/KtXUZdMnDMbSDqu6hGB
LyKwh7o6/3leTT0yc95sEOm5pkcSHNhDXYNvntdQnyxcMBtMBq7rUYQI7KGu
SRBrdQOyclEPISM39GhCBvZQ1yKYdboh2bikh5KJm3oMoQJ7qGsTgvW6Edm5
rIeRmVt6LKEDe6jrEJINujE5uKKHk4XbehxhAnuo6xKKjboJObmqR5CVO3o8
YQN7qOsRmk26Kbm4pkeSjbt6AuECe6jrE4bNuhm5ua5HkZ17eiLhWasbEJYt
ujl5uKFHk4P7ehIRWKcbEo6tugV5uanHkJMHejIRWa8bEZ5tuiX5uKXHkouH
egqR2KAbE4HtuhX5ua3HkZtHeiqR2aibEJEdujUFuKPHk4fHehpR2KSbEomd
ug0FuasnkJcnejpR2aybEZldui2FuKcnko+negbR2KKbE4Xduh2Fua8nkZ9n
eibR2apbEJU9uj1FeKAnU4DnehYx2KZbEo29ugNFeainUJAXejYx2a5bEZ19
uiPFeKSnUoiXeg6x2KFbE4P9uhPFeaynUZhXei6x2anbEJMDujMleKKnU4TX
eh5x2KXbEouDOvADXpKnegZFeaPnE5fduh2xOaS7UopneibFeKsXEI89uj1x
OKy7UZrnehbFeacXEp+9ugNxOaK7U4YXejYleK8XkYB9uiPxOKp7UJaXeg4l
+aAXk5D9uhPxOaZ7Uo5Xei6l+KiXkIgDujMJOK57UZ7Xeh6l+U0vJTEHdRcS
ckL3pgJv9HzK8LteRhIO6a4k4qTuQ0Xe6gWU5Q+9nKQc1t1IzCndl0q80wsp
x596Bck4oruThNO6H5VJzlGzHiTljO5PFVJwzKwnyTirB1CVlIHvLrRz0mdm
P/vPPGfyWY+RXCO9c2oQ58mo6zKCq6QzG8g5Mug6DOcKac0GcJb0ejX/UV3/
wGdq62FcJo3uzxnS6VX8S7XAOcknaumhXCK17sdp0upf+UrVwDnMn9TUQ7hI
Kt2XU6TRv/CFKoFznj+ooQdzgZS6DydJrX/mHyoH7hH8TnU9iPOk0L05QSr9
E39TKXBP4Teq6YGcI7nuxXFS6h/5i4qBexAfqaoHcJZkuifHSKF/4DMVAvcs
PlBF9+cMSXUPjpJcr+QT5QP3ON5TWffjNEl0d46QTK/gT8rphbyjku7LKRLr
bhwmqV7OH5TVC3hLRd2HkyTSXTlEEr2M3ymj5/OGCro3J0iou3CQxHopv1Fa
z+M15XUvjpNAd+YAifQSPlJKz+UV5XRPjhFfd2I/CfXiwD2XknoOLymre3CU
eLoj+0igF/GeEno2Lyiju3OEuLoDe4mvF/KO4noWzymtu3GYOLo9e4inF/CW
Ynomzyilu3KI2Lodu4mr5/OGonoGTympu3CQWLotu4ij5/GaIno6TyihO3OA
mLoNO4mt5/KKwnoajymuO7GfGLo1O4il5/CSQnoqjyimO7KP6LoV24mpZ/OC
gnoKDymqO7CXaLol24ihZ/GcAnoyDyii27OHqLoFW4muZ/KM/HoS9yms27Gb
KLo5W4imZ/CUfHoi9yik27KLyLoZm4mqp/OEvHoCdymo27CTSLopm4iip/GY
PHo8dyigW7ODiLoJG4msp/KI3Hoct8mvW7GdCLoxG4ikp/CQXHost8inW7KN
8LoR64moJ/OAnHoMN8mrW7CVcLoh64igJ3GfHHo0N8ijm7OFsLoBawmvJ3KP
7HoU18mtm7GZMLo+awinJ3CXbHok18ilm7KJ0Loeqwmrx3OHrHoEV8mpm7CR
ULouqwijx3GbLHo4V8ihG7OBkLoOv+JYDBrLLTLrYVwmu27EekLo2vxCKD2G
m2TSQ7lENt2QdQTrWvwc/P11K2g0N8ioh3CRrLoBa4OCvr+I1+Sn4O+vgkGj
uE4GPZgLZNH1WcM3apj9GPz/d/j/Afx19/U=
          "]]]}, 
       {RGBColor[
         NCache[
          Rational[2, 3], 0.6666666666666666], 0.33333333333333337`, 0], 
        Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1: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
bsgsXlPEbDJv7f8HaZT8Iw==
          "]]]}, {}, {}}, {{}, {}, {}, 
       TagBox[
        {RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 0, 0], AbsoluteThickness[1.6],
          Opacity[1.], LineBox[CompressedData["
1:eJwl1WOsGFkYgOG7tW3fWlvbtm3btm3b5ta2bdu223X3udkfzznzfslkkklm
TmCTjlU6/BIQEPDDErQvt1Thp+vfqE0GLpr1Jy039DCCsUJXDbqRdbY6ZOSS
HkA6burhBGelrhb0LNbrumTish5Iem7pEYRgla5OMDboemTmih7Er9zWIwnJ
al2D4GzU9cnCVT2YDNzRowjFGl2TEGzSDcjKNT2EjNzVownNWl2LkGzWDcnG
dT2UTNzTYwgT9A51bUKxRTciOzf0MDJzX48lLOt0HUKzVTcmBzf1cLLwQI8j
HOt1XcKwTTchJ7f0CLLyUI8nPBt0PcKyXTclF7f1SLLxSE8gAht1fcKxQzcj
N3f0KLLzWE8kIpt0A8KzUzcnD3f1aHLwRE8iEpt1QyKwS7cgL/f0GHLyVE8m
Mlt0IyKyW7ckH/f1WHLxTE8hClt1YyKxR7ciPw/0OHLzXE8lKtt0EyKzV7em
AA/1ePLwQk8jGtt1U6KwT7ehII/0BPLyUk8nOjt0M6KyX7elEI/1RPLxSs8g
Bjt1c6JxQLejME/0JPLzWs8kJrt0C6JzULenCE/1ZArwRs8iFrt1S2JwSHeg
KM/0FAryVs8mNnt0K2JyWHekGM/1VArxTs8hDnt1a2JxRHeiOC/0NArzXs8l
Lvt0G2JzVHemBC/1dIrwQc8jHvt1W+JwTHehJK/0DIryUc8nPgd0O+JyXHel
FK/1TIrxSS8gAQd1e+JxQnejNG/0LIrzWS8kIYd00A81Pid1d8rwVs+mBF/0
IhJxWHckAad0D8ryTs+hJF/1YhJzRHciIad1T8rxXs+lFN/0EpJwVHcmEWd0
L8rzQc+jNN/1UgI5pruQmLO6NxX4qOdThh96GUk5rruShHO6DxX5pBdQlt/1
cpJxQncjkPO6L5X4rBdSjj/0CpJzUncnKRd0PyrzRS+iPH/qlaTglO5BMi7q
/lThq15MBf7Sq0jJad2T5FzSA6jKN72EivytV5OKM7oXKbisB1KN73oplfhH
ryE1Z3VvUnJFD6J6wP/n7TIq869eSxrO6T6k4qoeTA3Sct6sL6m5podQk3Rc
MOtHGq7rodQifdC36WD8D7Kj+4Y=
          "]]},
        Annotation[#, "Charting`Private`Tag$37555#1"]& ], 
       TagBox[
        {RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 0.33333333333333337`, 0], 
         AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwV0VPUnGcYhtGJbTt/0ti2bdu2bdu26za2bds268bYc7Bnfde93qNnQlp2
q9k1VCAQeOvnHYvDBAIV+D90ILCK6qThqK03IZzRg3jv/RJdkbf6e2qQlmO2
PqTirB7MB++X6kq80z9Qk3Qct/UlNef0ED56v0xX5r3+kVqk54StH99xXg/l
k/fLdRU+6J+oTQZO2vqThgt6GJ+9X6Gr8lH/TB0ycso2gLRc1MP54v1KXY1P
+hfqkonTtoGk45IewVfvV+nqfNa/Uo/MnLENIj2X9UgCwRvqGnzx/Rv1ycJZ
22AycEWPIlTwhromX33/TgOycs42hIxc1aMJHbyhrkWA1boh2Tivh5KJa3oM
YYI31LUJxRrdiOxc0MPIzHU9lrDBG+o6hGatbkwOLurhZOGGHke44A11XcKw
TjchJ5f0CLJyU48nfPCGuh5hWa+bkovLeiTZuKUnECF4Q12fcGzQzcjNFT2K
7NzWE4kYvKFuQHg26ubk4aoeTQ7u6ElEYrVuSAQ26Rbk5ZoeQ07u6slEZo1u
REQ265bk47oeSy7u6SlEYa1uTCS26Fbk54YeR27u66lEZZ1uQmS26tYU4KYe
Tx4e6GlEY71uShS26TYU5JaeQF4e6ulEZ4NuRlS267YU4raeSD4e6RnEYKNu
TjR26HYU5o6eRH4e65nEZJNuQXR26vYU4a6eTAGe6FnEYrNuSQx26Q4U5Z6e
QkGe6tnEZotuRUx2644U476eSiGe6TnEYatuTSz26E4U54GeRmGe67nEZZtu
Q2z26s6U4KGeThFe6HnEY7tuSxz26S6U5JGeQVFe6vnEZ4duR1z2666U4rGe
STFe6QUkYKduTzwO6G6U5omeRXFe64UkZJfuQHwO6u6U4ameTQne6EUkYrfu
SAIO6R6U5ZmeQ0n+0ItJzB7diYQc1j0px3M9l1L8qZeQhL26M4k4ontRnhd6
HqX5Sy8lKft0FxJzVPemAi/1fMrwt15GMvbrriThmO5DRV7pBZTlH72c5BzQ
3UjKcd2XSrzWCynHv3oFKTiou5OME7oflXmjF1Ge//RKUnJI9yA5J3V/qhDC
YVtPUnBKD6AqqThi60VKTuuBVCN18L8LFwh8A5NH/rw=
          "]], 
         LineBox[CompressedData["
1:eJwV0FO0XWcYhtEd206jE9u2bdu2bds26ja2bdtO2pSxOffFXGM97/iu/pCW
3Wp2DRUIBN76PA0TCMwKFwgU57+wgcBCypGEPbZOJOSw7skz97N1Cf7XiyhP
UvbaOpOII7oXz93P0SV5qhdTgWTss3UhMUd1b164n6tL8UwvoSLJ2W/ryncc
03146X6eLs1zvZRKpOCArRtJOK778sr9fF2GF3oZlQnhoK07STmh+/Ha/QJd
lpd6OVVIySFbD5JxUvfnjfuFuhyv9AqqkorDtp4k55QewFv3i3R5XuuVVCM1
R2y9SMFpPZB37hfrCrzRq6hOGo7aehPCGT2I9+6X6Iq81d9Tg7Qcs/UhJWf1
YD64X6or8U7/QE3ScdzWl1Sc00P46H6Zrsx7/SO1SM8JWz9Sc14P5ZP75boK
H/RP1CYDJ239ScMFPYzP7lfoqnzUP1OHjJyyDSAtF/VwvrhfqavxSf9CXTJx
2jaQdFzSI/jqfpWuzmf9K/XIzBnbINJzWY8kEHxDXYMv/n+jPlk4axtMBq7o
UYQKvqGuyVf/v9OArJyzDSEjV/VoQgffUNciwGrdkGyc10PJxDU9hjDBN9S1
CcUa3YjsXNDDyMx1PZawwTfUdQjNWt2YHFzUw8nCDT2OcME31HUJwzrdhJxc
0iPIyk09nvDBN9T1CMt63ZRcXNYjycYtPYEIwTfU9QnHBt2M3FzRo8jObT2R
iME31A0Iz0bdnDxc1aPJwR09iUis1g2JwCbdgrxc02PIyV09mcis0Y2IyGbd
knxc12PJxT09hSis1Y2JxBbdivzc0OPIzX09lais002IzFbdmgLc1OPJwwM9
jWis102JwjbdhoLc0hPIy0M9nehs0M2IynbdlkLc1hPJxyM9gxhs1M2Jxg7d
jsLc0ZPIz2M9k5hs0i2Izk7dniLc1ZMpwB96FrHYrFsSg126A0W5p6dQkD/1
bGKzRbciJrt1R4pxX0+lEE/0HOKwVbcmFnt0J4rzQE+jMH/pucRlm25DbPbq
zpTgoZ5OEf7W84jHdt2WOOzTXSjJIz2Dovyj5xOfHbodcdmvu1KKx3omxfhX
LyABO3V74nFAd6M0Cdll60B8DurulCERu20dScAh3YOyJOaJ7Rs09gMA
          "]]},
        Annotation[#, "Charting`Private`Tag$37555#2"]& ]}}], {}}, {{}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxd0jsvBGEYhuEvKuUWCoUCEdmIiLN13HFeLMuKSBQbIQoVjUrzFQqFgkhE
ISGiUPoJ84MUfgIy9xRzTzJ5cn3vPLPZzNtzctE8awshNP7u/8yun2ooXkmR
7XJJ7pA75S65W+6V++R+uSwPyIPykDwsj8ij8pg8Lk/Ik/KUXJGn5Rl5Vp6T
5+UFuSonRUc5LGouhyXN5bCsuRxWNJfDquZyWNNcDuuay6GWO8sohw2SvY9y
2CTZ65i7l9wi2duYO9+zOskexNz5d90m+V8Rp7uc75AHzHE85LzB8y3O8dsp
c96TnmeZ4K9LnsfHV8XfLV3T38vyM9LH5Rv6uHJLH6d39JtZ1h/o4+9H+vj+
iR5On+nvZ1l7oY/jK4mP3unh1kfyC3rgVeQ=
       "]]}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}, "AxesInFront" -> True},
  PlotLabel->FormBox["\"Death Cases- Germany\"", TraditionalForm],
  PlotRange->{{1, 84}, {-40.729785475431434`, 1698.6849502381638`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7951978448195763`*^9, 3.795198936440654*^9, {3.795454982930613*^9, 
   3.795454991196257*^9}, 3.7954568831830606`*^9, 3.7955353416598263`*^9, 
   3.7955354674883347`*^9, 3.7955363090805807`*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"fadaddee-6860-4307-bcee-c6217252488a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"deathCasesNLM", "@", 
  "\"\<ParameterConfidenceIntervalTable\>\""}]], "Input",
 CellLabel->
  "In[135]:=",ExpressionUUID->"46f2941b-f66e-4063-88c5-618983ece24a"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", \
"\<\"Confidence Interval\"\>"},
     {"k", "0.21767128293986723`", "0.004461275106860381`", 
      RowBox[{"{", 
       RowBox[{"0.20878588350544383`", ",", "0.22655668237429064`"}], "}"}]},
     {"L", "4220.394433020435`", "158.3351399392946`", 
      RowBox[{"{", 
       RowBox[{"3905.0426716590864`", ",", "4535.746194381783`"}], "}"}]},
     {"t0", "77.06363349084529`", "0.34795600272513194`", 
      RowBox[{"{", 
       RowBox[{"76.3706190508562`", ",", "77.75664793083438`"}], "}"}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.795197858393791*^9, 3.795198942369437*^9, 
  3.79545500982346*^9, 3.795456885256843*^9, 3.795535472026257*^9, 
  3.7955363193276033`*^9},
 CellLabel->
  "Out[135]=",ExpressionUUID->"c8ec96eb-e995-414c-951f-c22ce61d2417"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"daynum", " ", "=", " ", 
   RowBox[{
    RowBox[{"deathCases", "[", 
     RowBox[{"[", 
      RowBox[{"-", "1"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"deathCasesNLM", "'"}], "[", "t", "]"}], ",", " ", 
       RowBox[{
        RowBox[{"deathCasesNLM", "''"}], "[", "t", "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "1", ",", " ", "58"}], "}"}], ",", " ", "\n", 
     RowBox[{"GridLines", " ", "\[Rule]", " ", "Automatic"}], ",", " ", 
     RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}]}], "]"}], ",", " ", 
   "\n", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Tooltip", "@", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"daynum", ",", " ", 
         RowBox[{
          RowBox[{"deathCasesNLM", "'"}], "[", "daynum", "]"}]}], "}"}], 
       "}"}]}], ",", " ", "\n", " ", 
     RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"Red", ",", " ", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}]}], 
  "]"}]}], "Input",
 CellLabel->
  "In[136]:=",ExpressionUUID->"d55c30bc-95da-42ff-8986-792c731d6f83"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVV2c8F+4XtSWys8oeWWXvca/1Nb72KiGUEMpOhIyshoxEkYwSkWREEoWM
X0RGpEhGoZS9x7//m+e+eM6559w393MP/2kfy7NkJCQkx/89/6/PtrSVSUnm
gVeYvrmengGSHPcksvXnYUmn9RXdUQa40PiKV+nWPNxPIhiFEhngWIw89Xme
BchjVM8uS2CA0v0in4bUF+HMSm0ekDFCESdNYHnIMqjXOqjPRTJCrlL3M6el
dfC7PPZY5BoTRN69XrCpugH69fHMellM4LSln5EevQFiygGygaVMwNP4JuI9
0ybsnHDpo+hmgmxChYmS9BaoKAu4LbAyw12b9F/053cg1jPeg+ohM3S8fMri
tESCVrODjJndLFD+vCdSiosUvwXFy9yaZIHM4qW5PSRF6SaO6OwNFnC7q9Ke
m0SKLVOTjJuCrEAW8i5sXIwMrTNehDWHsIK68sjUWWdybHnUnf1Q7CCUvaCr
9e6iRD8Bwy6TLDZIL5MS1limxPzjF06oVrJBWKFl6oFDVHgrhUwB37OB0Z1M
7zIPKrz8841J5hYb/AwS4p8np8brNl2LYY7swKegfi1AdR+qq6aySItwQGql
l0Po4/3IE3GckqKTE8bS5Cxq3+/H1It0nyKnOOFY4Jbe6t/9+DjXYoBtjxPe
y1+X8lemRb9D4s1JslxA8eIJmWcHLVpca+d6fo8Lgmtniux+0eGUpAPpJ59D
4PDafUVZigGzhxxFTxzjhif3pWYvWjGgMrPbjCSRG9bD10arghnwadcTER4P
bkjXjG+XfsOARZWZcbb53PDTqc/ktigjdnbMrPJz8ADf90W+Gy8Z8Z2Pcpc6
DS+kTci0Xf7ChAotl/+KRvEB1RxZE8wx4Qj/gItwCh9cWu2rJ99jQmP+g+Yy
eXxwiuZixXUBZjx62OZr8Fs+EJequ591jhm35E7avyXjhzeh2oGv1phxTpXR
2SqBH34zWfFvsbAirZwc2fgDAXA6JHS4UZgVm9kT+X8/F4BeoRW2GCVWpIr9
+5K6RQBqlDLoaO1Z0S6r/G7AtABEO35Z48pnxYvZfxd5ZQWBo/jMB1Xpg/jp
hJvscLsg6GHg5VBjNlTQTb9tQSEM8k9//m10YkNcOhnlziUMAlz2rpQBbEi1
lVJwW1oYdpe0TJLvsuEHiu0ZeUdhqH3MwFv4gw1tX6xLJdcIgyRDSdPHSHbs
kZi50uYrAqyj32nEqjnQyyancG7lCJARbSIutHPgyMjR6EMMorBQ075Y+YUD
Q3ZP950RFYUPKc++aJJx4sojFoKuvSgk6IU/tTbjxJEv5hH6TaKwVcphETnD
ibmSQ2K+6WIwftksc5D7ELIN7JfgsJAACsf0nj6pQxjSOBL33UsCRDS/7OvR
OoSbHxdE3sVJgCeJe0j72UN4897OvS/1ErB4NeLky6eH0K6aUdxAXBLIk54e
ztI4jNT1LUuK+4+CUC5t3ilHbmQbtGUT+3YMCFEWn0/6cGMt1eTQhZ1j4HE6
g+l4FDcyBbca9R6SglIhwWizR9w4OMv2fPGEFMgXq57BOW6cc995nd0vBboV
54QFwnkwi+C6POghDWdb2oqnsnlx6HLyjX4/GSCjKbc/U86LNotNbE5XZSDX
JPPA92ZeDIv9bLNzRwa+fvLw+zrLi1SqKYSgehkoXr6afe4wH2aqC2jb7JMF
PmoRV2dPPnS9Mew1XSAL9JIeSyZU/Hg573rO6qwcOJo6dNIx8mPtZi2bAIk8
lPqaP3rPyY/MoRQMrgflwaha+bjhUX6kpqj9JoHyEKtJ80rXmh8N9IIedd2R
h23zJ9Fq+fyYzqmv6GOgADNBv5nENAWweKw44strRRgVYveq0xfAH9cWlO4M
KEJvn1YL0UIAz5T9V3luThHqZTIuXnAVwLaOgpP23EqQNKf1pfKaAB5e2NH0
jlAC+bMZDzUHBbBJr+KGvZ4yRFhrK1n7CiI15zsrqZ8qEEB+PnkqRBAp1J7F
K5KpgkdFxszFGEEseGP5145bFSwY57Lu3hHEkQ93u1esVEGoM4PkW70g3nZ6
zhLbpAodOnMd52iEUOFAN93hR2rAKpfpcCVfCHP71z0pozRA4HApu3eJEFqp
bne/uq8BMpRvek9UCWEahaxIUp0GmA7+NJBtFcL046ws8csakHBZSWFqRghP
h+f+6TynCdvNnw4QZYTxR2IQxVs7gAnrg41sb4Tx88eXcTRFCIsaYqHkHcLY
3PdcAmoRSI5oKMx/FEaH2s07V9sRDm+4lnRMCOO71ZUdzRkE2/tVGWHUIphW
ztkYIKEF/01Z+Y6biuCVGL7O2QotqLiYyl82IoKChEiZyA/aEJESfNf+pwjO
yc1l2o1rg1GpAxPNggiSLfgv6a9qw8R3EVJXiiOo/MZi+AyPDrCavBrjlDiC
2lpqY/d8dCBYcPJB7KUj+PhkVh4nmy6o9yjwOLKI4gte79ydAD3Y94vrzn5u
UTzA9Zcl/5oe9FOS0NeKiGIOl+r5U3l6cF7tvx1mVVHkOi+iyNutBzmFp0ba
nUWxcEFotlmCAKTh8dnyZaJIur0TUj5DgFaxz1x0hmLoai7xo+eSAZRGPF5m
tRTDnlX9vt/JBpDaF/SB214M5zbeR/IVG8CpcOZoqfNiKEhRF9r92QDWeogz
liliuJN44IqpuiGIXmqouftZDC2bvF9PURpBYmuB9RFPccwdyMoSLiWC7yH/
Y9IB4sg8QV/j0UYEW1/cpxImjl5lPGWt48R/+27klVGSOA4yUd7t4zSGuvNs
ghcqxFHcV9VEPtEYZlkTF6o2xfFlwYMx0fMmYHzmQpL2dQn0bkj+kGdkBkO6
AdPctyVQJrWDe9jDDFxFLmlvZEvg1G+nbKl4MwibiVp9ViaBBUYRmbItZlDi
k36Ku1cCA/MV+rt4zWF/WP2xdQ5J5LqcUE6TYw4dt/d3Py2UxJADnJ7yhRZg
fZFBLPGZJLpxZk5CjQWMHWeNca2VxPAc/gH7dgtY5+JROvSfJJpqbB5/N2sB
onkyDxLmJNHiV8kjZ2lLSHh6wueM/FGMFUvOam2wBEJrIQNn01E0syukfTdt
Bcmfw0Sq3x9FnkPb1/N3rGD4t6WGxcBR3NsxnE1ntobzLHueidP/+HQp2Q3q
1nDb+XjrBv0xfL3P3Ykr1RrGN6nDh+2P4Zav/C8GLRuIkDo3m7VyDPdFKD3O
LreFdm0gVd47ht8W30u6ttsCs+1Bjv59UvjU+ViO7pgtPAp7q0d3WAqth+ZL
zRmPQ2cHZ16YthRu8oQ4ZPodBy7X/4473pLCo5UOPjvKJ8C+M/30LVZprDeX
z/n2xQ7oAlZ4aDmlcUufRlV0xQ4aOG2+xHFLI4ldcFIi/UkQcGe1jhCRxkKP
qbd3tE7CLGma3nllaczjLdoZKToJl5SSRYkO0qjhcd1bIcwebudf+0P1UBpf
K62Z1yk6AsFw9kl0kTTa1iSUGFk5wvpfQ/fdUmn0Pv12adXHEew1aMZWqqWx
fC+srqDYEQSG4j9OtkmjfBJRyILnFJQfiK1q+iWNrZKvv7AccILOS1dCI+Rk
8N03bsaoSGdwrNVPP6ksg9tlbjx7Kc7wZ42hXFFDBifPh9fcKnAGhuDcqT8E
GRw/3D403eoMlkFvzZ1OyuClYBPycHoXGPQjP4JRMqjjGHVXM88Fxj3j+0i7
ZfC+6Sdi7cBpCHhi9mekTwaP2NZ6PJs5DRSz7DR1QzK4bBjw7NXOaRA+V6Tp
Py6DJpf0WVlFzoCHe0fx+IoMhud6VrcGn4G5M7SRzYdl0d+JPkif1xXWHW5J
xnrKYpHif9sOV87C13H/eCMfWaTrK256lX4WGj1sxxkCZXFT9G23TOlZiAvk
zrwXLouq5rf5XD+fhYM3SsjLk2Xx7B9tw0l5N5B91TY8/EIWJ2zSL3jMu4EX
J0miNLkc1shLScqFeoDpg4mJFWo5fMKf3lCS5gGywm2ar+jkkKdJvlfzqQds
Sict67HJYc/vW7+qxjwgweCws72YHJqo0y5OGJyDh8HKSnFmcvhd4do+Nx5P
GB3wnfqSJYe2h4WsWke94MO6wYJprhxeim/1+bjhBY2H+HfePpTD7hts/62y
ekOuy0fWoqdyKMjy/H4y0RtOz8noBjbK4YtrQ7fI67zhB8VSPt2EHM75p3ru
ZJ2HP3JBzhri8riisZu2HegDo7Ym3uXH5DGLIu5xdJoPdIcIXxKUk8dGD007
kQofKG8cuEWjLo+VYhb72/76gD9RsXHARB6T/fXdlRV9YfX0GvcFP3lUtPDv
bKz2hZ2UkC85tfIoa967UfbGDzpN6vT8X8tjJ3v7s1N9fpBNs/VMr0keIyZI
mAR++IFqVNjV3+/l0ZmFX3SS1h8u+V45qvpNHhOXJRaPn/CHZdPYKwOUCmjt
XRLHuOIPs7QpgnRWCjg/5DB1SjMQ6to+3vx2XAHPLZzte2oVCIkxzOsVDgrY
vC0jxXIuEES30jrt3BQwaPFuEv/tQDg7eyfocYgCBjzvjjf7FQhj7dlt2rkK
qJ+2fosyJwgGY4u8QuYU8EAe2ZOEg8FQNToSt7mggHxdpe8UJIMhWYkl//Kq
Au5uvj+yoR0MBjPhQ+F7Ckhop2Bv9g2GOmMrvWgmRXxieoLWrSsYsll2ea4r
KKL6gaXxrWuXwDnPqjc7XBEVySse7OMIBfXNhDnuaEW8aHAo64lMKHBYNex7
EKeIXi1+LWeJofCRQgzybikiY9EcueiVUND22C15lKeIX5qK50d/hoKwVHFs
2TtFtPkcWijZcBlm63eV3xxQQqEiyZGdiHB4VJZdkceshFOJvRmuOeHgnKsq
GcOuhKOGpm9+vw6HwZiLvAR+JfxvXW/GZSccWoz+UHbKK2GX6W7CRHgE5AyN
9A7aK+H9IIvfZ2KvgMVyvfffYiWkYMk7XT4YCXQ/Tv7oKVNCHm7OlJyZSGgf
XHeqqFTCVHKhTw+2IkHzlbxV0GslTC43W/nCGwXi0aUqWz1KyDRNbFU/FwUU
jNlU1OtKePnd5bmKvSiolbicy0NQxk8MT9uo1WOg9Yz8yRkjZSzT+U9OwDwG
+rPmWKrMlHFluDDfwjUG5mmd4w3tlDHj4rWxvzdiQOy37oVAb2VUvXzZUPJb
DNwrpVf/L1UZCzlyImvjr0LY0fzBoG/KaH395cKbmVi4dtY+BSeV0YFXiLaI
JA4y77MSaWeUcbvFmPUxexxUHYhvyF1URvV4spNzenEwN+f16D2lCpJnTwXd
L4iDU2UKAfySKli6tuGYfyYeUKqDvuuSCupkfN9cW00Ae4rgEL1wFQzWbI4z
ZUiEi5+FJl9HqWDoal5n/ZFEKI2JfFl2TQXpbRbGx04kAseQkmtytgoaqlC1
GdYnwnxk4UurNyqoFVnIXxl/DfJ6Y1yHqVWRY0cwPUnmBtQ/lum2pFNF69b3
C/tNbsBQ2DeV94yq+F/TCme+xw2gP6LGUM+pil9TXRX4c29A6OXFl/clVPGY
i2XoWcabYCnkwuBipooEi+Ac7tWbQHZRs+7nHVUMLf34gW7wFmxPWMe8yVLF
LY/zL6vXb8GqhZfx3VxV3BVIOax1IBlmj2aOGj1Rxch9Kvo6UsnQO7VAVvZa
FY/Q9NjzBSZDns0jYuCkKrJHmjmbkqYAKtCNkMiq4YJrGg2leCqoFggUflZU
w0elx7qUNVJBnknFp0JNDdcUDEYizVNBdO4sqaueGuZRjymbBqcC46NG4bYT
aliYS64+9i4VvrEGXLh5RQ1zqgfLl93SIGL58x5nlxrK3vYWjnh5G2L3JkNy
P6rhxsEj+xe7bsON/fNLIp/UcGfqC3fo+G24x0c1LfdNDc1EFvnbaNOh2li2
x2RBDQMqLbptndLh98NruVEH1dE41v32qf13wM5GTWvGUR072OgL830zwNmZ
8MrntDoKHiFNaInPADcvC4VVN3V0me3V2MnJgMAodzFyX3Wk29S6UtmVAclP
05i4o9XxaNTlAQXJTGil/P3dvFAdH90a23w0lwnyL7Kja/+oo1v4qs5w9D1I
om5WF11Sx8it06qR2fdg+sTMasaaOiYKvSCBF/cga0vBK5hEA/tFRB2pZ+8B
mVa3lSKzBna4bWy+s8yCnvekwlUKGsjY/1CPUSwbvL+7tT0L00DYFZ1KnLkP
rbI3o3ijNHBzblYklCoH+K5Wqt2K1UCig6l7nGAO9ImQlF9I0kDeb2fMlxxz
QNX7bubRXA2cuu77hr8/B/atvT9X0qyBqZ/SrGfePYCHdDJ0j/drYtPT0DMr
33JhZLVRKJhBE/ON06lLF3KB7buphj7rv/93NjpB5HkQX+194Se3JqbwzXTD
kTzwPFXUc0RGE6fjGlxrfPJAqpw3vei4JjpO529rUeRDnRU9z5OHmvjQbFzb
Rr3gX365rxha/K9ftZt2nHkBSIhKmhmVaeIy0Sig07UAsrcNI2drNLHFT70p
82YBXHkUOy7+XhMHA40S5cYKQHdtu7BkQRN3y0efxiY+hO57v6SeagJOVTaN
4NwjYBXw2RDXAXTNSr1dR1YIJ4sXm4r0AT/dvGBlyFEIP2o2bB6aA1KUvVYr
1CmE7X7qsKzTgKz3idtOWYUgyiDUnhgHuH9gvnTK9DFExzg4u30AvBfwKeNj
axG07x8Tm+wFpCV90XbwWxEcSD2z5DIIWM8g9cpvrQgycz3jHMcAZdjYjPxE
i+HZ60ul1ouAWnd7M1OuF8Ofy0Zh/LSIxWwdH7xsnwDXC7d2BilEOYf/eGT3
SkCy1eFrhAxi50q62K/DpaD5yXJ+Tg5xYjnxbbNqKZxZ1eToVEYMf77L03+x
FEoV2T0StBFHTP20g+b/4WvaqEltEWNim+UHZ57C6VpR/cUwROoag1Km1WcQ
2M5j73IFMfHPMAkJXTnEDbH69EQhmhBbj9Jwl0PJOklGWRyi9p83wxZQDsvK
n394JiNW+Tvfb7j6D/8yMW6iAJHtWccMG8tzKK6bfdf/H6JrpSmXuWYFTJ7/
E6Lchcha2BZoZVEBfPyLR7O7EbO9xB94ulZAZvxG+pl+RJJU8xf91yogznqf
2+IIoqaVicK9oQpw/SNMxbiA6CUvtbYdXAm8Ai4EIrsWNivESta1VsHJAdfN
Mk4tpNF9fNTlaxXcSfAoYz6shYHzEQ08i1VA/9eHbZhPC8nq3edGuKth+1XE
Dw9xLZwsEOfwuVgNwzbZcXEaWvjh4MXKBYkXkJ442Pr2jBZ+fNDVKVxcAyeu
21htn9XC2VM5L4Te1ADXzb5vih5aOP2kfl1lsAZykrvXS7y1cDu57etjyloo
zGgTvxOkheryuwlpZ2qh9lFNkme8Fv4ccP32WvAlDL/NsGUp0cJMNfYLu9V1
kN18cMLkqRZeOSjFvNxdB6fepfkkPNNCD50rf8lm62C8/VbCTqUW3vcaqfHm
eQW/uuPrftZr4ULzSbmAhFewPRLMU/9BCwUqfzS5uNQDz+bxH66LWvhYuaEp
5EgDmBvsz+9e1kLtFvIGbf0GiLpT76i6poWfGwSUj7o3wKQs/wDDthYqREgr
uj9ugBKv2eY6Sm1kGrimGSDWCMojYXmMnNpIksGUSsn1Bizf5DnUgzaGMJA/
4ZV9C1fprTmOaGujcrlANei+hWoHqv4UXW38bVrw2d/2LXBseBLdDbXx3l/z
RubLb+GbjLwqs5U2vtB6p6D27i14F7Sye7hp41b0nyF0bILYuF+9LDe1kdLb
+kNldjNoCnK429zSxjvZFtu7z5phtVF3606KNrL4PhZ0bG4Gt437glx3tDFj
nLLYcrYZCN7mgXwPtJFnXvq+kEoLUFlWHzz6XBsTjjiOBA63QBz3lROEAW2U
5+9WMJdsBc26kt/xg9ro7+h7mE+7FVZthyI7Pmvj2s56EOWJVnBLlik2HtVG
Wn+BT4xXW4FAPrlh+VMbvxfT50iOtAL1jEGW04Y25vORSVxPa4OEKubRS9w6
6Kydm3mFqQM8l42Zn/HqYNw328YSsQ4gyscTpvh18EFnmOxfrQ6gr9oqsxDR
QfKbv47X+3fA7crJK+JSOvijZ4LDf6ADcite8H9FHXQyy4l3evAf1JafPAuu
OujCdd/6p14n3Ju/fTfITQfH13ykxF064bJ0d1eJhw6qKbKYx4d1gma5jiLH
eR1sqmJqT67shJZnktQLQTq4xq3gOCHQBT1lu0X58Tp46JNJ432qDzBdmv+b
skQH/a5alvBPdIOKCpO599N//Fv3CoGsB669u1LZ+0wHuw4uzOwx94DkqEPo
gyodJNttY6yW7wFfBvZ9Kg06eK6Lb3zpUg+s+10X9P6og5MNZL/6KD4CtVLg
yd41Hdw4TXv6oXgvnGgef628qYPKVi1GhRq9UGRmwf9gWwdt+QNZ6s17wcjj
2LQXqS7WzfVlCAb3QtLd6SBKWl2k5DhYM9nSC2zbDinKPLpomdb1S8u1D0Te
6rXn6OqiUmTGM9LKftjNOkbxlaCLfGL5Pgpt/TBwkR05DXVxIqRgIuxLP1yV
nKlJM9FFnS1HeX2KAfieceNxgq0u2hmn33lvOwDZF/ri/D10ccVZ+/rDvQFg
OeyiR7ihi21XX2cK/Vv0s6uGUTFJutjYbXdpJXgQmj7Kvn6TrItm9cEZX5MG
wTeeQkEtXRdf187PztUPwofFx0LSObp43z3CiJdrCK51/CHnKtdF8tOWZj1D
Q0ASHNY016eLtA6vKWk9hkE/5+5R+0+6SBcad2ArZhiS3r3IbB/SxVsOMvf3
5Q7DYdaFCwUjujg79acnbGgYlJ6fPWT3Uxe3SG5sdhp9gQu/TANbNv/pR9Tp
iyp8ha9O/CJZ/HpIIPoef84/CoLxmin7hPTwqn6yforWKHiW2W8Hiehh6rXG
H6kuo7C+nd5rLqGHs4rxb7byRoHl3v4rVAp6uP3pepe70Dcw6l8a9DP4h69V
vj3JPga1Bq2JBj56+H0kcviL9HeIbXDsuuGnh3Ex2i0DWt/BUn6F8WOAHtpG
3/Ues/wOc7xCmXaX9LC7bU9VNOg7CKxFFXpG6SHbYbLcmLrvcPORRvONND28
7WZKvGQwDqfJqrd7av753a3L6vWbAKlLxniwTg83EtZjKWMnYHtuIsauXg+3
puNOETMnIOMzM+34Gz2MruAVZmycgM5yX86lDj1sKiFnizwwCUpOkooHv+qh
2N2TMvvLJoGuvsDHjoSAq7PVcea7U0A+YGCVSkbAr6eOJd1l+QGbc3OK7ykI
OEijfWRN9Af85FXeVach4K+rKY7zVj+gKabzBh8zARl3T+wfefIDLhFXin8K
EhCFKPieO/yEyWHCZJA+AYVM3gp86pmGL0u/2soMCcj0elvt8/Q09NKllPwk
EjBTmD1+iWQGGjW/+NuZE3A2xJTugswM3Mv3IdWwI6DeIU3D8LQZMPfM5KHw
IqBP6UY8h8MsvN6YOZGaRMA5T+qwH3u/QMip2WsrmYC/FaV0DLl/w7WW7AjX
NALq7Bzv/U/1N9jeMnuomElABjNCh/jF3/BHqPrvcB4BhVU5Hrn8+Q185pFx
gtUEDBZN/dY2OQdXC9mqqr4QsFlKp+/M7N9/eX6+lXuUgO8jGBXnKefB3K/j
c9wYASt1ZmjesM0Dt3rY3okpAj78tpd8W3keXnz8brTzh4BBhZt8LOHzML1d
+l2PTB+lzv4oukizAMZWOgyDovpISk7lfkp6EVSoMzbZJPSRpt1USFJ7EURe
zU7ZHtVHeuFsHdp/h9SeQGr9Jxl9dD4/9msneBEqFsfOfVLVx/3i440v3iwC
e2pEy4CxPuZUXk6NtVmC8Z6XIf2++viUTkyD9eYydF89cJY1QB97kmsUpPOW
oV7Zxdw6SB8bHYhdTtXLkJ6770h/iD4K2b8U3hxZBgPf4/190fooX3ssnVt6
BZ4yrBzru62PCpSmwdJDK3DJVHryY60+Ltko+zMrr0G/ae2u1it9fEJNur/c
fA2kzZCz4rU+Fu3beeh+bg2mzcxNU5v0MdlxxkI4aw3sLHxrLTv18Vqv9vWR
vTVQtS6/0fdNHwdEhtbsPqzDtp20wgCVATo20xcYR27CiZO1Zno0BvhmX3Sj
S/YmVJ1Ez2paAzzeIhB9u3YTvO3NH6QzGuCxOpuLVgubMOLgS2PLZYDdyt4J
qq5b0OBUPvLpqAGmeBQe7TDbhqiz0nFD1ga4I7lx5IPmLlDRtKLGcQOsGRTe
wFO7cKPUfivPzgAHHU+f7A/fhcylOF+vUwaoMzpl6fh6F8qiRk7uuhsg3+PQ
zi2NPRi+f01K6LIB0sRVe7YIkKD8p8khnzwDtEhwpDqvRIp1IaFp/QUGeE/r
iYCFISkCN6OpSuE//7P9jfr2pGjkqtZMVmKAd+MetXtfIUWXxZSn6VX/9Iuv
S2S2k2ISPUS/avundytNOvYUGf4k3JWg/mOASQlW7Lp3yXFZubhBe94AmVue
TUApOZJIvLSIWDTAd78bN0wayZGD4XPwyqoB2te/NsibIkeDQY6WiT0DFB3Y
f0pEjgKL3DMd3jAZ4rfHbZsvP1KgR0LGzRAFQ0yT9GeL56bCwNDHfNVKhqhs
ncz9V5YKI71rKudVDHHM+lK9lwEVZpoPfnbXNETL0HWGggAqbOdgF7HVN0Tp
l8sKdO+pUKz4ToOsnSE+vLCx9TmcGmc70v/+CjNEspEGlaWlfei2b/j58SuG
6H4p7AIvPQ1+J/AENkcZ4sZjyR9uojQ41Fy4fi/OEO/phtIbONJg6+saUqNk
QxQbjbSzbafB/OefWYoKDPFT/NivVwX78eRdbmXX/wzRmmZfQogvHX4adNns
7vw3z9+9aEISHVqwFdardRvicnPrJdlSOjRIO6bF0m+IwXHZfe7TdKh4E4ya
RgyxtoHwjnj6ADJHuTjwLRii0eOONVYHevzP41HkV3Yj5M2R4yHKM/7LLWcO
8XIZ4VkBSws+XUb8EC3wwuWwEb7omRqisGbE3uwHv37wGeHDk4282wGMONxz
13ZBzAh/y5078qiKEWeUkySp1I1QKosg9EeZCffRBA9JORth0uRgX6sJM+6/
oxDgf9oIv75kGSxwYkY6weUD1a5GeNjo1qFUP2Zk1PDTUT1nhFy8mcX56czI
4edVputvhL4HLxSmjzKj6Genq3ZXjVCCyF77MYAF9YsNpGOKjFDBToGMq5QV
/T+zetU9McLxIe0Tw42smEPz/dFCqREqtjrYPO1jxeVzIYecnxuhNNf1xOtb
rJgv/oRKo84It4MWG8SND+JuCe3I6nsj9Mz5WUu+cBCryj4kev795+ds3N/7
huw4NnqvJW/BCA24enMHnNiRlsF9b2jJCCNfOmkI/LtVTvvsBeqvG2Ei29rV
zXx2ZJCWdhYiJaJBa4Vn8Q47ej5PURxlJiKTP18pUw0H8ldZT1goErEuPOl0
pioX1kvbmLxUJv7jvdCssuFC26c2NXxqRPzBZVj9y5cLbxTaXv8LRBQhfzP6
9DEXrmeekLtpSMQZ6lHBaLZD+CHcIabdgYiBJ2M/Rm8cwjB9V0GIIeK7g1Ij
pQPcyN7ierMwlohfKVwa/Je5sQLPrh1IIGKfYV3fcRYenFZxe//1BhGrqVkP
RlrwoJWkR0DoHSI6pr8zM+7mQXEm7+bqYiIuh0T++tPDi0PDAWcke4jYQrN2
KmeVDzce/Xnk2UvE6WSy7p9U/Mjld266qJ+IK7nfbyM7PzpSO50X/kxEkvok
Oz5lfhyXMwrmGSfikQcWJvdC+XHuBt91xmUisq/eVLlKJoBk0FWxzG6MObJG
Luk8gii432BFlssYu3wbtKekBVF3oEnJ77AxNhd/JRJ0BDHeq7Z+js8YW0v8
mNU9BJEus6D1h5gxRmkd4V+vEET2hZDhITXjf3k17U8jUQglC0TIXjsZ43FN
YbHda8L/gu3aAc3TxlhnfDlsLU8YrR3bOBtdjfHzR6mqfS+FMYzdQ+btOWN8
LDRzLOCnML6/Xuz8LsAYyeljZjz1RNAzULKxK94Yn/Y3BW1SHsEiPdmw0WfG
yCwbCoR7olifT5bgVGGMfAozel5Votiz15s2VmWMNUo/DUs+iOL6y4CS8ZfG
+I5UqzKMXAz1j1UP/2g2Ri/znd/uF8TwB5uyyt9BYwyaTjIPNhTHzYB9er7D
xsif9jDvxFlxpP84ZL7w1RhdzX5l20aJo8L1EI+l78bYf1mBpPilOF7dq8tY
+2WM+4h1UU8kJDDT4XrBpT//9M6/kgg0kMDSl/bPNuaN8WNT9Cn7sxLYH7Dd
urVijJ2Ftt3RDyRwuqezN2zdGEsyWQnN9RK4ffT+6M6mMf6XsvWCf1gCGa+f
n43YMcb6i9maOWsSKDitsbq3Z4y7lTkbygcl8X+QptfJ
        "]]},
      Annotation[#, "Charting`Private`Tag$38657#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$38657#2"]& ]}, {}}, {{}, {
     {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[{{79., 219.75899170402343`}, {79., 219.75899170402343`}}]}, {
      {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6]}, {}}, {
      {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6]}, {}}, {
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[{{79., 219.75899170402343`}}]},
        RowBox[{"{", 
          RowBox[{"79.`", ",", "219.75899170402343`"}], "}"}]],
       Annotation[#, {79., 219.75899170402343`}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[{{79., 219.75899170402343`}}]},
        RowBox[{"{", 
          RowBox[{"79.`", ",", "219.75899170402343`"}], "}"}]],
       Annotation[#, {79., 219.75899170402343`}, "Tooltip"]& ]}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.795197866470933*^9, 3.7951989465531683`*^9, {3.7954550143966846`*^9, 
   3.795455019392119*^9}, 3.795455056767211*^9, 3.795456886867551*^9, 
   3.7955354836108828`*^9, 3.795536322867588*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"8e15cd9e-9a84-4383-ac30-5621312cdc04"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"confirmedNLM", " ", "=", " ", "\n", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"confirmedCases", ",", " ", "\n", "logistic", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"k", ",", " ", "0.3"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"L", ",", " ", "80000"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"t0", ",", " ", "17"}], "}"}]}], "}"}], ",", " ", "t"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"confirmedNLM", "[", "\"\<BestFitParameters\>\"", "]"}]}], "Input",
 CellLabel->
  "In[138]:=",ExpressionUUID->"f7e044f9-3869-4efa-84b9-e7caa33131e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"k", "\[Rule]", "0.19208348168637232`"}], ",", 
   RowBox[{"L", "\[Rule]", "130853.50044712125`"}], ",", 
   RowBox[{"t0", "\[Rule]", "68.67429202487696`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.795197898071126*^9, 3.795198956655655*^9, 
  3.795455024373719*^9, 3.795456943552423*^9, 3.795535503751629*^9, 
  3.7955363261941013`*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"339d4093-d496-4c96-a214-0f23f1ab1c47"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"confirmedBands", "[", "t_", "]"}], " ", "=", " ", "\n", " ", 
   RowBox[{"confirmedNLM", "[", 
    RowBox[{"\"\<SinglePredictionBands\>\"", ",", " ", "\n", "  ", 
     RowBox[{"ConfidenceLevel", " ", "\[Rule]", " ", "0.95"}]}], "]"}]}], ";",
   " ", 
  RowBox[{"cnf0", " ", "=", " ", "\n", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"confirmedNLM", "[", "t", "]"}], ",", " ", 
       RowBox[{"confirmedBands", "[", "t", "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "1", ",", " ", "\n", "   ", 
       RowBox[{
        RowBox[{
         RowBox[{"confirmedCases", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", "5"}]}], "}"}], ",", 
     " ", 
     RowBox[{"Filling", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"2", " ", "\[Rule]", " ", 
        RowBox[{"{", "1", "}"}]}], "}"}]}], ",", " ", "\n", "  ", 
     RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "@", "Red"}], ",", " ", 
        RowBox[{"Darker", "@", "Orange"}], ",", " ", 
        RowBox[{"Darker", "@", "Orange"}]}], "}"}]}], ",", " ", "\n", "  ", 
     RowBox[{"GridLines", " ", "\[Rule]", " ", "Automatic"}], ",", " ", 
     RowBox[{
     "PlotLabel", " ", "\[Rule]", " ", "\"\<Confirmed Cases- Germany\>\""}]}],
     "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"cnf1", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"confirmedCases", ",", " ", 
     RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"cnf0", ",", " ", "cnf1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.795535511697474*^9, 3.795535513070065*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"d3ad6d89-cb23-4605-b29d-33701b409f46"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJxF23c0lv8fx3EjI5QtIlIplVLKKON+23trUAgNDSoRRbKVVCLKuG8rmUnI
jsuKUCRJhexQUpI9ftfvnO/n46/Odfr3fb1u13mcp7j9RbNTDHR0dONMdHT/
/3eVXe5rerrfFKMJ+vPyE62UgHXl4/dYmeDlYfbeY8OfKb/j+7j7HnID7dTI
dKx0H8VBf0EzaZcgPPF5lVs2NUxR4ebnUUsRBd+bOhmCLH8o/Z7LRTFtm0Cd
t/E85fM05c31ZdnU9VtBjjvIxs6CDpjYhr26nm6HlwYef6/8Ywa3rS33/Tft
guvnDoaLs3GBRmqvvOjePXDiyVPV4hF+8PBvDuWc3AsRdms5tcpE4cagmg5b
9D5Y6xolb8srASJrC0bKZGXh2sRxB9diKRjy3nAp4J8ceDwrpqYL7gc/Nzbr
Q48U4FBTVu4db0XQzf+xW/H4QZi665glYKwOGcVNQx2CSqDNoP6+8K8edGrs
Y/IpVAaPe0PtsifN4IDgPValaxQ4v8to9mKNJeQryBf73APQ3aFY9jvFDuxu
J/aMXVYFHYuiO50tjnDsFfu8nKkarH/w/pfw4cugnF9UHyCuDqIGimarst1B
tvkbqzWjBshq7lz34bEPCDzTXTjQrgFqAa5WIa+CQMM5r2/iiSaorh/r+T1x
D4LNHynKBWrBgvzT9hfRkZA3/0rb+7A2uH1rK3rkSoXJOpvXJgd0IIPoUjJ5
+AT83Jfll9fpgmnfVyHLgCyYHek7nvtdF7T20irfaOVBoA9MjtfrAW036/RE
fAnMfe5RkYnVh13GL8NzvldCmYCvl8lZAyj3Xdt5p6EOHrrHSs3qGMLg/NSy
KXsLWMTO3H8qZARbVbb51s22wY7+5lPd80bAo9BoLR7/FYbHRn6tbzYG5oN/
vcVDe2FuzPelkLEJTGQWzRVWDwLbdKPU+QoTYGn6bRDwYRTu2xUuqkiagoNq
R2TKu3EQ6/7G0hFtCgeq18UejJmAQwa32G1Xm8EWPoaEkyL/YFm41dHxshlc
5dvaLX9gGvIXjy7L9ZnB49xzXZv3zUI3+I4H65vDj/AsxbqSOch22/75da45
jOyhLfBNzMPtsrULDZssIPL25o/28wvQcTLSw/SOBWxvZaXdLl4EL7nBmeVl
CyCalTZLWy4Bs866D/dZFymKvLNphdvaKbmZlbe3C3GAonwym1tuNyXDbXyn
Wi8fHE5jPBZnNEgxyWaVcjkrDGyhRgb6kmMUVQamXiqvONz87PS4Zesk5bDn
zekE9y1QO8+XfWd4nnKm6oplVc822K3GbtRynBGUBY8H5ZzcCT+0pMSubmYH
75I3y7ZVuyH/WIzXmQoesIk82hfFsxe0uEd3FPwVguv7b4+GvpaB6/tkqqSX
xaHp2sJjhzP7QeNGlPWbGEnwfT2SlcAvB/fZIp7tX9wD++cihi68lodf7+t/
h/nKwxDfvGb9tQNwce/vTT16AHNynWwhBxVh79g7hbUtWqC+vOwmNawE829t
Jjy9jCEku4fZ5rEKtPA8uTVTcwgcN1XY3JcAiBGQe31D0gbY7H4ayNOpwvkQ
7iK/sZNgk9zuFN6rCnTuY6+vHXKCJoW+XutiNdgZJ/14jborFKs2DV8KV4fk
dV8Ho1d7wdbyh36NFzSApz/o/Qsnf3h21/tilLImrAm3+DkTHAJDJyTu8/Fr
QU/eROgfnXCgpmaofhnTgn32PvFGB6OhzW5t8Pc6bdDgaNrafzYRSsWkl1PT
dGDqb0FUumIalO+53NBxUxdOzDhIvo7MAcrLB5KmR/WAN6B3VjizAOBZmBC3
jD78oM8iDIfK4dhMjrUqgwH08B61sk2rAUnte21bPhvAwQmWt+MZjeC6Wq/b
+IUhJIjfpztn2woUysD1qhAjSEsNmokX64Dbw8czvE4ZQ8DrGwLL+7/Bl1D+
/OZ0MzisFvwDVGdAV8zJ/ZuAOdz9/vdRKt0caB07dHLbTXNQ+h5itcp2HkSE
4kbrR81BhP17rOvNBcjhMju49ogFeHlrduSfWIQMw1dFabUW4Po2ersf5xIE
tg006QRMUeKa608Oe7VRYnsrlDrDWMHS+ziT075Oylu2EVEeRV5YTE2JM3je
T/nixXAgpFEIJn5Q9+fMjVIu1bK4ie3bCD3njKkbgyYocZ6Ujg1PN0N+CcN+
r6ZZymNacV3+4lbIv1iRx1NPD+LcSfR1gTvg98vyYqEpVrj+u6nu8sQu0Mvf
dlT1CDeYim64+yVxDzwc8B7o6lgHs8eyFI2sZWC7RwCrfeJGePI8/rcc3X7Y
Tj9gHFu7FYxGjRuzU2ThZrPt6wJlabhbdjRzxloeFCRe+TGXycL+Wr/391gP
gOONy3U3fylD0r/+OPvGgyBODN4eWNCAq8dPZ/v5KIFY5rGU++KGkDe7mnl8
mwpEWIZk2zNYQMBuZoddfRTg+nHhk33PMfjWxM14vA5gafXXl93yDnBCQGkb
ka4KQk5pjmzz54Bv/qqzXqAa+LedZ2Aud4H561Udc5bqMP3v9fkjNdcgW6tE
k09BAz6XViWs/ecL9hsGZIdXa8JI2SPJXWG3IPLMzyLGLk0Q0mbqsWgNg/DF
BJVbxVow9F1kWOboI6jZffq7zH1t4HlldOgXYwJ0/H1tv3BJB3pfBu0xPfQU
Nloo0P/U14Vnu9be2lqVDXHGJVX0G/Xg4R/PqA3D+dAXNRzks6gH1WyLunPP
y2DHiM674nf6UORsMHlVqRomsoPTDiYaQGpHh82GjDcQQLgEbrlhCBac97U/
Sb0HPSfnwP1mRvDnxFn5JN92+HJK4NazPcbA6yIZpXKiCy60XVkbd9cMFB3v
G09WTIP3WgfFOwtmYFLKdvNo3CzwGP1IP3LKHE6caExazzkPp+r6euvemYNE
XAA9h+ICxJ3eE/tTyQI2O/Ua5kgvgqpluuCNNAswlS96uH1oEWq6nlw4/5oe
etfxG6v9+0R541bdfjWRE/YpKBUxv+yhBPX8U3AJFoCeuKYjW7m+U+q+rRWz
YtkAnRuefhv1G6fwUBgMRSbFwZ72MnPDz38ULs8KgS26EiD7O8GhZs8SRW5o
14/maknYunmdTQg/E1iKCbDHqEvBwsXt7hd914B/wGt5o3BpuJ0cIlerwQfn
OR7Km/vvhRPDJY4bVERggeN0dKP0PjhyXCav5NpmmFS3VA17tx8OqKjtKI7c
AflJ/vfCA+VAzWykTOW6DHyVbxbv3a0AslZNRdwXDsDjk1dK6H8cgE9fbkVE
l6mCmUebx4t0RVDk2ujY2qgDXEnRyu3GynD2ovRerlWmYO9QyPKWlQJfPG9k
bH9+BO7tmmdntQKYUZwr2GVyAuT+vY7iOaAKa5J4O5gbTsPxPZfzTwqpwYXK
K4ZWAxch4KrhoctjauDFHuYX8t0N3FnbZ4Ya1OG0Vs+9fl9voMlerPBL1ADO
PUydLEyBMLMomK5xWRP2c4w2dqSGgpyVzSkJQy0IFTk22fotAtJM8zWkNmmD
X1SJd71aLAw8LNgaR6cDbg/Euf1+JQFN/1GseY8OKPI+CtHTy4DjazIiavN0
4WKFzve3vS+gb/3ZewlhemCequqxL7wIqNUKWYmn9cGXrndDShIBoSxCY/Wy
BsBjcVP6qdRrsPn2kI6T2xC4jxo2P373Fq47VohOPzYH/UqWnUkZ89B67tDf
N8wWMHH72F2figWoKbnyWfqyBdA16sjF3FsEXrX3R9v6LOBU2YxlvewS1MQ0
6kqo/aV0Cbb9zMv7QAlbUIl62cQMN1bZW2ayfKXYfDwlOHeGB8QUXbjTfvRR
RE/epEQtCAJDseWr/L8jFE4jHm8iUAyoess+D6v+UAjPeJ3jypvBTx0Mp97O
UHJCO5d2hW6F37xf1miy0UPEGk2KmcAOKL0pu+/8bxbwuPMu83rILnC+s7DG
5RkXNNjftPc6uwcMlHfFc3YKQNG48kC2pAw4JKx9t3lWDML0LsclNO2Ds1c9
u3SHyTte8Pvy0kkWPiZQwlond0HJhtK75dvlQX31qjqlof1wjKq1bqJZATj+
ylwfeq4EU23fB99FHIRqG/eT/uIawHUnuuGZgRLYFa1OUGAyAJ14WmDhuDLY
yl9PHt9tDjabG17mP6PAeqkXesJvraDBb4vNrwyAcz7nZhLO2UNP8y/GT3dV
4a/fk64dPWdB4XhlPpxXAzrp53QPmF0g7tGrlgpldZh/FLjhXp4HTLAZphZt
0ABJN7feIHVfUBoUEOL+rQES7h1yDknB8HO02XCe0AQdjavTFpvCIFRSRNk2
XgtEz3eZp7tGgRJ/+KMOF234dt9byqmQBkNd4Q+3HtKBP26c/WaXUuD9YGzc
v7260OoYLrZAfQYNce84vzDqQYR+46IDbz7k33morNCvBykLSVxmyaUQ3vuQ
eSpfH/iZY/nU71fBJ/uAcM1AA1CnxgtrFdQDhwjL57UOhtCwa/rLfHQLGAfk
hYzJGsF0QHr+VMlH8Nvyd0pTwBikP3+ZUrjRCXIzSYp+N83AX/ZMneqNaRBi
ttlgN24GB6UsdI85zoKHdkHTxaPm4OH1r+vm4ByEiAZZ1xHmYOF9+IjEugUI
fxDf+FXaAuo30Rn/418EDtt4ne/RFiBxh29Ys2URBkAw01KCDpbm8zNmV3+i
lIep7THpWgMqSfMtlxh7KIKZLjJW+fxgfy9F69eOIQpH3R2J0woiIJJ9ibvK
+BclI4FxXZe/OGz1rk95seofZZ+nWLB9zxawcn7xbpR5kWLUZrJJ10wS/I42
KXjtXwWNwsU6Em074XAQo/sGAw7wEasXPrJDGphoc1F63rwwYDLF8U9vL8RF
EwMFPMJQmjCtKjUvQ373bP5ZVLQJerp3jM3G7AdzOs4vlhHbISa/gBptKAcR
haJTxYV7gTV676rUOXlIu/S9ltFFASqU5OlO5R4Al7vPHFuWAZ4e6ajc4KII
KXs2HHlarw0ZLU2W9CLKcEZZgmXR2gSmWA2CI1vI3++/3K3f8w/D/Dbrl40U
AA2/iVJ5G1vYmPn5zxMRVdj9XPV8Xvsp6BrZ/MBzURWGi/jP8Ec5Q9qnR7Fn
PqhB3cZVvHLcbiAo8f53ZrY6DP+JGBGk3IC+WXrxbcEawLc9lOGEbAC01uqH
Oh3RBKmwWI+X4XfgXpfqnMheLfjLtsFemisCkryk1RlZtcFZNC3qwYEYOO7Z
1646oA12ThWicpJJkCXr8PZGjQ7Q/yn5WaGcDmvi10g3R+sC3Wov+tcKL4DL
8cZXD1c9CA7RcVyILgTnogF7SwN9ED6qJ6rDSsDk8kkJJhED0JcNZHA4Uwvq
EQ9Ghf4ZgP2XVjeToibosQtR5Qw1h9A1nFVWgfMwXTnj/GbGHBxmdZcZEhag
ZLBvtdhJC5g9d/ojq8cidGvX3VJps4CZ0CXTVZuXQEfpq+S5PxbwSPptWJv2
EgwsqtziTfxDEciv8mQ0+0BhC1lSSxplgqlawVc3rn6hpB7cwu+8xA09Ow8S
eaF9FOLTKzWRSEFIz+q6vnRlhPL0Oa+OL78Y1HOcmPzs8IfS6tnsM8+6GTJH
fomeMZuhlDE6x5wz3wrqjdctjmXTQdMdge5H3duBn2+pMf4yC0wdbd5w8/Au
KLhbt7RoxQUsgXsMDQ33gEjRgnecnQA8Lg5SsF0rA2c8R5K2WIoBs6CVy8fc
faCWxN3d5CUBkoEi9sWmsmAam1bpeWgXmBj99E7klIejv9huXvbeD863JUuS
8xSAuYGQj+FXgoSas2xMHgdh3YML5/YXqoP1pryj1TJKwGJVvGWLpz7wTDjW
xn5Qhu00ISffejNo2iBl6xFBgWpLaqmHthVUdD27UxgHsIpt1YQSiz0kSOm4
9N1UhdOrd8oLHTkLDaFDnxRt1MBV4F3D9WeX4adEqUGStDq8SsiodZT2AD4n
gY4QLg14pDhZeHjMB7br5oRI9GvA25RWtu7dwfA4S1VwOlcTeJvz36+JuQ9s
5ZZleuFaIOuYf3kjcxR4sKZdzDypDYe+V38+wkeDsVaPZ4raOnC9KjhCnj4F
MrINz81t0YXfFvZu3zifgX31UbnX/3TBIXpj6LqsPBAJGhXka9eDo6XFozc2
lsLrrpJNfGn6kK+Vy1d/sAoayvxY9N0NIKZbM9yRUg8tuu8ZVh02BP/U7B5x
sxZo5Ty8pmGbEYjPvrqcY/kR2v3tdvOsNoYg5/r999d0wvqQg2ZuHmZwuk/j
3Jlj0zDke2xt07AZRCcx9g4ZzsLOGuHueVNzWAyU9NJumQORhiPCdcXmAC/C
KqpWLcDabZ8czLdbQMz78EN1rIswYRdzIi7cAoQMwzQYaxfh+0Dyw8T0JYr1
2VDXV4/aKQqiDF1K8xxAVKg6dFl9o9hx7ZV+p8cPiiaqktmlg5Tsgw2SP1uE
4bqObtqjkjHKVdNVXq/0xcEtQlUi6uEkRcPTuII+aws8bz0san51gWKl3/cq
UEgSzrXLHfWpY4RVMSHfz8XthEKtj/1KBeyw/LP+7rGp3cB+aKB5dAMviF9J
na7dvReOhF7Ymuu7HmLOQVRnjwxsve7+b/WxTXA4i7d6t+9+iLXa3dTFvx3u
KZtIUPfKgdCxwWIvy71Ae2P/73aPPEhSyifjZuShVVIoWSDqAFguNbnZPwEw
0bYaMj+sCOoPDjWt1deGqTND3wUYlEG3uWPw8BoTII4J1F3LV4EavqiaLMXD
ICOxNuSZDED3thbdj5U25O+eg5jzWvL3+2pJeNeJU0DTurEcNK4KP8/qeQhP
OsFB1lfl9q/V4MTnzbbi6a7gmPfuwr0EdTgXTLwpSvKCVccbTWevaQD72rOJ
91r8gdg+uOirpwlZOiHRXBx34GB8Xo3gZi0IO9C0/XZmOGzkcar6NacFGsNL
/oVF0fDYeSabr10bMnOPBfPUJ0L+Dt2h8AId+LqtwPNCaRoMnalY+BCqC65f
B41uDeVA2j0WhlOn9WC9dd3V0+KF8Cn3oIosRR+25K8Z33K9AiQXQlQ3cxqA
zPHScmGWWpAbu28r9t0AJu4d0Qza0wQR3eNmsYHmwLq18LmpyzyEODVIvflj
DmKRWkbd9xdA1nN9UpS1BYj+/OnlfoH8/tCrSvjbZAHxVDHHY0JLsJvSDmKj
FgCRI+yDKktgf6CH6+WMBeyzlHj2yGQJXJ97pIa0/KbIb7zr3Sv+gVJnYhP9
+BoTbLvzzYZD+gvFwMmfN+0NN6RP3er9ad1HCee21rC1EwQBEbkGTtkRissJ
vmd2XaKQNVvbclD2D+WL53eRxl+bQC5yUSCYf4aiViE3zCq/FQwu31ot7ksH
w3o3n5VUbQcL2V9v5faxQEFF82FfpV2QqMZmbi3DBVsFblfJUvaAEJ1apaWE
ANwSzbSXp5eBhCOaamZsYlDlbdQ1nrIP9BTvV7VpS0CS7ohEqbosnGUwA06W
XRA7FDAdziAPUtWJVYb6+8HjZvQdrxQF4CL8D2e9UQTXsgyRjecOQuExZ9Ee
8o/eVb8qxN5JKMFpt8p6IXl9cBc2GrxbqwzjE0FMglFmwCDctc8qiALpQXZ/
Epms4OAdl01xkQC21fHhFu12QPfVdfuwB/n73P1FJpH3LPBIXDtbfEQNjl44
NfvQ9zLwjRWHREiqg63oFyvbX+6wRdTz99/VGlA04fP1W5UPbJz3qn7eqQH8
rAzPfv0LAue71xcnMzXB/M3fKC6t+1B/a8aTuKMFZvNPvZ42R4IAQ97Xh9ba
IDQUv29tDRUuvf1xQAt0yD8gAvm9G56AQMTW916iupBevWZ/w5ssyG6n6pb9
0gXh0/sc9l7LAxP/SGa/Zj04nZ33ZfxbCfR8fbsnOVEfqlPI7zXuKqgeoa8y
vGQAhy5U+ZesqofcEwWPvI0NIYFi2Pp4dwtEHEo1KtpoBOljxIWw7R/BJ09Q
z4PBGNz+SNbtaf8KHOZBXb9czSAmoE7FSm8a3lK+BPkOmsFyH/e++zALAX7v
hiqNzKGeft46rHYOBuNhTqvAHDrXGhi7zc9D058Jac6t5PdPMvFbmGERTvU/
+jl1j7xvX29bw4pFuBrVlSf4eZFisVHVxdW2nfJvwG7fvhAOeKbdMCHH/I3C
rB62i1WAHyZ2j2zrCRik3HQ9u0OaKgyNqznjBC6PUTrTA7KfSYuD+hGds2et
JymGnmeOvX+wBZYF+EBAeoHSw5zJvmVxG6zt4k749oARNlr+LbjrsxP6X/mY
uF9gh3LzN6+tO3cDg8paKedfPOQPJ51T9sa9cFjIQcDi4HoIaT5J5H+QAWcd
7k99UpuAm5d1t67rfvi1k8eWpUMSWBk2jNA2y0FFfszL9Tv3wojdvJPnB3lw
333jUFOZPHSKhriOBx+A8YD33ifdASQosTPOOopw7cGfm0prtCFu399s8X9K
0MHzN1im0RgkAueHzj9Vge3PA1MY6A7D2+TTrqJS5OseySD6xtUGwvK2FZix
qIJpd1Zc79ZTsDSZXhA6rAoXYCnvxBMn8E8wNumpUINAN7uFT26uEHb9bcbN
aHUYes2sVXXIC/jX7Dlnf0UD5NzU1Ppo/lDw9YUchwb5e57r05v3JgS4fH6m
C4howUYnFZmFa+HQ3cnud3JSCzr5p1Nkr0WDnCOj8NI7bRA+IPWr7HEiKEiU
uVCf6wCj6t5XBzzTwMzgscPhIF04/tNiz8yrHJhMNOA/ZqsH8qwHz88MFgBH
zuDOZAV9+O214PxdugLU5qjGuawGEJp+xyf0Uw1Ir+dcv6mH/H1v5J5yHWuE
n3FJx+z8zGGXYlBknuM8mKvnsev+MgfxxUnx3OAFmNCUczazsoD3Q9ds4k4v
gnxThZTRGwtoMz/S48q3BAnEh6ZrQxYQMfj75PGDS/CxpCuO858FsKZ3xCsa
LMF4YV+A1YIFpLwfbRm2WAKlW/zyWo6/KUF3jEMWV3+gbN1/r4ZXlQkmzCK3
xLF/odCY83g0n3ND0JcK4qVWH+V6tlStj7YgJKS59bfyj1A6ih5+M60UhecC
ozLrRf9Quj3/jub2bgIP/SJDk+lpCvMGYc4Oya1g9Glw8sU5OriasY+/KX87
cNUuFwIfCwj8Nb7iJ70LmgcWB2REueCljezidoU94HFL8JAbiwDQmb5yT57b
C6c5lP329YvCxtx6nhvx+8Cqbk/F7V0S8C2zmaVMSRZ45a8Q23qkgJB5n8e+
IAfvN+x//2PvfrgxZzrpSFMg96DwJsMTRbBRaEzZ5XAQ1rZoiY86qsMncy1/
czElEG978MWcXx925MC/oHJl2K3YtkHghhnQomVFG29SwO/EqOvkgCVM97Y5
rQ0HqLFrkOIpt4M9MuxM591UIT3W/YHkhCPIXVaT8bBQg65ygZ8N5y9Dmknx
dg4JdbDhu7hN5J07ZF195pXGrAE/Rpq1mp75gLBF/zfXzxpQecFOPvNzEHxe
FPh9JY38Hue9KH1K5D5I/qo75nlLC9r16iNi8yNhwLvowWorbbAsjM5ViKNC
rp6ET6OSDgTA6JtDz5+AAVPEKhVhXWhzzFNYfJoFFifAXP6HLtiG3fowZpsH
o/TnFxWa9MD4luqhbxUlMGb1qfAcTR/8nSbsDy1UAvioijVfMIBLjuPGEd/r
YPNPyT5FA0NY/dVw65hIC7jOGF+U3mAEl7eEr0vk/giH9CeP7Fw2govq7nvj
S75CkLxU8s4rZkCZT8lrVJ0Ggiak3tlvBhnOSotfD8zCi95tP7YYmgO7m/Da
3cQcNLC9HAnKN4ezY8X+dVPzsOMTnYDTFgt4ICIiXLm0AKJPomS23LWAihJ2
JaeyRVC5eF297dIiJTL4dFyAejvFov6BTbYpB9z1dHh4oLObcrSzQiplng+Y
qwa4np0dpDhyH8g08ReGJ6uaj8YYjFHWttfUpYiLww9uyzg2tUmKmeeV7cUB
W0BRPeRNCfsC5cnJ+zJ/f22Dh5tZ+jXdGSG7KFU03mUngK6DQbc2O4gG6/bb
NO8GzXxJyc52Hmg2yEpNEtoLzk63lcYE1gMDg/vHjW9lwNv8Vdcc/yZw1vJz
aHfaD4MslxwPFUuCxknGxngROdhZ1aElyLcX1mZr75hskocXk9t5ReLloTda
reurzwHgJtbL8NoBcJWW+nqpKsLNtfTTYb+04FL0NZ7UX0qgENJfW55sDB1C
v6ZOxqvA7qzcF2f7DsH6/vCRdkmAgrIPbneMbMCQLYS+llEVunvfJ4mynYLd
BhDOOagKsY/LB1u9nCDtp6BQfJkaEA0CS/bHXWFLd5PuTKQ6lOwauvJQ2gto
p+ynBC5pgOENg/iDQf6Qu1/Q/D1oQsK6Ka2qtBDw/H0rLlJQCyKLz2ectgsH
FbWvdmJ/tCDY9Wt3tmU0MA2yvndp1IY/5zqSwTcRrif9K9qUpQOeVq4XrY+l
wa3yVY/W+evCmpGDVz+k50DMznHR9mN6QLdsyetRXwBPd5duspLVh/Z/o3uY
2SvA6Fpq+zUmA8hbuJA/UlEDWTlG7smdBmA2qD+ysakRhBbmbWt8zKE7fOOG
bod5UMjeNn/rpzk8/VlyJ9J/AUx3aljkHLUgv3uSt2c4LMLv0HIXzzoLyCl2
41jkXgIr31ae1AELuH7e7y2vwhLc8+zsU/pL7mky5/XVekuQ5tHbEDxnAewj
BTGVZksgN92vsmvJAp6frzJbc2QJkN/bOt4feiVCI5Dfv4AvAUbkM/L79C0H
BFOFaQTy+3gXVrl362kE8vv6mld6mUI0Avl9SdLVuql1NAL5vfjh43+q+GkE
8vstQsw3XHhoBPL76GvzB/vX0Ajk98m19r2MrDQC+X1Yk2fT3mUqgfw+73bh
+vq/VAL5vSVTNtwYoBLI7x9LjTGGvaUSyO/LAv0fLDynEsjvk7tuNQf6Uwnk
91/dzHSctagE8vu1cnUG3dNxBPL7JOs+Jka/OAL5fUjEVbWmkVgC+T3zi39F
g6tiCeT3/5wMQ9Uaognk94oJTiLeso8J5Pe0yUtrKtojCeT34dRYi8y6cAL5
Pfe7BCnmk3cJ5PfVqctbMvb7Esjvj60fWU246BLI7/+63p7+mh6I/f54SYS2
T3QM9vurhd/r32mkYr8XVUkb/T2ei/1+8usxUUHeMuz3KTbr7HyGqrHf11xd
WxK7qwn7ffq50HqJVR+w3zcHgD0t/TP2+0mwdAl70IP9njK+VTK/fgD7/a47
7meG20ew3+t9ju+Hll/Y7wsKfr4sXL/i93NHW2SCqZPY76+cavdeKpnCfl+i
7Nr6I28G+/1GzoOOtfIrfh8+qrb2geOK32cxDH9Nc1zx+8dnnp65vGHF7216
Z8f+5S5iv6/XbrgXQr4PyO/tgiv76cln5PcRNosK6uT7gfxe4XA8kw75fiC/
5wFP235BGoH83iacYXZCgEYgv2c98KZKhY9GIL9nS/h95xgXjUB+P+XTwbmb
nUYgv29ru7NujpFGIL93XZ3O+nuWSiC//x1C11H8k0ogvz/A1Oe48JlKIL+/
ctlj568K8n35z++dz+nxJMdSCeT3I8fKev3PUAnk9yMXVofv3UQlkN8Xyv71
7a+MI5Dfm5il7+9WjCOQ32+6ffHYGt9YAvl94Cej5TTXGAL5/Qe9dUb3OKMJ
5Pda7c/2hog9IpDfv77SJl/t9JBAfs/16aNS3kAYgfw+4Z2Ma3pTMIH8nt51
18HGhSsE8vu4V8xcW3a6YL8/Nb6lkWldOPZ7oWuXNg3/SMR+r7tclGjDkI39
/lvN4hnKnkLs9yEh+w/sqyOw3yfY9K7ZWFOH/Z7+47poqXMt2O8NjRlzfmxv
x37v3ajm+orShf2+i3ZwqbNqGvu9punQ7Z83Z7Hfmy5HXOX6PIf9nr98n0jw
n3ns9xXXjAVN3yxgv+f/oXGK4ryI/b7qV5xiCnmfyO/vHKBr204+I79Psw3c
5E7eK/L73HtQdJe8V+T3ZkKMIfrkniO/fyp3du4auefI72+cfSuymtxz5PdR
lSF7XbjJe/zP79/YZG2L4qARyO8L0+3a+JhpBPJ7eyaLq5kLVAL5fZbqmSGH
31QC+X3DleWDbt+oBPL77RbeDox15P3+5/fl5p/1VZ5SCeT37PfO866/SiWQ
33PTX/zNKEslkN+HX6yOYOyOI5DfTwRKTpmciCOQ3xuoBZx7WhhLIL//nKsX
Vl8RQyC/t2EPmQ2+FE0gvzfMZzW0ynlEIL8fOd4la7I9kkB+n5iamHL22wMC
+f2WFiXfnpchBPJ7/twInaJrngTye46U8Btz8sex30/0t9K9TwzFfs8u9UL0
0Jp47Pf1w01T3H4Z2O9HHCn08wv52O8HL06+fFRcjv3+S9e7HYk1tdjvO+ep
Sh0X32G//8bI/+DnnTbs98dtWoW6zn3Ffr976NmNQtUVvz9/OkvUXWTF758x
caq/DJnDfp+g2fjS/vk89nsFVuHGJzEL2O/DT3xQctde8XtKhlaBE3mfyO+7
KoLPtZP3ifx+20cVVnbyGfn9j847uQvkfSK/r2wZXeNC7ivy+7RPWWMnyH1F
fm9TYX7enpdGIL+/HqESLcVJI5Dfb3h0ryptNY1Afs84JtnynJ5GIL+Xmzu+
bX6KSiC/b9131LRmmEogv1fMLxtlbaMSyO9NPSeUNIuoBPL7c7ddDq8LoxLI
7z+tTrdIP0IlkN8nN+hLfFlDJZDfq3jkb9RPjiOQ3ztaT1hc5osjkN/n/V1v
EacZSyC/1+4x+0q/OYZAfv/kLsQQTx8TyO99dsZ1rPaLIpDfd7NU/J1MiiCw
33tfLd6ZdZ9Afr+F8UOWQ3IAgfxe2D9PcnfzGQL5/evjh+7nK3pjv3937kSI
+K4o7PcNx3d33r75BPv9WYVbhfqDOdjvWbk/LWwMLcZ+v2O/HQujXhX2exOm
M9GPh95gvy+1sBWe2bTi9zXrRzfLSa/4PU/q5pSvkwvY78XGSg8xhC9iv/c8
8vHdC/K+kN9b1CzeVyKfkd9fjB+Iuk/eF/J75cNHH2WTe4j83mWVwwUv8t6Q
3+8Yeh1TTO4h8ntjd296R3IPkd8fbJxa9Y/cQ+T30t/9f1PIv2+R37uLnIri
ZqERyO/fj8/Q/1ukEsjvA9bKnRadoBLI70Ui71Uy91EJ5PdxArobrBqoBPL7
yKehA/KZVAL5vdfWqYK/XuR9/ef3HuXN9gPKVAL5vVjtWKTcjzgC+X0g5/10
78txBPJ7Sb6GGtX3sQTy+3aHkRDO/hgC+f0DdwltDVo0gfx+Wdnf1GzyEYH8
fotf6NoS30gC+f2JjMmFqkPhBPJ7ODARtJovlEB+r6nJV3qL4SaB/F7w06lO
S0Nl7PfialKH6PluY783s2zynayPw35f1XimzOprGvb7eyVpUx/+5GG/97/y
I+fliVfY7yfKjeluvq/Bfm8d98XSX+8t9vvJHfY7dGo/YL8XPhcY/Dr4C/Z7
wfH5dLblKez31sllfm3DM9jv6exzWt7brfg9V5r7VHjoPPZ7nemfWbx+C9jv
I3Lep36TWfH7/V1l57zI+0R+L9UvQv1J3ifyezvxpext5DPy+3FVmXWbyXvF
fv9x9XAmuYfI7zvOR9tnknuI/P77nO94K7mHyO9PSPMo15F7iPze99qz/RfZ
aATy+5KgbVu/MtAI5PdhlELOGzNUAvn9P0m6vvpRKoH8/sfp/BSeT1QC+b2K
f/2gVBmVQH4vOX3y3kIklUB+X+f8+QthS36P/ef3/mLESQVB8p7/83uJh1wF
I7lxBPL7fe/am0Ik4wjk9xpZu65NOcQSyO8Dzn4Uf24QQyC/D6stLdzZ+ZhA
fp+xSVbicmsUgfy+Qmet6RG2hwTye0nGh8mztmEE8vu6O6n7jkMQgfx+cJDT
6A/TJQL5fXcJs0Idrwf2+7eZ99blrnuI/X5M61FisXQy9vs75n2lUl3Psd+/
P8Hq9+9oEfb70dMNH64FVmK/H5YQr+hvqcd+f3CntG/Y0hz2ezN534oRrhW/
P1bPVOn+bQH7vXxBrIC3zyL2ew6GuDetSYvY783UPo4UkveG/D688k2SJvmM
/F6I6YhbLHlvyO99zafvlpP3hvz+tVLh+ofkPiK/f/aB3buD3Efk9ybOlv8i
yX1Efg9xnx33k9//yO+Nsv3twsl9RH5/d1sJYyi5j8jvk7SPTT9cohLI7/3y
bxn/I/cR+T3j3WVjzX4qgfz+H+2OwGwjlUB+79BRl5/wjEogv2emKAVq+lAJ
5Pf71Ev/7FOjEsjvH8o/vhH7J45Afn/Jffrxx2txBPL7D9+FzqR1xRLI7yVu
5dRtm4whkN93pBwSvJ4fTSC/f0CT7qPwPyaQ3zPw3+VKzYokkN+HrjsXp3Y/
nEB+P1nIe6DmVSiB/L7cPO3MGmsfAvl9BvXhWN35rQTy+zMZp8XvWwVjvw/1
LbROy47Ffv/nX12Y4No07PeJ92iB5RfzsN//61FW9y8qw35/IfyR35JVDfZ7
oZsle1eVNmG/1/ye/pDl5Afs9we6mE7zCX7Bfi/y4v36PV1T2O/n7a3Gb72b
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
v+vxuL9/wFY0dZUuAff33f+KV8nbJOD+Pnl9YBHjYALu76+Errsb8jgR9/cc
LwzDd4Yn4f7+XOazgJKxZNzfh+6P5DtckIL7e/8zyyPCSmm4v3/O9Zp5uDgT
9/enExoH92jnYL9fVzS2efhlHvZ76fz7lMeyRdjv/W8NJbEeKsd+7y32jGO3
UTX2eymqp+ed2/XY71sCd4dWPGjGfi/vzOyYatGG/X5+ebWqBf8X7PevTxw/
vjGyB/t9++CHjicVK/192w36p/a+K/395mZflZmBlf5e4miMsP2aRez3Cv6K
jwVnVvr7tue/xmpyVvr7zuD0jv3kfSK/Fx5MUM0hn5Hf89zO+mdP3ivye6kC
w5MG5L0iv2etNI25R94r8vtVCv4KJ8h7RX4/Jukr/Z7cc+T3Bj4a+o47aLi/
l8k+nqEhTcP9vU/qjrDXsjTc36uvu7q0h0LD/X3O+6fm1/VpuL9f/VdQ4MJx
Gu7vzZQfPup3peH+Pu0bn15uJA3392tGVx8frqXh/r66tGZUhCUe9/c1JQ9H
jG3icX9vvlnA1LozHvf3p/wW2ZvVEnB/z3XmYKRmRQLu71vmbG/UnknE/f2T
dVfp1XWTcH9vy2FyXvp+Mu7vtXJFzjTKp+D+frOnBd3bm6m4v99iI/3nbF0G
7u8XB3LaRbY+x35vY3mBa11lLvb71D47eL9UgP2+0fnBXpn7ZdjvzQ5bv/Ha
W4X93ieFtmaTSB32e68PfeHR999iv3+5sflSlfgH7Pfzr151HXHvwH5fHOjN
k3DoG/Z7vdFL4ntVZrDfy3Gd/XZAZA77PXdpMINPxEp/nzGhbPjy9Up/v7Y1
taW0ZqW/51tL/fk1YGmlvw8Ns7lA3ify+9F3slmM5H0ivzeub+NuJp+R3195
re7URd4r8vuwTELEkfx7A/n9xrRu42sSNEB+79v+4p+7JA3396NlL1mzpWi4
vz+ZNW8gI0PD/f1H+zk2qYM03N+nVm/n6dOg4f6+UYleTtichvv7t0vJPV/O
0HB/v6m7qCHFn4b7+3XrMsd7Mmm4v//CttPz9AAN9/dhRZd3Ht8dj/v70m2r
Du+Jjsf9/b6rR+1U+BJwfy/yi5OJ0ysB9/dmw0fkOdYm4v4+R7dmTO1tIu7v
rbYxt9zoTcL9/bRw35kl8ye4v09LMbOYVnmK+/sjXfe/ZbKm4/4+952mXWlF
Fu7vUxWl6l+zvcB+HzSztI2hIh/7/SWT6z3t/sXY7zfduRF3V4zAfu/qcfjV
gZs12O+nr1CP6HI2YL8//zHaz+BrC/b6TbNNUw3Gi9jrf/9yqjsquYS9PvuO
rM29zyu9/eIfM01J8p6Q1z/87RhIJZ+R1y/PD/vokfeEvD4zKzhgJ3lPyOsF
A5ILrMn9Q16vHzQWuZHcP+T1DqahWi7k/iGvL6HbcWmQ/HsWeb1WT3xbzG4a
7u0nria/fLOfhnt7njWRut+Vabi3t1nIvFuhS8O9fXxEM/sXSxru7QflfBlD
L9Nwb79LxUawMIyGe3vHOOUx9goa7u2XLFt+yi/RcG/PxmEdwmcaj3t7FtlB
nk2N8bi3F7dyof8nm4B7e1217eJ3nyXg3v5WcLnDa5NE3Nsvrtqcw7EtCff2
qfN0Hgn2ybi3rwobEuJdeIJ7+4hWGcsj21Jxb1//l3J+ziID9/ZSNbUerV7Z
2Oufjp0tajXMxV7vbSa2XH6+AHu98gt76vriUuz1dvFG/I4Zldjr7c0Ik53O
r7HXR3uOy62JbcJef2IN/eqCe63Y6+e7f6uk5HzCXq+us+d0pks39vofnq0D
HvMrvb3wyx+cfd9XevvfUQd/7Do7j70+1kK2qDBxpbfXM+L9056+0tsXnDoi
meW0hL2+bd9EujV5n8jr+TeZXhsjn5HX1zbcP5dL3ivyemFaAUshea/I608V
d8Jucv+Q19+voevYTe4f8npKXcl5FnL/kNcPydy24iX3D3n9K+evb87vpeHe
/hfLnwi6AzTc2798e+avrToN9/bTJx11BUxpuLdPPX7KreUkDff21eXTjK9u
0nBvv9w8/nA2hYZ7+/eq+qDfScO9/Z66J0wzm+Nxb/+41Swn6HY87u1V7u/o
k2RLwL09K8dy+vsLCbi37z7/Vnn9bALu7WdHaSccchNxb//27nLTUlES7u1/
KLxN/yr2BPf2qW/W3Tsym4J7+6Ex5otaCWm4t98tfI4wPpiFe/uX9JTM2ac5
2OtZtT6d/iCfj70+wFlK5vnnIuz1Cj/iXew1K1a8/maYJ/9ANfb6fEbYa6D7
Bnu9k7ZaVLdxC/Z5t1Ieioj0Ivb56DV1I9FcS9jnSx3s7obUrvT1W62XjrT/
XOnr00o0dmwi7wn5fMZJX5eH5DPy+RRe7SQV8r6Qz4+xRd0VJu8L+XzThRcs
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
ryrF/l5McOuzKlRifz/1ad2p8C+12N9dCx9EFDQ2Yn8XtV9l4sHdiv19oPZP
mQbLJ+zvuzT6t23M6cL+zpo25bCKWOnnbc9uUNpQvNLPOyQ3NWioz2N/hyqN
6gs+C9jf1yteG4x/sIj9/dgxO73nR5ewv5/vDVMzJe8T+fv90efvvpDPyN+D
TsqoxZD3ivx9E6NdUhR5r8jfHVvtohbJe0X+HsXQyPab3Evk779f7H+XRu4l
8vcm8VK5B+ReIn8/Gn7FoobcS+TvH0Xela0i9xL5u87rhRPryb1E/u58qnq9
PbmXyN9Tbsc/VSX3Evl7VmHF+CVyL5G/n19d1shA7iXy9/qNTVzXPtJwP/+O
Uv5qn3A87ufD2rM1rbzicT9vdoF+IJU+AffzZtWOz+lPJOB+fjRzXcf17wm4
n4+4U5ZYGJuI+3k98Qnp8agk3M8ffbwZ+v8m437+8e9g9/DyFNzPT3QXep/R
ScP9vNfw3dM5bzJxP/9cvUv8r1kO9ve7wSMPumrzsL+bv2mYqtMtwv6+cPXj
xQiXcuzvXIEHZpJOVGN/37FTmborsR77u8lDpter8pqxt6f8Wd6Txr2IvV2h
ovHuvvmVXt7k6vxFx7yVXr6Rd0sAfedKL//LdbeTzPhKL992wPhu0MxKL2+d
eeqz2OIS/A9NQUsp
     "], {{{}, {}, {}, {}, {}, {}, 
       {RGBColor[
         NCache[
          Rational[2, 3], 0.6666666666666666], 0.33333333333333337`, 0], 
        Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1: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
j8ZBI7hKGt2Pc2TWdVlFsK7MkuD/n/H/BaMt/8c=
          "]]]}, 
       {RGBColor[
         NCache[
          Rational[2, 3], 0.6666666666666666], 0.33333333333333337`, 0], 
        Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl12MUG2kbgOHaNrdbt1vb1ta2bdu2bdu2bds2tlrU35Xz/biSuZ+8yUyS
OWfOJG7UvlK7YEGCBAnKp+D/f17hoQpBWa/rkYXLuj9puaVHEnjvSl2VYGzQ
9cnKFT2AdNzWo7CLIKt0NYKzUTcgG1f1QNJzR48mBKt1dUKwSTckO9f0IDJw
V48hJGt0DUKyWTciB9f1YDJyT48lFGt1TUKxRTcmJzf0EDJxX48jNOt0LUKz
VTchFzf1UDLzQI8nDOt1bcKwTTclN7f0MLLwUE8gLBt0HcKyXTcjD7f1cLLy
SE8kHBt1XcKxQzcnL3f0CLLxWE8iPJt0PcKzU7cgH3f1SLLzRE8mApt1fSKw
S7ckP/f0KHLwVE8hIlt0AyKyW7eiAPf1aHLyTE8lElt1QyKxR7emIA/0GHLx
XE8jMtt0IyKzV7ehEA/1WHLzQk8nCtt1Y6KwT7elMI/0OPLwUs8gKjt0E6Ky
X7ejCI/1ePLySs8kGjt1U6JxQLenKE/0BPLxWs8iOrt0M6JzUHegGE/1RPLz
Rs8mBrt1c2JwSHekOM/0JArwVs8hJnt0C2JyWHeiBM/1ZAryTs8lFnt1S2Jx
RHfmT17oKRTiLz2P2OzTrYjNUd2FkrzUUynMez2fOOzXrYnDMd2VUrzS0yjC
B72AuBzQbYjLcd2N0rzW0ynKR72QeBzUbYnHCd2dMrzRMyjGJ72I+BzS7YjP
Sd2DsrzVMynOZ72YBBzW7UnAKd2TcrzTsyjB33oJCTmiO5CQ07oX5flLz+ZP
/tFL+Y2juiO/cUb3pgLv9RxK8q9eRiKO6U4k4qzuQ0U+6LmU4j+9nN85rjvz
O+d0XyrxUc+jNF/0ChJzQnchMed1PyrzSc+nDF/1SpJwUnclCRd0f6rwWS+g
LN/0KpJySncjKRf1AKqSjNNm3UnGJT2QaiTnjFkPknNZD6I6KUhJKlLzB2lI
y1lre5KCK3owNUjHObNepOSqHkJN0nPerDepuKaHUou/9ULK8V2vJgMXdB9S
c10Pozb/6EWU54deQ0Yu6r78wQ09nDr8qxdTgZ96LZm4pPuRhpt6BHX5Ty+h
Ir/0Or7YXkolAhf0ryyjcuB/YHng2Mkc+K1cYP9y0ZzNO/5kFm/5x2slPM/k
DUv13xS3PYPXVNUDuEBi3ZljpNZL+EwxPZ1XVNH9Oc/vuhNHSaUX84miehov
qaz7cY5EuiNHSKkr0Zez/GbWgcOk0BXpwxkSmrXnEMl1BXpzmgRm7ThIMp2U
JIHvEji+wD4Dn015enGK+Na25QAJdTl6cpJ4Zm3YTwJdlh6cIK5Za/YRXy/i
I0X0VF5QRnfnOHF0K/YSTy/kA4X1FJ5TWnfjGLF1S/YQVy/gPYX0ZJ5RSnfl
KLF0C3YTR88PnAsU1JN4SkndhSPE1M3ZRWw9j3cU0BN5Ejh/dGcOE0M3Yyex
9Fzekl9P4DEldCcOEV03ZQcx9RzekE+P5xHFdUcOEk03YTsx9Gxek1eP4yHF
dAcOEFU3ZhvR9SxekUeP5QFFdXv2E0U3YivR9ExekluP4T5FdDv2EVk3ZAtR
9QxekEuP5h6FdVv2Ekk3YDNR9HSek1OP4i6FdBv2EFHXZxOR9TSekUOP5A4F
dWt2E0HXYyOR9FSekl2P4DYFdCt2EV7XZQMR9RSekE0P5xb5dUt2Ek7XYT0R
9GQek1UP4yb5dAt2EFbXZh3h9SQekUUP5QZ5dXO2E0bXYi3h9EQeklkP4Tp5
dDO2EVrXZA1h9QQekEkP5hq5dVO2EkrXYDVh9Hjuk1EP4iq5dBO2EFJXZxWh
9TjukUEP5Ao5dWM2E0JXYyWh9Fjukl4P4DI5dCM2EVxXZQUh9RjukE735xLZ
dUM2EkxXYTkh9Ghuk1b34yLZdAM2EFRXZhnB9ShukUb35QJZdX3WE7iZqsRS
gumR3OQP3YfzZNH1WMcvKpotIajtEdwgte7NOTLruqzlJxXMFhO40RvOdVLp
Xpwlk67DGn5Q3mwRv9xIDtPXSKl7coaMujar+U45s4X8tH6ovkoK3YPTZNC1
WMU3ypot4If1Q/QVkuvunCK9rslKvlLGbD7frR+sL5NMd+Mk6XQNVvCF0mbz
+Gb9IH2JpLorJ0irq7Oc/yhlNpev1g/UF0miu3CcNLoay/iXkmZz+GL9/wDw
2v7v
          "]]]}, {}, {}}, {{}, {}, {}, 
       TagBox[
        {RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 0, 0], AbsoluteThickness[1.6],
          Opacity[1.], LineBox[CompressedData["
1:eJwl1VPQIEcUgNG1bdu2bdu2bdtWsrZt27Zt28gG5688nJ7+7vTbVE0nbtKx
SofAgQIF+m0JeK6wVAvYs143ICuX9UDScUuPJggrdXWCsEE3JBtX9CDSc1uP
ISirdA2CslE3IjtX9WAycEePJRirdU2CsUk3JgfX9BAyclePIzhrdC2Cs1k3
ISfX9VAycU+PJwRrdW1CsEU3JRc39DAyc19PICTrdB1CslU3Izc39XCy8EBP
JBTrdV1CsU03Jw+39Aiy8lBPIjQbdD1Cs123IC+39Uiy8UhPJgwbdX3CsEO3
JB939Ciy81hPISybdAPCslO3Ij939Why8ERPJRybdUPCsUu3pgD39Bhy8lRP
IzxbdCPCs1u3oSD39Vhy8Uz/QQS26sZEYI9uSyEe6HHk5rn+k4hs002IyF7d
jsI81OPJwws9nUhs102JxD7dniI80hPIy0s9g8js0M2IzH7dgaI81hPJxys9
kyjs1M2JwgHdkWI80ZPIz2s9i6js0i2IykHdieI81ZMpwBs9m2js1i2JxiHd
mRI801MoyFs9h+js0a2IzmHdhZI811MpxDs9lxjs1a2JwRHdlVK80NMozHs9
j5js022IyVHdjdK81H9QhA96PrHYr9sSi2O6O2V4pf+kKB/1AmJzQLcjNsd1
D8ryWk+nGJ/0QuJwULcnDid0T8rxRs+gOJ/1IuJySAf88OJyUveiPG/1TErw
RS8mHod1R+JxSvemAu/0LEryVS8hPkd0J+JzWvehIu/1bErxTS8lAUd1ZxJw
RvelEh/0HErzXS8jIcd0FxJyVvejMh/1XMrwQy8nEcd1VxJxTvenCp/0PMry
U68gMSd0NxJzXg+gKp/1fMrxS68kCSd1d5JwQQ+kGl/0Asrzl15FUk7pHiTl
oh5EdZJx2qwnybikB1OD5Jwx60VyLush1CQFKUlFatKQlnScdbY3Kbiih1KL
9Jwz60NKruph1CYD5836koprejh1+KoXUoHfejUZuaD7kZrregR1+aYXUZG/
9RoycVH3Jw039Ejq8V0vphL/6LVk5pIeQFpu6lHU54deQmX+1ev4ab+UKgRc
6L9YRtWA78DywP/f9Vm8/g8YWv+0
          "]]},
        Annotation[#, "Charting`Private`Tag$41336#1"]& ], 
       TagBox[
        {RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 0.33333333333333337`, 0], 
         AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwV0VO4HmcUgNE/tq3Gto3Gtm3bZmPbdtrGtm3btqug61ysmXn37It5vkna
tFPVjsECgcA3l+8sCxEIVOZ78EDgd+qSmXNm/UjDVT2cH/aX6yr80H9Qjyyc
N+tPWq7pEfy0v0JX5af+k/pk5YLZANJxXY8kwEpdjQBrdQOycVEPJD039CiC
sUpXJxjrdEOyc0kPIgM39WiCs1rXIDjrdSNycFkPJiO39BhCsEbXJAQbdGNy
ckUPIRO39VhCBp2hrkVINuom5OKqHkpm7uhxhAo6Q12bUGzSTcnNNT2MLNzV
4wkddIa6DqHZrJuRh+v6N7JyT08gDGt1XcKwRTcnLzf0cLJxX08kLOt0PcKy
VbcgHzf1CLLzQE8iHOt1fcKxTbckP7f0SHLwUE8mPBt0A8KzXbeiALf1KHLy
SE8hAht1QyKwQ7emIHf0aHLxWE8lIpt0IyKyU7ehEHf1GHLzRE8jEpt1YyKx
S7elMPf0WPLwVE8nMlt0EyKzW7ejCPf1OPLyTM8gClt1U6KwR7fnVx7o8eTj
uZ5JVLbpZkRlr+5AUR7qCeTnhZ5FNLbr5kRjn+5IMR7piRTgpZ5NdHboFkRn
v+5EcR7rSRTklZ5DDHbqlsTggO5MCZ7oyRTitZ5LTHbpVsTkoO5CSZ7qKRTm
jZ5HLHbr1sTikO5KKZ7pqRThrZ5PbPboNsTmsO5GaZ7rafzKO72AOOzVbYnD
Ed2dMrzQ0ynKe72QuOzT7YjLUd2DsrzUMyjGB72IeOzX7YnHMd2TcrzSMynO
R72Y+BzQHYjPcd2L8rzWsyjBJ72EBBzUHUnACd2bCrzRsynJZ72UhBzSnUjI
Sd2HirzVcyjFF72MRBzWnUnEKd2XSrzTcynNV72cXziiu/ALp3U/KvNez6MM
f+kVJOao7kpizuj+VCEJx8y6kYSzegBVScpxs+4k5ZweSDWSkZwUpCQVqUnD
Cbs9SMZ5PYjqpOWkWU+Sc0EPpgbpOGXWixRc1EOoyQc9n7L8rVeSntO6Nym5
pIdSi496AeX4R68iA2d0H1JxWQ+jNp/0Qsrzr15NRs7qvqTmiv6NOnzWi6jA
f3oNXzwvpiLf9Ff3JVQK+g8sDfp2Mnn3P5t/AsQ=
          "]], 
         LineBox[CompressedData["
1:eJwV0lOgXAcUQNFJ8mLbtm3berFt27Ztq25j27ZtJ3Wbxl3zse7cfeb8nZu6
dY/Q7mECgcA7j/fhAoGl4QOByrwLCQS+oT5ZOW7WlzRc1KP4YH+ZrsJ/+lsa
kI0TZv1IyyU9mo/2l+uqvNff0ZDsnDTrTzou6zF8sr9CV+OD/p5G5OCU2QDS
c0WP5bP9lbo6H/UPNCYnp80GkoGrehxf7K/SNfikf6QJuThjNoiMXNPj+Wp/
ta7JZ/0TTcnNWbPBZOK6nkCANboWX7z/TDPycM5sCJm5oScShrW6Nl+9/0Jz
8nLebChZuKknEZZ1OpQA63UL8nFBDyMrt/RkwgVvqusQhg26Jfm5qIeTjdt6
CiHBm+q6hGWjbkUBLukRZOeOnkr44E11PcKxSbemIJf1SHJwV08jQvCmuj4h
bNZtKMQVPYqc3NPTiRi8qW5AeLbothTmqh5NLu7rGUQK3lQ3JAJbdTuKcE2P
ITcP9EwiB2+qGxGRbbo9Rbmux5KHh3oWUYI31Y2JxHbdgWLc0OPIyyM9m6jB
m+omRGaH7khxburx5OOxnkM01uumRGGn7kQJbukJ5OeJnkt0NuhmRGWX7kxJ
buuJFOCpnkcMNurmRGO37kIp7uhJFOSZnk9MNukWRGeP7kpp7urJFOK5XkAs
NuuWxGCv7kYZ7ukpFOaFXkhstuhWxGSf7k5Z7uupFOGlXkQcturWxGK/7kE5
HuhpFOWVXkxctuk2xOaA7kl5HurpFOO1XkI8tuu2xOGg7kUFHukZFOeNXkp8
duh2xOWQ7k1FHuuZlOCtXkYCdur2xOOw7kMlnuhZlORXvZyE7NIdiM8R3ZfK
PNWzKcVvegWJ2K07koCjuh9VeKbnUJrf9UoSs0d3IiHHdH+q8lzPpQx/6FUk
Ya/uTCKO6wFU44WeR1n+1KtJyj7dhcSc0AOpTjL2m3UlCSf1IGqQnANm3UjK
KT2YmqQgJalITRrSko6DdruTjNN6CLVIzyGzHiTnjB5KbTJw2KwnKTirhxFK
Ro6Y9SIl5/Rw6vBSz6ccf+k1ZOKo7k0qzusR1OWVXkB5/tZrycwx3YfUXNAj
qcdrvZAK/KPX8cb7Iiryr37rdzGVgt8MS4LfAln89z8c6AHs
          "]]},
        Annotation[#, "Charting`Private`Tag$41336#2"]& ]}}], {}}, {{}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxd0r1LAnEcBvCjlsYgh6AGi4ioiN7LsvzZq9mLp/UHHEbglkKt4dDgGA1t
gdAUNCSBU4NEQ0sQRBHRcARBgcRFUfYyVPd9HH6PIA+fe+75cco1xFdjKxWG
YUT+vv8pHydg6B+ls4pcTfaQa5V+br3Sd15yI7lJ6ec2066F7mul6+3kDnIn
uYvO6Sb30Lm95D46t588QB4k+8hD5GGynzxCHiUHyEp3mmwEqS+7/D+N6c+V
LnsaOY4MoYcLi7g+Iaks9LC9jH4S1xNI2Eqin5L0bqCHnU39OUoZ9LDa0p/L
2kYPn+6gn5G82EUP+7Pow5L5A/TwUw79rOReHj2cOEY/52bac4IerjlDPy9Z
PEcPxy/RL7ipclfo4fAN+gh+3x16saqz0ZtuWr57sRKrtQfcL7avH8UFuK2I
fVQcfcZebC452IuNzAv2cOUr9jE3s0dv2IuTwXfsxYX1D+zFh6kS9vIe2f5P
7MVO6At7vGf739iLzdsf9QvBA40N
       "]]}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}, "AxesInFront" -> True},
  PlotLabel->FormBox["\"Confirmed Cases- Germany\"", TraditionalForm],
  PlotRange->{{1, 84}, {-1927.1854498298123`, 126966.52160619997`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.79519790693017*^9, 3.795198960962495*^9, 3.795455028479619*^9, 
   3.7954569510232983`*^9, {3.795535506816428*^9, 3.795535514575725*^9}, 
   3.795536330828218*^9, 3.7955363789109507`*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"0da4bf49-bb8d-46d9-b99d-c5b773f173d6"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.795198325931038*^9, 3.795198348298231*^9}, {
   3.795198409771778*^9, 3.7951984227795486`*^9}, {3.7951984528608093`*^9, 
   3.7951985788482437`*^9}, 3.795198638350873*^9, 3.7951986818564043`*^9, {
   3.795198746544653*^9, 3.795198751542495*^9}, {3.795198782019828*^9, 
   3.795198808510427*^9}},ExpressionUUID->"7e6620b8-2f5f-4f1e-bed5-\
d00e7f5a6115"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7951988117827663`*^9, 
  3.7951988117860603`*^9}},ExpressionUUID->"4a2d9367-60fd-4684-9b7e-\
c5a773cef514"],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.795455716749836*^9},
 NumberMarks->False,ExpressionUUID->"b507c3a5-0e30-4649-8a53-a302d915c67a"],

Cell[BoxData[
 TemplateBox[{
  "Show", "gtype", 
   "\"\\!\\(\\*RowBox[{\\\"Out\\\"}]\\) is not a type of graphics.\"", 2, 106,
    20, 16726211046968140121, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.795455709522159*^9},
 CellLabel->
  "During evaluation of \
In[106]:=",ExpressionUUID->"ca28837c-8cdb-42aa-9e5d-9e17ac22092b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Show", "[", 
   RowBox[{"%271", ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7955355246488533`*^9, 
  3.79553552975382*^9}},ExpressionUUID->"28d072b4-694d-4672-b1a5-\
ce587a08f30f"],

Cell[BoxData[
 TemplateBox[{
  "Show", "gtype", 
   "\"\\!\\(\\*RowBox[{\\\"Out\\\"}]\\) is not a type of graphics.\"", 2, 44, 
   1, 16726731422379051965, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.795535524694323*^9},
 CellLabel->
  "During evaluation of \
In[44]:=",ExpressionUUID->"d8601332-4ddb-40ac-b5d6-b78c7a999c31"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"%271", ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Output",
 CellChangeTimes->{3.795535524706152*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"142a3daf-f4bb-46fa-a600-3b633952f810"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.795198831163219*^9},
 NumberMarks->False,ExpressionUUID->"46cf6a3e-ddf5-4fd0-b21c-8df8f3daf14d"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.795198829370763*^9, 
  3.795198829372773*^9}},ExpressionUUID->"46854127-1fd5-4de8-8fcf-\
4258f92bd1ea"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.795198828024499*^9},
 NumberMarks->False,ExpressionUUID->"43fd148c-1560-4616-8c9f-f07da633212e"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.795198818500205*^9, 
  3.795198818502273*^9}},ExpressionUUID->"c51695f3-a14a-4036-8937-\
954a82d3e491"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"confirmedNLM", "@", 
  "\"\<ParameterConfidenceIntervalTable\>\""}]], "Input",
 CellLabel->
  "In[146]:=",ExpressionUUID->"0d1b9216-fcb9-4a27-86d3-219a063ae6d4"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", \
"\<\"Confidence Interval\"\>"},
     {"k", "0.19208348168637232`", "0.002815511684126668`", 
      RowBox[{"{", 
       RowBox[{"0.1864759041829627`", ",", "0.19769105918978194`"}], "}"}]},
     {"L", "130853.50044712125`", "1369.3780545432837`", 
      RowBox[{"{", 
       RowBox[{"128126.14768363889`", ",", "133580.85321060361`"}], "}"}]},
     {"t0", "68.67429202487696`", "0.14600502862671563`", 
      RowBox[{"{", 
       RowBox[{"68.38349780849074`", ",", "68.96508624126318`"}], "}"}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.7951979789500427`*^9, 3.795198969769449*^9, 
  3.7954550332360697`*^9, 3.7954569597279997`*^9, 3.7955355358248672`*^9, 
  3.79553638254142*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"76778684-cec2-4776-99e8-77f5053614bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"daynum", " ", "=", " ", 
   RowBox[{
    RowBox[{"confirmedCases", "[", 
     RowBox[{"[", 
      RowBox[{"-", "1"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"confirmedNLM", "'"}], "[", "t", "]"}], ",", " ", 
       RowBox[{
        RowBox[{"confirmedNLM", "''"}], "[", "t", "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "1", ",", "60"}], "}"}], ",", " ", "\n", "  ", 
     RowBox[{"GridLines", " ", "\[Rule]", " ", "Automatic"}], ",", " ", 
     RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}]}], "]"}], ",", " ", 
   "\n", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Tooltip", "@", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"daynum", ",", " ", 
         RowBox[{
          RowBox[{"confirmedNLM", "'"}], "[", "daynum", "]"}]}], "}"}], 
       "}"}]}], ",", " ", "\n", "  ", 
     RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"Red", ",", " ", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}]}], 
  "]"}]}], "Input",
 CellLabel->
  "In[147]:=",ExpressionUUID->"2ed593bc-6e02-43e3-b1ef-0d810f77b70b"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
grpDv1dXqdB3n1p4Sh7jfxKxdTw=
        "]]},
      Annotation[#, "Charting`Private`Tag$42411#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$42411#2"]& ]}, {}}, {{}, {
     {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[{{79., 2672.4940259408445`}, {79., 2672.4940259408445`}}]}, {
      {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6]}, {}}, {
      {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6]}, {}}, {
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[{{79., 2672.4940259408445`}}]},
        RowBox[{"{", 
          RowBox[{"79.`", ",", "2672.4940259408445`"}], "}"}]],
       Annotation[#, {79., 2672.4940259408445`}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[{{79., 2672.4940259408445`}}]},
        RowBox[{"{", 
          RowBox[{"79.`", ",", "2672.4940259408445`"}], "}"}]],
       Annotation[#, {79., 2672.4940259408445`}, "Tooltip"]& ]}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.795197993776237*^9, 3.795198971281432*^9, 
  3.795455036778638*^9, 3.795456965626152*^9, 3.795535538884685*^9, 
  3.795535943657134*^9, 3.795536385872732*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"59cd8ffe-698c-46a4-8a13-be0147608db7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Bangladesh", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"BDCaseData", " ", "=", " ", "\n", 
     RowBox[{"confirmedData", "@", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"#\"Country/Region\"", " ", "==", " ", "\"\<Bangladesh\>\""}],
         " ", "&"}], "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"BDDeathData", " ", "=", " ", "\n", " ", 
     RowBox[{"deathData", "@", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"#\"Country/Region\"", " ", "==", " ", "\"\<Bangladesh\>\""}],
         " ", "&"}], "]"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.795454857106678*^9, 3.795454877916848*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"5464a03f-01a8-4987-841b-990527d0b85a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BDdeathCases", " ", "=", " ", "\n", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"Length", "@", "keys"}], " ", "-", " ", "4"}], "]"}], ",", 
      " ", "\n", 
      RowBox[{"Values", "@", 
       RowBox[{"Normal", "[", 
        RowBox[{"BDDeathData", "[", 
         RowBox[{"Total", ",", " ", 
          RowBox[{"Drop", "[", 
           RowBox[{"keys", ",", " ", "4"}], "]"}]}], "]"}], "]"}]}]}], "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.795455080893586*^9, 3.7954551102686443`*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"31e305af-038e-4250-a26a-b4301effe142"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BDconfirmedCases", " ", "=", " ", "\n", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"Length", "@", "keys"}], " ", "-", " ", "4"}], "]"}], ",", 
      " ", "\n", 
      RowBox[{"Values", "@", 
       RowBox[{"Normal", "[", 
        RowBox[{"BDCaseData", "[", 
         RowBox[{"Total", ",", " ", 
          RowBox[{"Drop", "[", 
           RowBox[{"keys", ",", " ", "4"}], "]"}]}], "]"}], "]"}]}]}], "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.795455104281094*^9, 3.795455113606152*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"4c76d7fa-773c-4ae4-8a9f-18615e3ee2f9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Rest", "[", 
       RowBox[{"BDdeathCases", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], "]"}], ",", " ", "\n", 
      " ", 
      RowBox[{"Differences", "[", 
       RowBox[{"BDdeathCases", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}]}], "}"}], "]"}], 
   ",", " ", 
   RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}], ",", " ", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Daily Death- Bangladesh\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7954551414689827`*^9, 3.79545514661852*^9}, {
  3.7955356000580797`*^9, 3.7955356024936647`*^9}, {3.795535661183386*^9, 
  3.795535661870654*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"ba90cc9d-dad3-429d-a69c-5dbb00c75030"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxd1EtqAkEURuGfjBw6cODAQRQREZHERzRq7PIR3+lou4OAY7dQS+sluQQN
9hXqFBSXj1NFzar8d0nOL5Li+/6f2XIKVg7OwwW4CJfgV7gCV+EaXIcbcBNu
wW/wO9yGO3AX7sEfcB8ewJ/wEB7BY/gLnsAR7EJ7WFN0WDN0WHN0WAt0WN/o
sJbosFbosNbosDbosLbosHbosPbo5mv0mD/osOLwvI/Rf9FhHUI7s70Hp7CO
oR3s4dRs7ye4D/unHzM12/1T5uxfcubsH/Loqfka3QDrVkEw
      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.3958333333333333, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Daily Death- Bangladesh\"", TraditionalForm],
  PlotRange->{{0.3958333333333333, 79.}, {0, 5.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.795455150436014*^9, 3.7954569954095087`*^9, 
  3.795535605668388*^9, 3.795535663250101*^9, 3.795535957479946*^9, 
  3.795536398433516*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"d26ccec6-7ade-423e-a8d1-9abb5abc418e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BDdeathCasesNLM", " ", "=", " ", "\n", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"BDdeathCases", ",", " ", "\n", "logistic", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"k", ",", " ", "0.3"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"L", ",", " ", "3000"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"t0", ",", " ", "17"}], "}"}]}], "}"}], ",", " ", "t"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"BDdeathCasesNLM", "@", "\"\<BestFitParameters\>\""}]}], "Input",
 CellChangeTimes->{{3.79545519697007*^9, 3.795455221818933*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"30405b9d-08e0-40d7-b4ed-36b894351db1"],

Cell[BoxData[
 TemplateBox[{
  "NonlinearModelFit", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"", 2, 154, 9, 16726731422379051965, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.795455198474938*^9, 3.79545522854167*^9}, 
   3.7954570000837307`*^9, 3.795535669367972*^9, 3.795535960916506*^9, 
   3.7955364018441963`*^9},
 CellLabel->
  "During evaluation of \
In[154]:=",ExpressionUUID->"dd4f1fb1-d24e-4228-9c8d-5d87b795f399"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"k", "\[Rule]", "0.05761910020161655`"}], ",", 
   RowBox[{"L", "\[Rule]", "3.881891933151837`"}], ",", 
   RowBox[{"t0", "\[Rule]", "26.479400300082904`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.795455198485628*^9, 3.7954552285494843`*^9}, 
   3.795457000094573*^9, 3.795535669381176*^9, 3.795535960924651*^9, 
   3.7955364018518143`*^9},
 CellLabel->
  "Out[155]=",ExpressionUUID->"34324a28-18a7-4828-a940-8054ac13b247"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"BDdeathBands", "[", "t_", "]"}], " ", "=", " ", "\n", "  ", 
   RowBox[{"deathCasesNLM", "[", 
    RowBox[{"\"\<SinglePredictionBands\>\"", ",", " ", 
     RowBox[{"ConfidenceLevel", " ", "\[Rule]", " ", "0.95"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"dth0", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"BDdeathCasesNLM", "[", "t", "]"}], ",", " ", 
       RowBox[{"BDdeathBands", "[", "t", "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "1", ",", " ", "\n", "    ", 
       RowBox[{
        RowBox[{
         RowBox[{"BDdeathCases", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", "5"}]}], "}"}], ",", 
     " ", 
     RowBox[{"Filling", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"2", " ", "\[Rule]", " ", 
        RowBox[{"{", "1", "}"}]}], "}"}]}], ",", " ", "\n", "   ", 
     RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "@", "Red"}], ",", " ", 
        RowBox[{"Darker", "@", "Orange"}], ",", " ", 
        RowBox[{"Darker", "@", "Orange"}]}], "}"}]}], ",", " ", "\n", "   ", 
     RowBox[{"GridLines", " ", "\[Rule]", " ", "Automatic"}], ",", " ", 
     RowBox[{
     "PlotLabel", " ", "\[Rule]", " ", "\"\<Death Cases- Bangladesh\>\""}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dth1", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDdeathCases", ",", " ", 
     RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"dth0", ",", " ", "dth1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.795455249395019*^9, 3.795455278557002*^9}, {
  3.7955356799687243`*^9, 3.795535681817788*^9}, {3.79553597110572*^9, 
  3.79553597145269*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"c5d3beae-fd4f-4ab0-b0f3-017b7c86924f"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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
ORrDt+YNiM5j9/43/w9AlcYB
     "], {{{}, {}, {}, {}, {}, {}, 
       {RGBColor[
         NCache[
          Rational[2, 3], 0.6666666666666666], 0.33333333333333337`, 0], 
        Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1Xecz3UcB/Df4fad0ZDNGW0aiD96PEKkjbN3oezTInuvKHumyN4iZW+l
7K2Fs6nsfWbPz8MfT/d+vR6vf+533+9PSpN2qWmZIpFIFIv9866fh/wcwitc
lCfTiWjDJbrm5GKzrgqH3UMpxyV5Cp2JsV+qa0Futuiqku4eRnkuy1PpQqz9
Ml1L8rBVV40j7uFU4Io8ja7E2S/XtSIv23SpHHWP4FWuytPpRrz9Cl1r8rFd
V51j7pFU5Jo8g+4k2K/UtSE/O3Q1OO4eRSWuyzPpQaL9Kl1bCrBTV5MT7tG8
xg15Fj1Jsl+tS6Mgu3S1OOkeQ2VuyrPpRbL9Gl07CrFbV5tT7rG8ToY8h95k
tV+r+4gU9ujqcNo9jje4Jc+lD9ns1+k+pjB7dXU54x7Pm9yW59GX7PbrdZ9Q
hH26evzj/pq3uCPPpx857DfoPqUo+3X1+dc9gbe5Ky+gPw/Zb9R9RjEO6Brw
n/sb3uGe/D0DeNj+Z117Hud3XUPOur8Nzzb35YUM5BH7X3QdeII/dI04555I
lagHL8YiP77gUftN8uc8yZ+6xpx3T6IqUfygG0RO+1/ljjzFX7r3uOD+jmpk
YrFuMI/Z/yZ34mn+1r3PRfdkUsnMj7ovyWW/We7MMxzUNeGSewrVycJPuq/I
bb9F7sKzHNI15bJ7KjWIZoluCHnst8pdKc5hXTOuuKdRkxiW6oaS136b3I0S
pOs+4Kp7OrWIZZluGPnst8vdeY4jug+55p5BbeJYrhtOfvsdcg+e56iuOdfd
M6lDPCt0Iyhgv1PuyQsc07XghnsWdUlgpW4kBe13yb14keO6ltx0z6YeiazS
jaKQ/W65NyU5oWtFhnsO9UlitW40KfZ75D6U4qSuNbfcc2lAMmt0Yyhsv1fu
S2lO6dpw2z2PhmRlrW4sRez3yf14idO6ttxxz6cR2VinG0dR+/1yf8pwRpfG
XfcCGpOd9brxFLM/IA8I74DcIfxO4XMIn134vMPfKPxdw7MQnp/wzIXnNDzb
4X0I71B478K7Gt7v8J0QvkfCd0/4viKZJBJJIJ44YokhmixkJvy/VZLSlOVl
ylP5wWsb+R8rsdVI
          "]]]}, 
       {RGBColor[
         NCache[
          Rational[2, 3], 0.6666666666666666], 0.33333333333333337`, 0], 
        Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwV0cVNBGEAhuFl2QbwM7aGE4JbsKAXKsCPuB0oAG0A7wBvAO8AbQDvAHjm
8GTme7PJ/DObOzI1OBkOhUIprLBIHvkUUEiUGHESJCmimBJKKaOcCrppo4k6
qqmih3aaqaeGXjpooYE+Ommlny4GqGSZcMRzHfjQ/T05Dj7BBRF9QfsJnmFv
8UqRfqDdkW2Pc06qPq99B2e1N3khqe9rt2TZY5wR1ue0LxrtDZ5J6HvaDZn2
KKek6LPaZ/Bu9jpPxPVd7ZoMe4ST4A/QZ1w+gu9jr/FITN/Rrki3hznmj2nt
PfjO7ld5IOr329olafYQR/wypb1R637J9R8o9jR/
           "]], 
          PolygonBox[CompressedData["
1:eJwt1FPQXQcUgNHYtm3b+mO3TWOzblOmbWzbtm3btm3bTteZ5mHN2d+e+3Dn
zOyTunnrGr+ECRUqVGjShfn/WYEQilGI/OQl+F1YwhGeCEQkEpGJQlSiEZ0Y
xCQWsYlDXOIRnwQkJBGJSUJSkpGcFKQkFalpQxrSBv+V9GQgI5nITBayko3s
5CAnuchNRUpTnMIUIB+VKEMJilCQypSlJEWpQjlKUZXyVCMPNb2csF7MHs+E
XlIrlhHarp3dVB5Twq4/Z/la7yaBuSVLP7/ctnZTeERxu36coYbeRXxzC5bw
iX/tJvOQYrovp/lK7ySeuTmL+cg/dpN4QFHdh1N8qXcQ19yMRXzgb7uJ3KeI
7s1JvtDbiWNuykLe08ZuAvcorHtxgup6G7HNTVjAO/6yG89dCumeHKea3kos
c2Pm85Y/7cZxh4K6B8eoqrcQ09yIebzhD7ux3KaA7s5RqujNxDA3ZC6v+d1u
DLfIr7txhMp6E9HNDZjDK36zG81N8umuHKaS3kg0c31m85Jf7UZxg7y6C4eo
qDcQ1VyPWbygtd1IrpNHd+YgFfR6opjrMpPnBAc9gmvk1p04QHm9jsjmOszg
GT/bDecquXRH9lNOryWSuTbTecpPdsO4Qk7dgX2U1WuIaK7FNJ7wo91QLpND
t2cvZfRqIphrMpXH/GA3hEtk1+3YQ2m9ivDB7TCFR3xvN5iLZNNt2U2IXkm4
4HaYzEO+sxvEBbIG98MuSukVwR0Ht8MkHvCt3UDOkyW4H3ZSUi8nTHA7TOQ+
39gN4ByZg/thByX0suAbG9wOE7hHK7v+nCVTcD9sp7he+vmjW53x3KWlXT/O
kDG4H7ZRTC/hE9X0OO7QQvflNBmC+2ErRfViPlJVj+U2zXUfTpE+uB+2UEQv
4gNV9Bhu0Uz35iTpgvthM4X1Qt5TWY/mJk11L06QNrgfNlFIL+AdlfQobtBE
9+Q4aYL7YSMF9XzeUlGP5DqNdQ+OkTq4HzZQQM/jDRX0CK7RSHfnKKmC+2E9
+fVcXlNeD+cqDXU3jpAyuB/WkU/P4RXl9DCu0EB35TApgvthLXn1bF5SVg/l
MvV1Fw6RPLgf1pBHz+IFZfQQLlFPd+YgyYL7YTW59UyeU1oP5iJ1dScOkDS4
H1aRS8/gGSF6EBeoozuynyTB/bCSnHo6TymlB3Ke2roD+0gc3A8ryKGn8YSS
egDnqKXbs5dEwf2wnOz6Px0nDfQ=
           "]]}]}, {}, {}}, {{}, {}, {}, 
       TagBox[
        {RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 0, 0], AbsoluteThickness[1.6],
          Opacity[1.], 
         LineBox[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
          12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
          29, 30, 31, 32, 33, 118, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44,
           45, 46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 55, 74,
           68, 63, 59, 75, 69, 64, 76, 70, 77, 50}]},
        Annotation[#, "Charting`Private`Tag$44908#1"]& ], 
       TagBox[
        {RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 0.33333333333333337`, 0], 
         AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwt02OUnAcUgOHJZmPb2FhV0CZVardJNnayMTdsG9u2bdu2bdu28cw5+fHM
d+977uyPPfOFRUSGN4wSCATO+vjH84xnXwpz3z6BFkQLCQSWarVIyQ6tyIfv
9eM7Htgn0pLo7pdptUnFTq0o58z9+Z6H9km0Iob75VodUrNLK8Z58wB+4JF9
Mq2J6X6FVpc07NbCuWAeyI88tk+hDbHcr9TqkZY9WnEumgfxE0/sU2lLbPer
tPqkY69WgkvmwfzMU/s02hHH/WqtAenZp5XksnkIv/DMPp32xHW/Rgv+8zOw
XyvFFfNQfuW5fQYdiOd+rRZJRg5opblqHsZvvLDPpCPx3a/TGhHGQa0M18zD
+Z2X9ll0IoH79VpjMnFIK8t18wj+4JV9Np1J6H6D1oTMHNbKccM8kj95bZ9D
FxK536g1JQtHtPLcNI/iL97Y59KVxO43ac3IylGtArfMo/mbt/Z5dCOJ+81a
c7JxTKvIbfOY4G+bd/b5dCep+y3av2TnuFaJO+axFAm+FCzw6EEy91vt/5GD
E1pl7prHUZQoLNR6ktz9Nvv/5OSkVoV75vEUI4RFWi9SuN9ub0EuTmlVuW+e
QDhRWaz1JqX7HfaW5Oa0FsED80SKE8oSrQ+p3O+0tyIPZ7RqPDRPogTRWKr1
JbX7XfbWfMRZrTqPzJMpSXSWaf1I4363vQ0fc06rwWPzFEoRg+Vaf9K632Nv
yyec12ryxDyV0sRkhTaAdO732tvxKRe0Wjw1T6MMsVipDSS9+3329nzGRa02
z8zTKUtsVmmDyOB+v70Debmk1eG5eQbliMNqbTAZ3R+wdyQfl7W6vDDPpDxx
WaMNIcz9QXsn8nNFq8dL8ywqEI+12lAyuT9k70wBrmr1eWWeTUXis04bRmb3
h+1d+JxrWgNem+dQiQSs14aTxf0Re1e+4LrWkDfmuVQmIRu0EWR1f9TeLfgO
2At63vCM5K15HlVIxEZtJNl855i9O4W4qTXinXk+VUnMJm0U2d0ft/fgS25p
jQnoC+wRJGGzNJoc+gl7T77ittYk+NrqC+3VSMoWbQw59ZP2XnzNHa1p8M/r
i+zVScZWbSy59FP23nzDXa0ZUfXF9hokZ5s2jtz6aXsfvuWe1pxQfYm9JinY
ro0njx4SGgi8B34r+ig=
          "]], LineBox[CompressedData["
1:eJwN1GOYUGkch+EzTdu2qq01q93Wm83J5rTZkzWTbdu2zc22jcm2bd8f7vf6
P7/rfD6JIqLCI0OCIIj2JIkRBEtCg6Am37JLt6Ukp3Q/wnigp5CUpboW37Fb
t6MUp3V/svFQTyUZy3RtvmePbk9pzugBZOeRnkZylus6/MBe3YEynNUDycFj
PZ0UrNB1+ZF9uiNlOacHkZMnegYpWanr8RP7dSfKcV4PJhdP9UxSsUrX52cO
6M6U54IeQm6e6VmkZrVuQAIO6i5U4KIeSh6e69mkYY2OJCGHdFcqckkPIy8v
9BzSslZHkYjDuhuVuKyHk4+Xei7pWKcb8gtHdHcqc0WPID+v9DzSs1434lei
dQ+qcFWPpACv9XwysEE3JjFHdU+qck2PoiBv9AIyslE34TeO6V5EcF2PphBv
9UIysUk35XeO695U44YeQ2He6UVkZrNuxh+c0H2ozk09liIE/G/LwhZ3c/7k
pO5LDW7pcRQlhMW2rGx1t+AvTul+1OS2Hk8xYrDEFsY2d0v+5rTuTy3u6AkU
J5Sltmxsd7fiH87oAdTmrp5IODFZZsvODndr/uWsHkgd7ulJlOADlttysNPd
hiSc04Ooy309mf+IxQpbTna525KU83ow9Xigp1CSD1lpy8VudzuScUEPoT4P
9VRKEZtVttzscbcnORf1UBrwSE+jNB+x2paHve4OpOCSHkYkj/V0yvAxa2x5
2efuSEou6+FE8UTPoCyfsNaWj/3uTqTiih5BQ57qmZTjU9bZ8nPA3ZnUXNUj
acQzPYvyfMZ6WwEOuruQhmt6FI15rmdTgThssBXkkLsrabmuR9OEF3oOFYnL
RlshDru7kY4begxNeannUonP2WQrzBF3d9JzU4+lGa/0PCoTj822IkS7e5CB
W3oczXmt51OF+GyxFeWouycZua3H04I3egFV+YKttmIcc/ciE3f0BFryVi8k
gi/ZZivOcXdvMnNXT6QV7/QiqvEV223hnHD3IQv39CRaE8T0T7BV52t22Epw
0t2XrNzXk2lDiO8X22rwDTttobb3PbkCGw==
          "]]},
        Annotation[#, "Charting`Private`Tag$44908#2"]& ]}}], {}}, {{}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxd1DtOAzEUheEjKsoUKVJQwCiKIoQiIAyEQBgHyIPnwGQHkaizBS/NS2IJ
EM29hX9L1tGnI5fHJ9td83Mgqf6/+2zPb6X8hJyHcAfuwj34CD6GC7gPD+Ah
fAqfwSP4HL6AL+ExfAWX8DV8A0/gW3gK38H38Ax+gCs45I6w5uhhPaKH9YQe
1jN6WAv0sJboYa3Qw1qjh/WCHtYrelhv6GG9o3f7Dj9yR1if/r7NCKu2tN1G
t+/2y9J2G+AIJ1jfeA9HOLn9X2hyBzi67Z9I7sJyY2n/QHDbjqPbdprcZfgD
mmtCQQ==
       "]]}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}, "AxesInFront" -> True},
  PlotLabel->FormBox["\"Death Cases- Bangladesh\"", TraditionalForm],
  PlotRange->{{1, 84}, {-40.729785475431434`, 457.9009813931041}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.795455281363662*^9, {3.795457002362962*^9, 3.7954570074315453`*^9}, 
   3.795535682866523*^9, {3.795535964217114*^9, 3.795535972612054*^9}, 
   3.795536406731801*^9},
 CellLabel->
  "Out[159]=",ExpressionUUID->"dbd59209-8651-4c85-925e-b173e24992b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BDdeathCasesNLM", "@", 
  "\"\<ParameterConfidenceIntervalTable\>\""}]], "Input",
 CellChangeTimes->{{3.795455317972013*^9, 3.79545533984476*^9}},
 CellLabel->
  "In[160]:=",ExpressionUUID->"51424980-8d60-4e97-87d8-da715831a947"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", \
"\<\"Confidence Interval\"\>"},
     {"k", "0.05761910020161655`", "0.07117772786674878`", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.08414363080732888`"}], ",", "0.19938183121056197`"}], 
       "}"}]},
     {"L", "3.881891933151837`", "1.8641520927748656`", 
      RowBox[{"{", 
       RowBox[{"0.16911126976035407`", ",", "7.594672596543321`"}], "}"}]},
     {"t0", "26.479400300082904`", "23.76545162039734`", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "20.853598748097934`"}], ",", "73.81239934826374`"}], 
       "}"}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.795455315252431*^9, 3.795455342030221*^9}, 
   3.7954570129671803`*^9, 3.795535686280588*^9, 3.795535975434307*^9, 
   3.7955364100746727`*^9},
 CellLabel->
  "Out[160]=",ExpressionUUID->"3a0e22ff-e3b1-4e46-9ca6-6f2ac0abc60b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BDdaynum", " ", "=", " ", 
   RowBox[{
    RowBox[{"BDdeathCases", "[", 
     RowBox[{"[", 
      RowBox[{"-", "1"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"BDdeathCasesNLM", "'"}], "[", "t", "]"}], ",", " ", 
       RowBox[{
        RowBox[{"BDdeathCasesNLM", "''"}], "[", "t", "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "1", ",", " ", "58"}], "}"}], ",", " ", "\n", 
     RowBox[{"GridLines", " ", "\[Rule]", " ", "Automatic"}], ",", " ", 
     RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}]}], "]"}], ",", " ", 
   "\n", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Tooltip", "@", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"BDdaynum", ",", " ", 
         RowBox[{
          RowBox[{"BDdeathCasesNLM", "'"}], "[", "BDdaynum", "]"}]}], "}"}], 
       "}"}]}], ",", " ", "\n", " ", 
     RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"Red", ",", " ", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7954553722576847`*^9, 3.795455395695828*^9}, {
  3.795456040177168*^9, 3.795456040449543*^9}},
 CellLabel->
  "In[161]:=",ExpressionUUID->"b44d1d2e-9b5f-4a40-ac65-c339fb31dc08"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$45552#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$45552#2"]& ]}, {}}, {{}, {
     {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[{{79., 0.009867689722103199}, {79., 
       0.009867689722103199}}]}, {
      {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6]}, {}}, {
      {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6]}, {}}, {
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[{{79., 0.009867689722103199}}]},
        RowBox[{"{", 
          RowBox[{"79.`", ",", "0.009867689722103199`"}], "}"}]],
       Annotation[#, {79., 0.009867689722103199}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[{{79., 0.009867689722103199}}]},
        RowBox[{"{", 
          RowBox[{"79.`", ",", "0.009867689722103199`"}], "}"}]],
       Annotation[#, {79., 0.009867689722103199}, "Tooltip"]& ]}}, {{}, {}}}},
  
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7954553986718893`*^9, {3.795456042129405*^9, 3.7954560469812813`*^9}, 
   3.795457015141706*^9, 3.795535691531951*^9, 3.795535977981082*^9, 
   3.795536419903385*^9},
 CellLabel->
  "Out[162]=",ExpressionUUID->"44015865-721d-4a51-87e5-3e8df9b0c49c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"end", " ", "=", " ", 
   RowBox[{"x", " ", "/.", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"FindRoot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"BDdeathCasesNLM", "'"}], "[", "x", "]"}], " ", "==", " ", 
         "1"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"x", ",", " ", "30"}], "}"}]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "\n", 
     RowBox[{"DatePlus", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2020", ",", " ", "1", ",", " ", "21"}], "}"}], ",", " ", 
       RowBox[{"Ceiling", "@", "end"}]}], "]"}]}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.795455462545814*^9, 3.795455469061137*^9}, {
   3.7954555087542953`*^9, 3.795455512070829*^9}, 
   3.795535709594984*^9},ExpressionUUID->"b13f0005-9034-4a2a-af99-\
440d28955411"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "lstol", 
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the merit function. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"", 2, 63, 8, 16726226146474203011, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.795455512950794*^9, 3.7954570196819057`*^9},
 CellLabel->
  "During evaluation of \
In[63]:=",ExpressionUUID->"199b31e1-14d7-4a0c-84e9-b5eb0a58ae87"],

Cell[BoxData["31.954554973121265`"], "Output",
 CellChangeTimes->{{3.795455464126601*^9, 3.795455469596983*^9}, 
   3.795455512966132*^9, 3.79545701968954*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"4c8ad3b4-c662-4a2a-8823-77f5dd6a4dcf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2020", ",", "2", ",", "22"}], "}"}]], "Output",
 CellChangeTimes->{{3.795455464126601*^9, 3.795455469596983*^9}, 
   3.795455512966132*^9, 3.79545701969174*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"b8527c28-47eb-4c3e-933c-cf2daf8239a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BDconfirmedNLM", " ", "=", " ", "\n", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"BDconfirmedCases", ",", " ", "\n", "logistic", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"k", ",", " ", "0.3"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"L", ",", " ", "80000"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"t0", ",", " ", "17"}], "}"}]}], "}"}], ",", " ", "t"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"BDconfirmedNLM", "[", "\"\<BestFitParameters\>\"", "]"}]}], "Input",\

 CellChangeTimes->{{3.7954555411214*^9, 3.795455577271098*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"23a45356-5f4d-47dc-9c22-47880ac5ad77"],

Cell[BoxData[
 TemplateBox[{
  "NonlinearModelFit", "cvmit", 
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"", 2, 163, 10, 16726731422379051965, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7954555806245317`*^9, 3.795457023751157*^9, 
  3.795535716638803*^9, 3.795535983391489*^9, 3.79553642387785*^9},
 CellLabel->
  "During evaluation of \
In[163]:=",ExpressionUUID->"869fff60-63ae-4940-99e5-ec3b9e027600"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"k", "\[Rule]", "0.07122032199841505`"}], ",", 
   RowBox[{"L", "\[Rule]", "38.96525792623864`"}], ",", 
   RowBox[{"t0", "\[Rule]", "24.99522919881412`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.795455542332137*^9, 3.795455580639182*^9, 
  3.795457023758428*^9, 3.7955357166550827`*^9, 3.795535983403144*^9, 
  3.7955364238892717`*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"81d54283-c25c-473a-b25d-fbfe0f8303a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BDconfirmedBands", "[", "t_", "]"}], " ", "=", " ", "\n", " ", 
    RowBox[{"BDconfirmedNLM", "[", 
     RowBox[{"\"\<SinglePredictionBands\>\"", ",", " ", "\n", "  ", 
      RowBox[{"ConfidenceLevel", " ", "\[Rule]", " ", "0.95"}]}], "]"}]}], 
   ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cnf0", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"BDconfirmedNLM", "[", "t", "]"}], ",", " ", 
       RowBox[{"BDconfirmedBands", "[", "t", "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "1", ",", " ", "\n", "   ", 
       RowBox[{
        RowBox[{
         RowBox[{"BDconfirmedCases", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", "5"}]}], "}"}], ",", 
     " ", 
     RowBox[{"Filling", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"2", " ", "\[Rule]", " ", 
        RowBox[{"{", "1", "}"}]}], "}"}]}], ",", " ", "\n", "  ", 
     RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "@", "Red"}], ",", " ", 
        RowBox[{"Darker", "@", "Orange"}], ",", " ", 
        RowBox[{"Darker", "@", "Orange"}]}], "}"}]}], ",", " ", "\n", "  ", 
     RowBox[{"GridLines", " ", "\[Rule]", " ", "Automatic"}], ",", " ", 
     RowBox[{
     "PlotLabel", " ", "\[Rule]", " ", 
      "\"\<Confirmed Cases- Bangladesh\>\""}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"cnf1", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDconfirmedCases", ",", " ", 
     RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"cnf0", ",", " ", "cnf1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.795455586484725*^9, 3.795455619108994*^9}, {
  3.79545568507692*^9, 3.795455687512508*^9}, {3.7955357230813923`*^9, 
  3.795535729618094*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"3fc7468b-107e-47f8-b62f-50e2f23a5584"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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
udcwoOT72BtLVA9nNxGuZctx8E/sOVyP9Dd2lKZRNA6BBc//XYvGx7Zd22P6
HYf3Gd0mn5Amv+dF/tn/Whedn4T4mqNGRjj05Cz18Eb/l3/Km+/4ZRxKJkfS
pNB4D9xYiP8gDn8jmpYs5vvdx4bHHD7isGa5+Hwx0kYbrz/JY6J+zansRw3S
Wpedn/g+wUErI/fCYj3FBD5y8DuFw57zz4sW45H+geBoKm8oqo97AprpKRdx
WM459W4xf9NeZIZ+3ovqbzZhpRfS9sriLoF1iBeXWr8YIH1rRPEufgzV07WP
3fJIx0nkhURXoPqfnXZf1Krvus/Kh+EwL6kVZ4y03YxPd3w6Dgef9D9fjE/6
FU/aotbLovqwf7TMQywfB5vJO0X/z+dLzT8fx+Gwe5rLTBXpFa0xZrxlOPyw
eiwpi/TuagnxmdNovPZIozjS2g5bGpcW4zBoeLd9UWdrBcV9SMJBO/kXc3G8
ltntQtGzOJhttDu7GJ/0Rwpd4YUf+n/SH8mq+7pcZMKN8nttbV1nkuXdKb+3
6vtGbV2aO+X3crj7eYYi3Sm/V2A2Lef9NXfK762+HnlO76M75fc+47viliS+
g/J72+ZvGC1x2kH5vVIB9IGRhB2U35s3vF0+tG4H5fdiVQ87BRZ2UH6vhG+S
R76FB+X3rj5dqaId40H5vee0VVLuNXhQfq+zaAtTUnwn5fdWrRmauOu9k/J7
+3scVYWrd1J+79ubmUXtf3dSfm/07jNZ4dguyu+9oWUmgWfuovzejErvace+
XZTf+1Daka6t6kn5vZM1wwEvdnlSfm/ZphpB7nOelN/rnf6iJKTBk/J756xW
ryic8qT83qnEXidFUTbl9+5LER++q8Km/N5KsfFE3IBN+b0md3r9HLeyKb93
Y+QxR0sWm/J7B9i/I+75sCm/1/dzbt2VYDbl99KP5K+biGFTfm+EyD6CL5VN
+b1WlXKN3Tlsyu/V/x2Ze/gym/J7rYq8nAdvsim/V/v8RHL9Qzbl9xKJp5Ws
mtiU36sS5lef8I5N+b3pQsuu2QyxKb83ccc9SbsfbMrv9TIRzBP/zab83geT
VWlqfBzK7w1U7noi+A+H8ntv2hbPmklyKL93fGomKHM1h/J7TVqO6PWocii/
N69kT+NeLQ7l9668HxpUIORO+b0ZLx6k39LgUH5vT+1A48t5N8rvDfc/W9Wk
xqH8Xrb9+s/pazmU3/s657PAvhk3yu+11M7XeLuGQ/m9fu3z34s1OZTf+4tX
JClmHYfye/UCTOj3frlRfi99WVi4O3qf6tctkkXWo/fJfrn8Yi7/MvQ+2b++
z+w59Atpsn/Va18Vu3vSjfJ7M9o6x+RQPLK/Mhq7OTiO1kv2N2rCjsta0HrI
fmOD22axeygeef8nrh+qWo/2j7z/81fVm9UgvpD3ZZY5T/oc2m/yfrqbE/2w
A8Un7wdN5enoGyg+yevfx3e2nUfxSX7+6k07J4bikzwrn3r92Anp/wP3k0nR

     "], {{{}, {}, {}, {}, {}, {}, 
       {RGBColor[
         NCache[
          Rational[2, 3], 0.6666666666666666], 0.33333333333333337`, 0], 
        Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1He8DXQYB+B77e3a273XnqlkVlZZJcrI3pRsiogUhUiZDVQ0KCurrJZZ
ESqV7LIVLSmr4Xk//nju9/t7z/3ce875veek9hjUcmCahISERLr60VyWkRfk
Dt5hKk/Sgnu5j5a0ojVtuJ+2tKM9HehIJzrTJf4+3ehOD3rSi948wIP04SH6
0o/+DGAgZT2vv+QXLGIaYxlEOY/9LXeymOmMYzDlPXZR7mIJM3iKauZp2a+v
5TWGUMHsktzNUmbyNNXN03FAX8c8hlLR7LL8kmXMYjw1zNNzUF/PfB6mktkV
+RXv8gITqGmegUP6Bl7nESqbXZVfs5wXqWuWneP6JiZSyzkjh/UPeINh3GD2
j9zDCl6inlkOTuibeYbazpk4on/Im9zpnJsz+qcMp4rzv/IbVtLEOT/n9Jep
r+fkpL6FZnphftcncauemR9il2QyH+l3yYL8GjslS/KW3lDmoT0/xd7JVDrz
mXNzWZSOnI9dlKXowqPON8r/Yjflt7HDsjidWOXcVBagA7/ETssSzNYbyCRO
xc7LFLbq98gi/KFP5jY9Cz/qH3O3Xojf9AU00vPys/45I7jJ+X/5HauZwx1m
uTitb+NZbnfOylH9ExYykpvjQ8te8R5zmcJjVDVP5Hv9fV7hOUYxmscZwy1+
Jw379DW8yvPUMcvGMX0jb9PYOR9n9e200Ivxp95Wlk68/h3yRDy3eI/idcf9
x77FPcb7Evcf+xu7FXcen5PYvfif8frjPuJ5UT12Ol5/3EPsWbxncZ+xg7HX
8dmgEhWpQHnKUZYylKYUJSlBKikkU5xiFKUIhSlEQQqQn3zkJQ+5yUUSOclB
drKRlSxkJhMZyUB60pGW+J6tSjVqxs5QP97X69eYcA0uzpPG
          "]]]}, 
       {RGBColor[
         NCache[
          Rational[2, 3], 0.6666666666666666], 0.33333333333333337`, 0], 
        Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwt0FdXDwAAxuF/oaQoDS2jRKVE2qWhskI3fYIGGlpmG9EQ0aBoIiTpQ/Z0
ThfP+d28V29qc09Dd3AgEAhieb+3qKacEgrJZ293gIMcIoRQDhPGEcKJ4CjH
iCSK40QTQyxxnCCeBBJJIpmTnOI0Z0ghlbOkcY7zpJNBJhfIIpuL5HCJy+Ry
hdvUUEEpRRRQRy2VlFHMHa5TxVXucoNr3OMm9eQx57Qd/vCf7/xmm2XW+cU/
FllijQ22+MwC31jlJ3+ZZYZPfGSaD7xnindMMsE4Y7zlDaO85hUvGWGYIQYZ
oJ8+XvCcZzzlCY/ppYduuujkER2000YrD3nAfVpopol5vvCVFX6wSSO7sBE2
pg==
          "]]]}, {}, {}}, {{}, {}, {}, 
       TagBox[
        {RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 0, 0], AbsoluteThickness[1.6],
          Opacity[1.], 
         LineBox[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
          12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
          29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
          46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 55, 74, 68, 
          63, 59, 75, 69, 64, 76, 70, 77, 50}]},
        Annotation[#, "Charting`Private`Tag$46831#1"]& ], 
       TagBox[
        {RGBColor[
          NCache[
           Rational[2, 3], 0.6666666666666666], 0.33333333333333337`, 0], 
         AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwl01W4FQUUBtB7CWnp7u5OUemU7rpBS0mHilJKd0l3d3c3SkmXhBIKAopK
I7Dm42HN/+895+E87MnYskvdzqEhISGJPGrKbPI/+RNLGcsAalGbOtSlHvVp
QEMa0ZgmNKUZYYQTQSTNaUFLWtGaNrTlc9rRng50pBNf0Jns/tcTeYxljGMg
Xcjh3VN5nOWMZxBdyendM3mCFUzgO4raR+WyvoXZdCOX3XN5kpVM5HuK2Ufj
ir6VOXQnt90LeYpVTGIwxe2jc1Xfxlx6kMfupfyZ1UxmCCXsP+AXfTvz6Ele
u1fyNGv4gdJ28bil72MoH5ljcE3fwXx6kc/utTzDWqZQxu5Dbuv7GUZJc0yu
6ztZQIXQ93fxh36Y3uQ3/y/Pso4q5mQ80KdSVo/PHf0A1fVU/K0P52M9FjeC
W5Lp2aV/JlPwKLgpmZmFekWZmCbcC+5OZiScI+aaMg3N+Ce4RZmFCPqYC8g3
wW3Kc8ENy3SEsd5cVSanKQ+Dm5aZmKaXkwm4G9y8zMBBvYZMzWN9BJ/osbmp
76aanpK/9EVU0pNwXz/KlxQ0v5Xn2cB0ytsl5Hf9ECP51ByHX/U9LOYrCgUf
LRfERmYwiq8pbB/KRX0TMxlNX77hW/pRxG+icEnfzCzGUMouLr/pe1lCZXNS
/tR/pJaeln/1RjIrkfQ3vwNRJIe8
          "]], LineBox[CompressedData["
1:eJwVzFs2QgEAQNFrKA2oHyOgCFFXKlRePZS86YmIFCWDbPex1zpfJxILV9Mr
QRBEWRM/fPJGjzbPrBMjzgabJNhimx2S7LJHiuU4ZJ8MB2TJkeeQI44pUKTE
Caeccc4FZSpUqXFJnQZXNLnmhlvuuOeBR375YkCfDi2mjHjnhS4zvvnglT/G
DJkz4Z8nFpY/Kpw=
          "]]},
        Annotation[#, "Charting`Private`Tag$46831#2"]& ]}}], {}}, {{}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxd0zlOA0EQheESESEBAQEBIAshhBCLsdnd7GAWm0EiJEAQEZBwgDoKR5kj
cQSDeC/ov6VR6evXHUxNzeLrZ/M+FRGj3+ev/q+fQdSr1JyGZ+BZeA6ehxfg
JbgDL8Mr8Cq8Bq/DG/AmvAVvw114B+7BfXgX3oP34QP4ED6Cj+EBXGonHCfI
4ThFDscZcjjOkcNxgRyOS+RwXCG3PcfXtROOG+RwDJHDcauq/yJtz/2dquY8
bc/tvarmMm3P3YOq5iZtz8lI+/quafs7jGsX2X1NW31p4XisXWT3MW31rfV5
96FR1XuXpn6PtHWv9fln1Sftv+i+nG+qcvnQOfn7q0wAFORM2w==
       "]]}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}, "AxesInFront" -> True},
  PlotLabel->FormBox["\"Confirmed Cases- Bangladesh\"", TraditionalForm],
  PlotRange->{{1, 84}, {-91.85096674475517, 137.38791484880215`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7954556223950367`*^9, 3.795455690589888*^9, 3.7954570255132504`*^9, {
   3.795535726082219*^9, 3.795535732375514*^9}, 3.795535986785583*^9, 
   3.795536427912908*^9},
 CellLabel->
  "Out[168]=",ExpressionUUID->"eaf325f8-089d-473b-8810-e4cd48bac80b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BDconfirmedNLM", "@", 
  "\"\<ParameterConfidenceIntervalTable\>\""}]], "Input",
 CellChangeTimes->{{3.795455728435088*^9, 3.795455728696889*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"02768144-ccfa-4ce0-bdd7-a11375f4309c"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", \
"\<\"Confidence Interval\"\>"},
     {"k", "0.07122032199841505`", "0.09203476747764015`", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.1120828035218166`"}], ",", "0.2545234475186467`"}], 
       "}"}]},
     {"L", "38.96525792623864`", "15.963040047923673`", 
      RowBox[{"{", 
       RowBox[{"7.1721082961281795`", ",", "70.75840755634911`"}], "}"}]},
     {"t0", "24.99522919881412`", "19.302819841297076`", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "13.449668368002872`"}], ",", "63.440126765631106`"}], 
       "}"}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.795455729480625*^9, 3.795457031674258*^9, 
  3.795535996845772*^9, 3.795536474365864*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"2340b4a7-cb10-4e44-94d4-f83be10f7ad0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BDdaynum", " ", "=", " ", 
   RowBox[{
    RowBox[{"BDconfirmedCases", "[", 
     RowBox[{"[", 
      RowBox[{"-", "1"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"BDconfirmedNLM", "'"}], "[", "t", "]"}], ",", " ", 
       RowBox[{
        RowBox[{"BDconfirmedNLM", "''"}], "[", "t", "]"}]}], "}"}], ",", " ", 
     
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "1", ",", "60"}], "}"}], ",", " ", "\n", "  ", 
     RowBox[{"GridLines", " ", "\[Rule]", " ", "Automatic"}], ",", " ", 
     RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}]}], "]"}], ",", " ", 
   "\n", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Tooltip", "@", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"BDdaynum", ",", " ", 
         RowBox[{
          RowBox[{"BDconfirmedNLM", "'"}], "[", "BDdaynum", "]"}]}], "}"}], 
       "}"}]}], ",", " ", "\n", "  ", 
     RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"Red", ",", " ", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.795455750660467*^9, 3.7954557780978117`*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"f33e5ecd-d1cc-4214-872d-9fc2d55acb7c"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
P28+hKM=
        "]]},
      Annotation[#, "Charting`Private`Tag$47475#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
IQXz0e9//tjDgxtHs+LXs9D/Aa3SW3E=
        "]]},
      Annotation[#, "Charting`Private`Tag$47475#2"]& ]}, {}}, {{}, {
     {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[{{79., 0.05682301255367627}, {79., 0.05682301255367627}}]}, {
      {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6]}, {}}, {
      {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6]}, {}}, {
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[{{79., 0.05682301255367627}}]},
        RowBox[{"{", 
          RowBox[{"79.`", ",", "0.05682301255367627`"}], "}"}]],
       Annotation[#, {79., 0.05682301255367627}, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {Opacity[0.], PointBox[{{79., 0.05682301255367627}}]},
        RowBox[{"{", 
          RowBox[{"79.`", ",", "0.05682301255367627`"}], "}"}]],
       Annotation[#, {79., 0.05682301255367627}, "Tooltip"]& ]}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.795455783148965*^9, 3.7954570328791523`*^9, 
  3.795536002938739*^9, 3.795536477108206*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"dbf2ab86-765f-4169-bc11-122d660437fa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "End", " ", "of", " ", "epidemic", " ", "calculation", " ", "on", " ", 
   "the", " ", "assumption", " ", "that", " ", "the", " ", "last", " ", 
   "integer", " ", "case", " ", "per", " ", "day", " ", "signals", " ", "the",
    " ", "end", " ", "of", " ", "the", " ", 
   RowBox[{"epidemic", ".", "The"}], " ", "red", " ", "dot", " ", "on", " ", 
   "the", " ", "graph", " ", "above", " ", "shows", " ", "the", " ", 
   "current", " ", "point", " ", "on", " ", "the", " ", "first", " ", 
   "derivative", " ", 
   RowBox[{"curve", ".", " ", "The"}], " ", "second", " ", "derivative", " ", 
   "curve", " ", "is", " ", "also", " ", 
   RowBox[{"shown", "."}]}], "*)"}]], "Input",
 CellChangeTimes->{
  3.795536483806952*^9, {3.7955365399861298`*^9, 
   3.795536559140234*^9}},ExpressionUUID->"d10318b7-1c1b-4fd3-82a2-\
fd004a985096"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"end", " ", "=", " ", 
  RowBox[{"x", " ", "/.", " ", 
   RowBox[{
    RowBox[{"FindRoot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"BDconfirmedNLM", "'"}], "[", "x", "]"}], " ", "==", " ", 
       "1"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", "30"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}], "\n", 
 RowBox[{"DatePlus", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2020", ",", " ", "1", ",", " ", "21"}], "}"}], ",", " ", 
   RowBox[{"Ceiling", "@", "end"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7954558378734503`*^9, 3.795455838135395*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"32ee3488-d444-48b3-af06-7e159f0bca5e"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "lstol", 
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the merit function. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"", 2, 102, 6, 16726731422379051965, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.795455838935234*^9, 3.795456132532764*^9, 
  3.7954570352678957`*^9, 3.795536006115646*^9},
 CellLabel->
  "During evaluation of \
In[102]:=",ExpressionUUID->"7e2b81e4-9407-4ee4-b9b7-441cf0a590f0"],

Cell[BoxData["24.995183631127713`"], "Output",
 CellChangeTimes->{3.795455838949779*^9, 3.795456132546179*^9, 
  3.795457035281392*^9, 3.7955360061307993`*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"e261db89-e007-4a66-ab40-cd5e92342f98"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2020", ",", "2", ",", "15"}], "}"}]], "Output",
 CellChangeTimes->{3.795455838949779*^9, 3.795456132546179*^9, 
  3.795457035281392*^9, 3.795536006132833*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"d0b24d97-d66a-430d-a9e1-35cd858c3b90"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Logistic", " ", "Equation"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"DSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"f", "'"}], "[", "t", "]"}], "\[Equal]", 
         RowBox[{"k", " ", 
          RowBox[{"f", "[", "t", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"f", "[", "t", "]"}], "/", "L"}]}], ")"}]}]}], ",", 
        RowBox[{
         RowBox[{"f", "[", "t0", "]"}], "\[Equal]", 
         RowBox[{"L", "/", "2"}]}]}], "}"}], ",", 
      RowBox[{"f", "[", "t", "]"}], ",", "t"}], "]"}], "//", "FullSimplify"}],
    "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"k", " ", "t"}]], " ", "L"}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"k", " ", "t"}]], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"k", " ", "t0"}]]}]], "\[Equal]", 
     RowBox[{"L", "/", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "k"}], " ", 
           RowBox[{"(", 
            RowBox[{"t", "-", "t0"}], ")"}]}], ")"}]}]}], ")"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"logisticGrowth", "[", 
      RowBox[{"t_", ",", 
       RowBox[{"{", 
        RowBox[{"t0_", ",", "k_", ",", "L_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"L", "/", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "k"}], " ", 
           RowBox[{"(", 
            RowBox[{"t", "-", "t0"}], ")"}]}], ")"}]}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"logisticGrowth", "[", 
        RowBox[{"t", ",", 
         RowBox[{"{", 
          RowBox[{"t0", ",", "k", ",", "L"}], "}"}]}], "]"}], ",", "t"}], 
      "]"}], "\[Equal]", 
     RowBox[{"k", " ", 
      RowBox[{"logisticGrowth", "[", 
       RowBox[{"t", ",", 
        RowBox[{"{", 
         RowBox[{"t0", ",", "k", ",", "L"}], "}"}]}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{
         RowBox[{"logisticGrowth", "[", 
          RowBox[{"t", ",", 
           RowBox[{"{", 
            RowBox[{"t0", ",", "k", ",", "L"}], "}"}]}], "]"}], "/", "L"}]}], 
       ")"}]}]}], "//", "FullSimplify"}], "\[IndentingNewLine]", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"logisticGrowth", "[", 
         RowBox[{"t", ",", 
          RowBox[{"{", 
           RowBox[{"t0", ",", "k", ",", "L"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "2"}], "}"}]}], "]"}], "\[Equal]", "0"}], ",", "t",
      ",", "Reals"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"logisticGrowth", "[", 
        RowBox[{"t", ",", 
         RowBox[{"{", 
          RowBox[{"20", ",", "0.2", ",", "100"}], "}"}]}], "]"}], ",", 
       RowBox[{"Evaluate", "@", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"logisticGrowth", "[", 
           RowBox[{"t", ",", 
            RowBox[{"{", 
             RowBox[{"20", ",", "0.2", ",", "100"}], "}"}]}], "]"}], ",", 
          "t"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "1", ",", "40"}], "}"}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
   
   RowBox[{"logisticGrowth", "[", 
    RowBox[{"x", ",", 
     RowBox[{"{", 
      RowBox[{"\[Mu]", ",", 
       RowBox[{"1", "/", "\[Sigma]"}], ",", "1"}], "}"}]}], "]"}], "\n", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"LogisticDistribution", "[", 
      RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "x"}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.795536015843508*^9, 3.795536110408347*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"d91271b3-8632-4b1c-852b-aa8491e91b4e"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "ifun", 
   "\"Inverse functions are being used by \
\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\), so some solutions may not be found; use \
Reduce for complete solution information.\"", 2, 105, 8, 16726731422379051965,
    "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.795536050141453*^9, 3.795536111249653*^9},
 CellLabel->
  "During evaluation of \
In[105]:=",ExpressionUUID->"1afaeb60-50bb-4247-9516-b071a0ace2e1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"f", "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"k", " ", "t"}]], " ", "L"}], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"k", " ", "t"}]], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"k", " ", "t0"}]]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.795536050185583*^9, 3.7955361112580547`*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"2a580202-88fe-4f5a-ac72-b325d7e23903"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.795536050185583*^9, 3.7955361112856493`*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"e2e8e369-a83f-4a36-9970-3de038346930"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.795536050185583*^9, 3.795536111293168*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"25a4d5de-f5b5-43fd-b153-fb3d2cd1a655"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"t", "\[Rule]", "t0"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.795536050185583*^9, 3.795536111614332*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"e86db72e-84a5-4d34-bb80-d3a62378dd2b"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0ms01AkYBvCZSUJERGlJZpLLoHEJI+08/CvJpW3E/LOVRTZFoShdDE2m
sjpqLVOzbSi5dES6nFKbS6ZVIrmNShc5MzkKrXEr0szOfnjPc35fnufLaxkZ
z42mUSiUQPX9n6qFpVIKZYSTn9c6vv4YFRq4ZKBijXDcXK//8iSLCq2YC/7f
I0Y43OPfxgJFVBhWn3k4JRnh7Fgqzo8tp8KKTKkYPang1M0X7VBIqfA/7yeU
649xpDWVtbb2NJxbNOT6xGKS08BMD//1LQ0rTJ1yz3BmOB3aRyU9wRrYx9Us
3yvRwJvv9+q3yuYgzj386P5JHfSkrZJM1M/FfrYigik0gFWntynNwADt7JON
uu1GIBf0q2xbDVHXxGVclJtAW6/W2kJijKAHozD3XIyqPLvM6GRTmPeUinXT
zVF36RQrvMQcNYRfsnTdUnzrYkfc07dETbMN/6/Plqg93RaxoIsB4Q+MWasO
MxAjKmNIJcsxTCmzmq9cBg9697gD1Q7FC8/Z9F5eji0O99/vHHeA1WRhaQbT
Bh8+qD7ytZ0wOdt4Dl1qi+0unbd3ZbhgZ7mRxpcDTLyUi6+mrXRD4SKH1KIZ
ezRkeZydO+YB27tV3b5Fjojyy8jOt/NCTbZ1d58JC1fnyYbfR3KQ3cO8cWGI
hbWvHhuHZHljReJEWGKtE17b0a+ZJxG4HdvS4CxwhpxPKRUErEUf/+XihFAX
iCx0Ku+QvhidULDEZq6w9Et25/v6ofNum/G7d654OigblzD9sTVH/in/xkpQ
R/eGPXMKRFPbbL7/ATfoTVuWlmhtRK/1VmqSvztSDmfJ6g/9hH+aDgZXm3lg
cKDEOm77JmQ/L4wa6PVAmqo0aK41F5TPyqjcW2yMXtHKTFNwEZqwm25/yBNV
9tenRQXBOLr6wvVez1XYnWK3RcdrMzYwqA76el6oqFq0YVb3ZszEJcXYtXvh
XqfF/bW8EIQ+N8t9WLwaioK6iwldIcjN60hdE/cj+gTvteheobhcEugmc+Tg
hm5lC08UCvsB/r9KCiBk6VkmDYViqvItXRAFmLEHYzqceVhM4wURrcAlsZwe
lMxD0bRzhKG7N+47hZc2VvCwpNg4+MV5b4g+notPf83D8GvD1T00H0ROMJbs
0iRR+chEszPaB74vmGFfbUi84KbeedXogyNmjzbx1pHYvEe5fQmLgFHDlZJn
ESQk7BP9ZA6Bs+MvN0kPkvga2y7QzyUQcm1DJiuFhGO+mUVjHgHt5rGMLLX/
pN3iuYgJLGs71oRDJPY19z7RKyTwcEdBVtlhEvRt7PKGCgL9R1Ys2JNKQpA+
FG/fRECo7HFtFpCovumuK3tKoEPG8LQ4TuKzXFAmbiGg3GirtV/tMD/TPs02
9d68CaVpBglnw3Xcvm4CCTNhP0cLSfQVFbiK5AT+Tj4wrDhJwqT7U1tAP4Eu
55vZPqdIBGi57Zk1QCCxoXU6R+3quJbihEECx2tYri6ZJM6unDLxHyXwe5H6
VX8j0bhzzS3quLrvO5NZr/aM+MzG6gkCGjO0sXlZJGKUVqespggM9n7pL1c7
n5W47M00Acc/eEbTandFPqjPmSEwLFyuu/40CZ28Odv8lAQC4oXteWrjMXdK
pSIQO5YbJVP7P0EPKXo=
       "]]},
     Annotation[#, "Charting`Private`Tag$31481#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
EeG9e/IuNrD/B6as3P8=
       "]]},
     Annotation[#, "Charting`Private`Tag$31481#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.0000007959183674`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.795536050185583*^9, 3.795536111657332*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"6137a687-6fb2-40d1-ae32-304c90f68b8f"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"1", "+", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"]}]]}]]], "Output",
 CellChangeTimes->{3.795536050185583*^9, 3.7955361116668453`*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"4de09caf-7879-434f-9a04-d88a4974c0d3"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"1", "+", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"]}]]}]]], "Output",
 CellChangeTimes->{3.795536050185583*^9, 3.795536111670699*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"fb01260d-580f-4a61-b710-94f266913063"]
}, Open  ]]
},
WindowSize->{1154, 755},
WindowMargins->{{38, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6d905985-8cae-43b1-9150-911d0496b251"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 532, 14, 157, "Input",ExpressionUUID->"255cf41d-e677-4f67-b14d-45f5e98b2c1f"],
Cell[1115, 38, 285, 5, 34, "Output",ExpressionUUID->"0b5d8f3e-5ce7-4852-832f-49f3f6ba73c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1437, 48, 589, 15, 157, "Input",ExpressionUUID->"c1be3434-a930-40d2-9d7e-2a13779cf06f"],
Cell[2029, 65, 286, 5, 34, "Output",ExpressionUUID->"404221ad-53dc-4f00-bb63-f163763af1d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2352, 75, 435, 12, 52, "Input",ExpressionUUID->"8963f6a8-ce8f-4e99-97b3-6d36257e73cc"],
Cell[2790, 89, 197252, 3739, 625, "Output",ExpressionUUID->"5b4b1896-59b5-4560-8c10-ff34a08e927c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200079, 3833, 424, 12, 52, "Input",ExpressionUUID->"5d06a840-136d-4b62-bd15-c9242e45b9f1"],
Cell[200506, 3847, 197250, 3739, 625, "Output",ExpressionUUID->"ab08f123-d3a1-41d9-ac1a-e7c93052752a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[397793, 7591, 441, 12, 73, "Input",ExpressionUUID->"c756a31a-e638-476f-8a82-eb5db928da77"],
Cell[398237, 7605, 250, 4, 34, "Output",ExpressionUUID->"78bb8f3a-fc81-4de4-acaa-796e3475013f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[398524, 7614, 462, 13, 30, "Input",ExpressionUUID->"fbff30f4-0f87-4ccd-b55e-5d0228481f47"],
Cell[398989, 7629, 359, 10, 53, "Output",ExpressionUUID->"9ab0308e-5048-45e8-b46d-f40caca675eb"]
}, Open  ]],
Cell[399363, 7642, 276, 6, 30, "Input",ExpressionUUID->"52f238f9-dbf6-45a1-a27b-78b1424d1483"],
Cell[399642, 7650, 670, 17, 94, "Input",ExpressionUUID->"cd0f066f-2759-44fe-9f14-e58b92708d11"],
Cell[400315, 7669, 154, 3, 30, InheritFromParent,ExpressionUUID->"14bd0ad2-3f51-4e1f-90ed-f02c85f8ecbf"],
Cell[400472, 7674, 697, 19, 73, "Input",ExpressionUUID->"ec43c796-01d9-4e8b-a2f6-f50d497bb09f"],
Cell[401172, 7695, 747, 20, 94, "Input",ExpressionUUID->"1f7bbbc6-358b-4462-97ca-ace0539cf230"],
Cell[CellGroupData[{
Cell[401944, 7719, 834, 22, 52, "Input",ExpressionUUID->"e6ca94b2-fa2c-44fe-b046-e8014f78734f"],
Cell[402781, 7743, 2152, 52, 264, "Output",ExpressionUUID->"8dea785f-9be5-49e0-8b54-05e819e0b9d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[404970, 7800, 647, 16, 94, "Input",ExpressionUUID->"b58f81a4-1441-49a3-82f8-82232589211f"],
Cell[405620, 7818, 519, 11, 34, "Output",ExpressionUUID->"2952d492-e634-4775-a15e-7d15fbea3ec0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[406176, 7834, 1896, 49, 178, "Input",ExpressionUUID->"47fdb9e3-6d56-4681-8902-2ec6fff52544"],
Cell[408075, 7885, 35358, 610, 244, "Output",ExpressionUUID->"fadaddee-6860-4307-bcee-c6217252488a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[443470, 8500, 186, 4, 30, "Input",ExpressionUUID->"46f2941b-f66e-4063-88c5-618983ece24a"],
Cell[443659, 8506, 1293, 29, 75, "Output",ExpressionUUID->"c8ec96eb-e995-414c-951f-c22ce61d2417"]
}, Open  ]],
Cell[CellGroupData[{
Cell[444989, 8540, 1320, 38, 115, "Input",ExpressionUUID->"d55c30bc-95da-42ff-8986-792c731d6f83"],
Cell[446312, 8580, 27723, 479, 236, "Output",ExpressionUUID->"8e15cd9e-9a84-4383-ac30-5621312cdc04"]
}, Open  ]],
Cell[CellGroupData[{
Cell[474072, 9064, 655, 16, 94, "Input",ExpressionUUID->"f7e044f9-3869-4efa-84b9-e7caa33131e9"],
Cell[474730, 9082, 471, 10, 34, "Output",ExpressionUUID->"339d4093-d496-4c96-a214-0f23f1ab1c47"]
}, Open  ]],
Cell[CellGroupData[{
Cell[475238, 9097, 1920, 48, 199, "Input",ExpressionUUID->"d3ad6d89-cb23-4605-b29d-33701b409f46"],
Cell[477161, 9147, 35604, 615, 238, "Output",ExpressionUUID->"0da4bf49-bb8d-46d9-b99d-c5b773f173d6"]
}, Open  ]],
Cell[512780, 9765, 401, 6, 30, "Input",ExpressionUUID->"7e6620b8-2f5f-4f1e-bed5-d00e7f5a6115"],
Cell[513184, 9773, 156, 3, 30, "Input",ExpressionUUID->"4a2d9367-60fd-4684-9b7e-c5a773cef514"],
Cell[CellGroupData[{
Cell[513365, 9780, 144, 2, 30, "Input",ExpressionUUID->"b507c3a5-0e30-4649-8a53-a302d915c67a"],
Cell[513512, 9784, 356, 9, 24, "Message",ExpressionUUID->"ca28837c-8cdb-42aa-9e5d-9e17ac22092b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[513905, 9798, 279, 7, 30, InheritFromParent,ExpressionUUID->"28d072b4-694d-4672-b1a5-ce587a08f30f"],
Cell[514187, 9807, 353, 9, 24, "Message",ExpressionUUID->"d8601332-4ddb-40ac-b5d6-b78c7a999c31"],
Cell[514543, 9818, 247, 5, 34, "Output",ExpressionUUID->"142a3daf-f4bb-46fa-a600-3b633952f810"]
}, Open  ]],
Cell[514805, 9826, 144, 2, 30, "Input",ExpressionUUID->"46cf6a3e-ddf5-4fd0-b21c-8df8f3daf14d"],
Cell[514952, 9830, 152, 3, 30, "Input",ExpressionUUID->"46854127-1fd5-4de8-8fcf-4258f92bd1ea"],
Cell[515107, 9835, 144, 2, 30, "Input",ExpressionUUID->"43fd148c-1560-4616-8c9f-f07da633212e"],
Cell[515254, 9839, 152, 3, 30, "Input",ExpressionUUID->"c51695f3-a14a-4036-8937-954a82d3e491"],
Cell[CellGroupData[{
Cell[515431, 9846, 185, 4, 30, "Input",ExpressionUUID->"0d1b9216-fcb9-4a27-86d3-219a063ae6d4"],
Cell[515619, 9852, 1302, 29, 75, "Output",ExpressionUUID->"76778684-cec2-4776-99e8-77f5053614bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[516958, 9886, 1323, 38, 115, "Input",ExpressionUUID->"2ed593bc-6e02-43e3-b1ef-0d810f77b70b"],
Cell[518284, 9926, 19563, 345, 236, "Output",ExpressionUUID->"59cd8ffe-698c-46a4-8a13-be0147608db7"]
}, Open  ]],
Cell[537862, 10274, 788, 20, 115, "Input",ExpressionUUID->"5464a03f-01a8-4987-841b-990527d0b85a"],
Cell[538653, 10296, 699, 19, 73, "Input",ExpressionUUID->"31e305af-038e-4250-a26a-b4301effe142"],
Cell[539355, 10317, 700, 19, 73, "Input",ExpressionUUID->"4c76d7fa-773c-4ae4-8a9f-18615e3ee2f9"],
Cell[CellGroupData[{
Cell[540080, 10340, 889, 23, 52, "Input",ExpressionUUID->"ba90cc9d-dad3-429d-a69c-5dbb00c75030"],
Cell[540972, 10365, 2013, 49, 265, "Output",ExpressionUUID->"d26ccec6-7ade-423e-a8d1-9abb5abc418e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[543022, 10419, 718, 17, 94, "Input",ExpressionUUID->"30405b9d-08e0-40d7-b4ed-36b894351db1"],
Cell[543743, 10438, 543, 12, 24, "Message",ExpressionUUID->"dd4f1fb1-d24e-4228-9c8d-5d87b795f399"],
Cell[544289, 10452, 477, 10, 34, "Output",ExpressionUUID->"34324a28-18a7-4828-a940-8054ac13b247"]
}, Open  ]],
Cell[CellGroupData[{
Cell[544803, 10467, 2007, 51, 178, "Input",ExpressionUUID->"c5d3beae-fd4f-4ab0-b0f3-017b7c86924f"],
Cell[546813, 10520, 26165, 460, 246, "Output",ExpressionUUID->"dbd59209-8651-4c85-925e-b173e24992b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[573015, 10985, 253, 5, 30, "Input",ExpressionUUID->"51424980-8d60-4e97-87d8-da715831a947"],
Cell[573271, 10992, 1366, 33, 75, "Output",ExpressionUUID->"3a0e22ff-e3b1-4e46-9ca6-6f2ac0abc60b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[574674, 11030, 1451, 40, 115, "Input",ExpressionUUID->"b44d1d2e-9b5f-4a40-ac65-c339fb31dc08"],
Cell[576128, 11072, 16866, 303, 231, "Output",ExpressionUUID->"44015865-721d-4a51-87e5-3e8df9b0c49c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[593031, 11380, 855, 23, 52, "Input",ExpressionUUID->"b13f0005-9034-4a2a-af99-440d28955411"],
Cell[593889, 11405, 620, 12, 42, "Message",ExpressionUUID->"199b31e1-14d7-4a0c-84e9-b5eb0a58ae87"],
Cell[594512, 11419, 238, 3, 34, "Output",ExpressionUUID->"4c8ad3b4-c662-4a2a-8823-77f5dd6a4dcf"],
Cell[594753, 11424, 279, 5, 34, "Output",ExpressionUUID->"b8527c28-47eb-4c3e-933c-cf2daf8239a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[595069, 11434, 727, 18, 94, "Input",ExpressionUUID->"23a45356-5f4d-47dc-9c22-47880ac5ad77"],
Cell[595799, 11454, 513, 11, 24, "Message",ExpressionUUID->"869fff60-63ae-4940-99e5-ec3b9e027600"],
Cell[596315, 11467, 472, 10, 34, "Output",ExpressionUUID->"81d54283-c25c-473a-b25d-fbfe0f8303a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[596824, 11482, 2079, 52, 199, "Input",ExpressionUUID->"3fc7468b-107e-47f8-b62f-50e2f23a5584"],
Cell[598906, 11536, 13818, 256, 250, "Output",ExpressionUUID->"eaf325f8-089d-473b-8810-e4cd48bac80b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[612761, 11797, 253, 5, 30, "Input",ExpressionUUID->"02768144-ccfa-4ce0-bdd7-a11375f4309c"],
Cell[613017, 11804, 1309, 32, 75, "Output",ExpressionUUID->"2340b4a7-cb10-4e44-94d4-f83be10f7ad0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[614363, 11841, 1411, 40, 115, "Input",ExpressionUUID->"f33e5ecd-d1cc-4214-872d-9fc2d55acb7c"],
Cell[615777, 11883, 16648, 298, 233, "Output",ExpressionUUID->"dbf2ab86-765f-4169-bc11-122d660437fa"]
}, Open  ]],
Cell[632440, 12184, 880, 17, 73, "Input",ExpressionUUID->"d10318b7-1c1b-4fd3-82a2-fd004a985096"],
Cell[CellGroupData[{
Cell[633345, 12205, 725, 20, 52, "Input",ExpressionUUID->"32ee3488-d444-48b3-af06-7e159f0bca5e"],
Cell[634073, 12227, 669, 13, 42, "Message",ExpressionUUID->"7e2b81e4-9407-4ee4-b9b7-441cf0a590f0"],
Cell[634745, 12242, 242, 4, 34, "Output",ExpressionUUID->"e261db89-e007-4a66-ab40-cd5e92342f98"],
Cell[634990, 12248, 281, 6, 34, "Output",ExpressionUUID->"d0b24d97-d66a-430d-a9e1-35cd858c3b90"]
}, Open  ]],
Cell[CellGroupData[{
Cell[635308, 12259, 4427, 129, 373, "Input",ExpressionUUID->"d91271b3-8632-4b1c-852b-aa8491e91b4e"],
Cell[639738, 12390, 475, 11, 24, "Message",ExpressionUUID->"1afaeb60-50bb-4247-9516-b071a0ace2e1"],
Cell[640216, 12403, 568, 16, 57, "Output",ExpressionUUID->"2a580202-88fe-4f5a-ac72-b325d7e23903"],
Cell[640787, 12421, 180, 3, 34, "Output",ExpressionUUID->"e2e8e369-a83f-4a36-9970-3de038346930"],
Cell[640970, 12426, 178, 3, 34, "Output",ExpressionUUID->"25a4d5de-f5b5-43fd-b153-fb3d2cd1a655"],
Cell[641151, 12431, 251, 6, 34, "Output",ExpressionUUID->"e86db72e-84a5-4d34-bb80-d3a62378dd2b"],
Cell[641405, 12439, 8659, 164, 237, "Output",ExpressionUUID->"6137a687-6fb2-40d1-ae32-304c90f68b8f"],
Cell[650067, 12605, 341, 9, 58, "Output",ExpressionUUID->"4de09caf-7879-434f-9a04-d88a4974c0d3"],
Cell[650411, 12616, 339, 9, 58, "Output",ExpressionUUID->"fb01260d-580f-4a61-b710-94f266913063"]
}, Open  ]]
}
]
*)

